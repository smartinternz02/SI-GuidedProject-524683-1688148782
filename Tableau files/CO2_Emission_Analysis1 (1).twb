<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <BasicButtonObject />
    <BasicButtonObjectTextSupport />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Country Parameter' datatype='string' name='[Country Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;South Africa&quot;'>
        <calculation class='tableau' formula='&quot;South Africa&quot;' />
        <members>
          <member value='&quot;Afghanistan&quot;' />
          <member value='&quot;Albania&quot;' />
          <member value='&quot;Algeria&quot;' />
          <member value='&quot;Andorra&quot;' />
          <member value='&quot;Angola&quot;' />
          <member value='&quot;Anguilla&quot;' />
          <member value='&quot;Antigua and Barbuda&quot;' />
          <member value='&quot;Argentina&quot;' />
          <member value='&quot;Armenia&quot;' />
          <member value='&quot;Aruba&quot;' />
          <member value='&quot;Austria&quot;' />
          <member value='&quot;Azerbaijan&quot;' />
          <member value='&quot;Bahamas&quot;' />
          <member value='&quot;Bahrain&quot;' />
          <member value='&quot;Bangladesh&quot;' />
          <member value='&quot;Barbados&quot;' />
          <member value='&quot;Belarus&quot;' />
          <member value='&quot;Belgium&quot;' />
          <member value='&quot;Belize&quot;' />
          <member value='&quot;Benin&quot;' />
          <member value='&quot;Bermuda&quot;' />
          <member value='&quot;Bhutan&quot;' />
          <member value='&quot;Bolivia&quot;' />
          <member value='&quot;Bonaire Sint Eustatius and Saba&quot;' />
          <member value='&quot;Bosnia and Herzegovina&quot;' />
          <member value='&quot;Botswana&quot;' />
          <member value='&quot;Brazil&quot;' />
          <member value='&quot;British Virgin Islands&quot;' />
          <member value='&quot;Brunei&quot;' />
          <member value='&quot;Bulgaria&quot;' />
          <member value='&quot;Burkina Faso&quot;' />
          <member value='&quot;Burundi&quot;' />
          <member value='&quot;Cambodia&quot;' />
          <member value='&quot;Cameroon&quot;' />
          <member value='&quot;Canada&quot;' />
          <member value='&quot;Cape Verde&quot;' />
          <member value='&quot;Central African Republic&quot;' />
          <member value='&quot;Chad&quot;' />
          <member value='&quot;Chile&quot;' />
          <member value='&quot;China&quot;' />
          <member value='&quot;Christmas Island&quot;' />
          <member value='&quot;Colombia&quot;' />
          <member value='&quot;Comoros&quot;' />
          <member value='&quot;Congo&quot;' />
          <member value='&quot;Cook Islands&quot;' />
          <member value='&quot;Costa Rica&quot;' />
          <member value='&quot;Cote d&apos;Ivoire&quot;' />
          <member value='&quot;Croatia&quot;' />
          <member value='&quot;Cuba&quot;' />
          <member value='&quot;Curacao&quot;' />
          <member value='&quot;Cyprus&quot;' />
          <member value='&quot;Czechia&quot;' />
          <member value='&quot;Democratic Republic of Congo&quot;' />
          <member value='&quot;Denmark&quot;' />
          <member value='&quot;Djibouti&quot;' />
          <member value='&quot;Dominica&quot;' />
          <member value='&quot;Dominican Republic&quot;' />
          <member value='&quot;Ecuador&quot;' />
          <member value='&quot;Egypt&quot;' />
          <member value='&quot;El Salvador&quot;' />
          <member value='&quot;Equatorial Guinea&quot;' />
          <member value='&quot;Eritrea&quot;' />
          <member value='&quot;Estonia&quot;' />
          <member value='&quot;Eswatini&quot;' />
          <member value='&quot;Ethiopia&quot;' />
          <member value='&quot;EU-27&quot;' />
          <member value='&quot;EU-28&quot;' />
          <member value='&quot;Faeroe Islands&quot;' />
          <member value='&quot;Fiji&quot;' />
          <member value='&quot;Finland&quot;' />
          <member value='&quot;France&quot;' />
          <member value='&quot;French Equatorial Africa&quot;' />
          <member value='&quot;French Guiana&quot;' />
          <member value='&quot;French Polynesia&quot;' />
          <member value='&quot;French West Africa&quot;' />
          <member value='&quot;Gabon&quot;' />
          <member value='&quot;Gambia&quot;' />
          <member value='&quot;Georgia&quot;' />
          <member value='&quot;Germany&quot;' />
          <member value='&quot;Ghana&quot;' />
          <member value='&quot;Greece&quot;' />
          <member value='&quot;Greenland&quot;' />
          <member value='&quot;Grenada&quot;' />
          <member value='&quot;Guadeloupe&quot;' />
          <member value='&quot;Guatemala&quot;' />
          <member value='&quot;Guinea&quot;' />
          <member value='&quot;Guinea-Bissau&quot;' />
          <member value='&quot;Guyana&quot;' />
          <member value='&quot;Haiti&quot;' />
          <member value='&quot;Honduras&quot;' />
          <member value='&quot;Hong Kong&quot;' />
          <member value='&quot;Hungary&quot;' />
          <member value='&quot;Iceland&quot;' />
          <member value='&quot;Indonesia&quot;' />
          <member value='&quot;International transport&quot;' />
          <member value='&quot;Iran&quot;' />
          <member value='&quot;Iraq&quot;' />
          <member value='&quot;Ireland&quot;' />
          <member value='&quot;Israel&quot;' />
          <member value='&quot;Italy&quot;' />
          <member value='&quot;Jamaica&quot;' />
          <member value='&quot;Japan&quot;' />
          <member value='&quot;Jordan&quot;' />
          <member value='&quot;Kazakhstan&quot;' />
          <member value='&quot;Kenya&quot;' />
          <member value='&quot;Kiribati&quot;' />
          <member value='&quot;Kosovo&quot;' />
          <member value='&quot;Kuwait&quot;' />
          <member value='&quot;Kuwaiti Oil Fires&quot;' />
          <member value='&quot;Kyrgyzstan&quot;' />
          <member value='&quot;Laos&quot;' />
          <member value='&quot;Latvia&quot;' />
          <member value='&quot;Lebanon&quot;' />
          <member value='&quot;Leeward Islands&quot;' />
          <member value='&quot;Lesotho&quot;' />
          <member value='&quot;Liberia&quot;' />
          <member value='&quot;Libya&quot;' />
          <member value='&quot;Liechtenstein&quot;' />
          <member value='&quot;Lithuania&quot;' />
          <member value='&quot;Luxembourg&quot;' />
          <member value='&quot;Macao&quot;' />
          <member value='&quot;Madagascar&quot;' />
          <member value='&quot;Malawi&quot;' />
          <member value='&quot;Malaysia&quot;' />
          <member value='&quot;Maldives&quot;' />
          <member value='&quot;Mali&quot;' />
          <member value='&quot;Malta&quot;' />
          <member value='&quot;Marshall Islands&quot;' />
          <member value='&quot;Martinique&quot;' />
          <member value='&quot;Mauritania&quot;' />
          <member value='&quot;Mauritius&quot;' />
          <member value='&quot;Mayotte&quot;' />
          <member value='&quot;Mexico&quot;' />
          <member value='&quot;Micronesia&quot;' />
          <member value='&quot;Micronesia (country)&quot;' />
          <member value='&quot;Moldova&quot;' />
          <member value='&quot;Mongolia&quot;' />
          <member value='&quot;Montenegro&quot;' />
          <member value='&quot;Montserrat&quot;' />
          <member value='&quot;Morocco&quot;' />
          <member value='&quot;Mozambique&quot;' />
          <member value='&quot;Myanmar&quot;' />
          <member value='&quot;Namibia&quot;' />
          <member value='&quot;Nauru&quot;' />
          <member value='&quot;Nepal&quot;' />
          <member value='&quot;Netherlands&quot;' />
          <member value='&quot;New Caledonia&quot;' />
          <member value='&quot;New Zealand&quot;' />
          <member value='&quot;Nicaragua&quot;' />
          <member value='&quot;Niger&quot;' />
          <member value='&quot;Nigeria&quot;' />
          <member value='&quot;Niue&quot;' />
          <member value='&quot;North Macedonia&quot;' />
          <member value='&quot;Norway&quot;' />
          <member value='&quot;Oceania&quot;' />
          <member value='&quot;Oman&quot;' />
          <member value='&quot;Pakistan&quot;' />
          <member value='&quot;Palau&quot;' />
          <member value='&quot;Palestine&quot;' />
          <member value='&quot;Panama&quot;' />
          <member value='&quot;Panama Canal Zone&quot;' />
          <member value='&quot;Papua New Guinea&quot;' />
          <member value='&quot;Paraguay&quot;' />
          <member value='&quot;Peru&quot;' />
          <member value='&quot;Philippines&quot;' />
          <member value='&quot;Poland&quot;' />
          <member value='&quot;Portugal&quot;' />
          <member value='&quot;Puerto Rico&quot;' />
          <member value='&quot;Qatar&quot;' />
          <member value='&quot;Reunion&quot;' />
          <member value='&quot;Romania&quot;' />
          <member value='&quot;Russia&quot;' />
          <member value='&quot;Rwanda&quot;' />
          <member value='&quot;Ryukyu Islands&quot;' />
          <member value='&quot;Saint Helena&quot;' />
          <member value='&quot;Saint Kitts and Nevis&quot;' />
          <member value='&quot;Saint Lucia&quot;' />
          <member value='&quot;Saint Pierre and Miquelon&quot;' />
          <member value='&quot;Saint Vincent and the Grenadines&quot;' />
          <member value='&quot;Samoa&quot;' />
          <member value='&quot;Sao Tome and Principe&quot;' />
          <member value='&quot;Saudi Arabia&quot;' />
          <member value='&quot;Senegal&quot;' />
          <member value='&quot;Serbia&quot;' />
          <member value='&quot;Seychelles&quot;' />
          <member value='&quot;Sierra Leone&quot;' />
          <member value='&quot;Singapore&quot;' />
          <member value='&quot;Sint Maarten (Dutch part)&quot;' />
          <member value='&quot;Slovakia&quot;' />
          <member value='&quot;Slovenia&quot;' />
          <member value='&quot;Solomon Islands&quot;' />
          <member value='&quot;Somalia&quot;' />
          <member value='&quot;South Africa&quot;' />
          <member value='&quot;South Korea&quot;' />
          <member value='&quot;South Sudan&quot;' />
          <member value='&quot;Spain&quot;' />
          <member value='&quot;Sri Lanka&quot;' />
          <member value='&quot;St. Kitts-Nevis-Anguilla&quot;' />
          <member value='&quot;Sudan&quot;' />
          <member value='&quot;Suriname&quot;' />
          <member value='&quot;Sweden&quot;' />
          <member value='&quot;Switzerland&quot;' />
          <member value='&quot;Syria&quot;' />
          <member value='&quot;Taiwan&quot;' />
          <member value='&quot;Tajikistan&quot;' />
          <member value='&quot;Tanzania&quot;' />
          <member value='&quot;Thailand&quot;' />
          <member value='&quot;Timor&quot;' />
          <member value='&quot;Togo&quot;' />
          <member value='&quot;Tonga&quot;' />
          <member value='&quot;Trinidad and Tobago&quot;' />
          <member value='&quot;Tunisia&quot;' />
          <member value='&quot;Turkey&quot;' />
          <member value='&quot;Turkmenistan&quot;' />
          <member value='&quot;Turks and Caicos Islands&quot;' />
          <member value='&quot;Tuvalu&quot;' />
          <member value='&quot;Uganda&quot;' />
          <member value='&quot;Ukraine&quot;' />
          <member value='&quot;United Arab Emirates&quot;' />
          <member value='&quot;United Kingdom&quot;' />
          <member value='&quot;United States&quot;' />
          <member value='&quot;Uruguay&quot;' />
          <member value='&quot;Uzbekistan&quot;' />
          <member value='&quot;Vanuatu&quot;' />
          <member value='&quot;Venezuela&quot;' />
          <member value='&quot;Vietnam&quot;' />
          <member value='&quot;Wallis and Futuna&quot;' />
          <member value='&quot;Yemen&quot;' />
          <member value='&quot;Zambia&quot;' />
          <member value='&quot;Zimbabwe&quot;' />
        </members>
      </column>
      <column caption='country_parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Romania&quot;'>
        <calculation class='tableau' formula='&quot;Romania&quot;' />
        <members>
          <member value='&quot;Afghanistan&quot;' />
          <member value='&quot;Albania&quot;' />
          <member value='&quot;Algeria&quot;' />
          <member value='&quot;Andorra&quot;' />
          <member value='&quot;Angola&quot;' />
          <member value='&quot;Anguilla&quot;' />
          <member value='&quot;Antigua and Barbuda&quot;' />
          <member value='&quot;Argentina&quot;' />
          <member value='&quot;Armenia&quot;' />
          <member value='&quot;Aruba&quot;' />
          <member value='&quot;Austria&quot;' />
          <member value='&quot;Azerbaijan&quot;' />
          <member value='&quot;Bahamas&quot;' />
          <member value='&quot;Bahrain&quot;' />
          <member value='&quot;Bangladesh&quot;' />
          <member value='&quot;Barbados&quot;' />
          <member value='&quot;Belarus&quot;' />
          <member value='&quot;Belgium&quot;' />
          <member value='&quot;Belize&quot;' />
          <member value='&quot;Benin&quot;' />
          <member value='&quot;Bermuda&quot;' />
          <member value='&quot;Bhutan&quot;' />
          <member value='&quot;Bolivia&quot;' />
          <member value='&quot;Bonaire Sint Eustatius and Saba&quot;' />
          <member value='&quot;Bosnia and Herzegovina&quot;' />
          <member value='&quot;Botswana&quot;' />
          <member value='&quot;Brazil&quot;' />
          <member value='&quot;British Virgin Islands&quot;' />
          <member value='&quot;Brunei&quot;' />
          <member value='&quot;Bulgaria&quot;' />
          <member value='&quot;Burkina Faso&quot;' />
          <member value='&quot;Burundi&quot;' />
          <member value='&quot;Cambodia&quot;' />
          <member value='&quot;Cameroon&quot;' />
          <member value='&quot;Canada&quot;' />
          <member value='&quot;Cape Verde&quot;' />
          <member value='&quot;Central African Republic&quot;' />
          <member value='&quot;Chad&quot;' />
          <member value='&quot;Chile&quot;' />
          <member value='&quot;China&quot;' />
          <member value='&quot;Christmas Island&quot;' />
          <member value='&quot;Colombia&quot;' />
          <member value='&quot;Comoros&quot;' />
          <member value='&quot;Congo&quot;' />
          <member value='&quot;Cook Islands&quot;' />
          <member value='&quot;Costa Rica&quot;' />
          <member value='&quot;Cote d&apos;Ivoire&quot;' />
          <member value='&quot;Croatia&quot;' />
          <member value='&quot;Cuba&quot;' />
          <member value='&quot;Curacao&quot;' />
          <member value='&quot;Cyprus&quot;' />
          <member value='&quot;Czechia&quot;' />
          <member value='&quot;Democratic Republic of Congo&quot;' />
          <member value='&quot;Denmark&quot;' />
          <member value='&quot;Djibouti&quot;' />
          <member value='&quot;Dominica&quot;' />
          <member value='&quot;Dominican Republic&quot;' />
          <member value='&quot;Ecuador&quot;' />
          <member value='&quot;Egypt&quot;' />
          <member value='&quot;El Salvador&quot;' />
          <member value='&quot;Equatorial Guinea&quot;' />
          <member value='&quot;Eritrea&quot;' />
          <member value='&quot;Estonia&quot;' />
          <member value='&quot;Eswatini&quot;' />
          <member value='&quot;Ethiopia&quot;' />
          <member value='&quot;Faeroe Islands&quot;' />
          <member value='&quot;Fiji&quot;' />
          <member value='&quot;Finland&quot;' />
          <member value='&quot;France&quot;' />
          <member value='&quot;French Equatorial Africa&quot;' />
          <member value='&quot;French Guiana&quot;' />
          <member value='&quot;French Polynesia&quot;' />
          <member value='&quot;French West Africa&quot;' />
          <member value='&quot;Gabon&quot;' />
          <member value='&quot;Gambia&quot;' />
          <member value='&quot;Georgia&quot;' />
          <member value='&quot;Germany&quot;' />
          <member value='&quot;Ghana&quot;' />
          <member value='&quot;Greece&quot;' />
          <member value='&quot;Greenland&quot;' />
          <member value='&quot;Grenada&quot;' />
          <member value='&quot;Guadeloupe&quot;' />
          <member value='&quot;Guatemala&quot;' />
          <member value='&quot;Guinea&quot;' />
          <member value='&quot;Guinea-Bissau&quot;' />
          <member value='&quot;Guyana&quot;' />
          <member value='&quot;Haiti&quot;' />
          <member value='&quot;Honduras&quot;' />
          <member value='&quot;Hong Kong&quot;' />
          <member value='&quot;Hungary&quot;' />
          <member value='&quot;Iceland&quot;' />
          <member value='&quot;India&quot;' />
          <member value='&quot;Indonesia&quot;' />
          <member value='&quot;International transport&quot;' />
          <member value='&quot;Iran&quot;' />
          <member value='&quot;Iraq&quot;' />
          <member value='&quot;Ireland&quot;' />
          <member value='&quot;Israel&quot;' />
          <member value='&quot;Italy&quot;' />
          <member value='&quot;Jamaica&quot;' />
          <member value='&quot;Japan&quot;' />
          <member value='&quot;Jordan&quot;' />
          <member value='&quot;Kazakhstan&quot;' />
          <member value='&quot;Kenya&quot;' />
          <member value='&quot;Kiribati&quot;' />
          <member value='&quot;Kosovo&quot;' />
          <member value='&quot;Kuwait&quot;' />
          <member value='&quot;Kuwaiti Oil Fires&quot;' />
          <member value='&quot;Kyrgyzstan&quot;' />
          <member value='&quot;Laos&quot;' />
          <member value='&quot;Latvia&quot;' />
          <member value='&quot;Lebanon&quot;' />
          <member value='&quot;Leeward Islands&quot;' />
          <member value='&quot;Lesotho&quot;' />
          <member value='&quot;Liberia&quot;' />
          <member value='&quot;Libya&quot;' />
          <member value='&quot;Liechtenstein&quot;' />
          <member value='&quot;Lithuania&quot;' />
          <member value='&quot;Luxembourg&quot;' />
          <member value='&quot;Macao&quot;' />
          <member value='&quot;Madagascar&quot;' />
          <member value='&quot;Malawi&quot;' />
          <member value='&quot;Malaysia&quot;' />
          <member value='&quot;Maldives&quot;' />
          <member value='&quot;Mali&quot;' />
          <member value='&quot;Malta&quot;' />
          <member value='&quot;Marshall Islands&quot;' />
          <member value='&quot;Martinique&quot;' />
          <member value='&quot;Mauritania&quot;' />
          <member value='&quot;Mauritius&quot;' />
          <member value='&quot;Mayotte&quot;' />
          <member value='&quot;Mexico&quot;' />
          <member value='&quot;Micronesia&quot;' />
          <member value='&quot;Micronesia (country)&quot;' />
          <member value='&quot;Moldova&quot;' />
          <member value='&quot;Mongolia&quot;' />
          <member value='&quot;Montenegro&quot;' />
          <member value='&quot;Montserrat&quot;' />
          <member value='&quot;Morocco&quot;' />
          <member value='&quot;Mozambique&quot;' />
          <member value='&quot;Myanmar&quot;' />
          <member value='&quot;Namibia&quot;' />
          <member value='&quot;Nauru&quot;' />
          <member value='&quot;Nepal&quot;' />
          <member value='&quot;Netherlands&quot;' />
          <member value='&quot;New Caledonia&quot;' />
          <member value='&quot;New Zealand&quot;' />
          <member value='&quot;Nicaragua&quot;' />
          <member value='&quot;Niger&quot;' />
          <member value='&quot;Nigeria&quot;' />
          <member value='&quot;Niue&quot;' />
          <member value='&quot;North America&quot;' />
          <member value='&quot;North America (excl. USA)&quot;' />
          <member value='&quot;North Korea&quot;' />
          <member value='&quot;North Macedonia&quot;' />
          <member value='&quot;Norway&quot;' />
          <member value='&quot;Oceania&quot;' />
          <member value='&quot;Oman&quot;' />
          <member value='&quot;Pakistan&quot;' />
          <member value='&quot;Palau&quot;' />
          <member value='&quot;Palestine&quot;' />
          <member value='&quot;Panama&quot;' />
          <member value='&quot;Panama Canal Zone&quot;' />
          <member value='&quot;Papua New Guinea&quot;' />
          <member value='&quot;Paraguay&quot;' />
          <member value='&quot;Peru&quot;' />
          <member value='&quot;Philippines&quot;' />
          <member value='&quot;Poland&quot;' />
          <member value='&quot;Portugal&quot;' />
          <member value='&quot;Puerto Rico&quot;' />
          <member value='&quot;Qatar&quot;' />
          <member value='&quot;Reunion&quot;' />
          <member value='&quot;Romania&quot;' />
          <member value='&quot;Russia&quot;' />
          <member value='&quot;Rwanda&quot;' />
          <member value='&quot;Ryukyu Islands&quot;' />
          <member value='&quot;Saint Helena&quot;' />
          <member value='&quot;Saint Kitts and Nevis&quot;' />
          <member value='&quot;Saint Lucia&quot;' />
          <member value='&quot;Saint Pierre and Miquelon&quot;' />
          <member value='&quot;Saint Vincent and the Grenadines&quot;' />
          <member value='&quot;Samoa&quot;' />
          <member value='&quot;Sao Tome and Principe&quot;' />
          <member value='&quot;Saudi Arabia&quot;' />
          <member value='&quot;Senegal&quot;' />
          <member value='&quot;Serbia&quot;' />
          <member value='&quot;Seychelles&quot;' />
          <member value='&quot;Sierra Leone&quot;' />
          <member value='&quot;Singapore&quot;' />
          <member value='&quot;Sint Maarten (Dutch part)&quot;' />
          <member value='&quot;Slovakia&quot;' />
          <member value='&quot;Slovenia&quot;' />
          <member value='&quot;Solomon Islands&quot;' />
          <member value='&quot;Somalia&quot;' />
          <member value='&quot;South Africa&quot;' />
          <member value='&quot;South America&quot;' />
          <member value='&quot;South Korea&quot;' />
          <member value='&quot;South Sudan&quot;' />
          <member value='&quot;Spain&quot;' />
          <member value='&quot;Sri Lanka&quot;' />
          <member value='&quot;St. Kitts-Nevis-Anguilla&quot;' />
          <member value='&quot;Sudan&quot;' />
          <member value='&quot;Suriname&quot;' />
          <member value='&quot;Sweden&quot;' />
          <member value='&quot;Switzerland&quot;' />
          <member value='&quot;Syria&quot;' />
          <member value='&quot;Taiwan&quot;' />
          <member value='&quot;Tajikistan&quot;' />
          <member value='&quot;Tanzania&quot;' />
          <member value='&quot;Thailand&quot;' />
          <member value='&quot;Timor&quot;' />
          <member value='&quot;Togo&quot;' />
          <member value='&quot;Tonga&quot;' />
          <member value='&quot;Trinidad and Tobago&quot;' />
          <member value='&quot;Tunisia&quot;' />
          <member value='&quot;Turkey&quot;' />
          <member value='&quot;Turkmenistan&quot;' />
          <member value='&quot;Turks and Caicos Islands&quot;' />
          <member value='&quot;Tuvalu&quot;' />
          <member value='&quot;Uganda&quot;' />
          <member value='&quot;Ukraine&quot;' />
          <member value='&quot;United Arab Emirates&quot;' />
          <member value='&quot;United Kingdom&quot;' />
          <member value='&quot;United States&quot;' />
          <member value='&quot;Uruguay&quot;' />
          <member value='&quot;Uzbekistan&quot;' />
          <member value='&quot;Vanuatu&quot;' />
          <member value='&quot;Venezuela&quot;' />
          <member value='&quot;Vietnam&quot;' />
          <member value='&quot;Wallis and Futuna&quot;' />
          <member value='&quot;Yemen&quot;' />
          <member value='&quot;Zambia&quot;' />
          <member value='&quot;Zimbabwe&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='Co2 New' inline='true' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Co2 New' name='textscan.1wie4s40iahhsx15fzy4c1ftxfof'>
            <connection class='textscan' directory='D:/Tableau_Externship_Program/Project/MyViz' filename='Co2 New.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1wie4s40iahhsx15fzy4c1ftxfof' name='Co2 New.csv' table='[Co2 New#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='real' name='co2' ordinal='2' />
            <column datatype='real' name='co2_growth_prct' ordinal='3' />
            <column datatype='real' name='co2_per_capita' ordinal='4' />
            <column datatype='real' name='cumulative_co2' ordinal='5' />
            <column datatype='real' name='coal_co2' ordinal='6' />
            <column datatype='real' name='cement_co2' ordinal='7' />
            <column datatype='real' name='flaring_co2' ordinal='8' />
            <column datatype='real' name='gas_co2' ordinal='9' />
            <column datatype='real' name='oil_co2' ordinal='10' />
            <column datatype='real' name='other_industry_co2' ordinal='11' />
            <column datatype='real' name='cement_co2_per_capita' ordinal='12' />
            <column datatype='real' name='coal_co2_per_capita' ordinal='13' />
            <column datatype='real' name='flaring_co2_per_capita' ordinal='14' />
            <column datatype='real' name='gas_co2_per_capita' ordinal='15' />
            <column datatype='real' name='oil_co2_per_capita' ordinal='16' />
            <column datatype='real' name='other_co2_per_capita' ordinal='17' />
            <column datatype='real' name='trade_co2_share' ordinal='18' />
            <column datatype='integer' name='population' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.1wie4s40iahhsx15fzy4c1ftxfof' name='Co2 New.csv' table='[Co2 New#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='integer' name='year' ordinal='1' />
            <column datatype='real' name='co2' ordinal='2' />
            <column datatype='real' name='co2_growth_prct' ordinal='3' />
            <column datatype='real' name='co2_per_capita' ordinal='4' />
            <column datatype='real' name='cumulative_co2' ordinal='5' />
            <column datatype='real' name='coal_co2' ordinal='6' />
            <column datatype='real' name='cement_co2' ordinal='7' />
            <column datatype='real' name='flaring_co2' ordinal='8' />
            <column datatype='real' name='gas_co2' ordinal='9' />
            <column datatype='real' name='oil_co2' ordinal='10' />
            <column datatype='real' name='other_industry_co2' ordinal='11' />
            <column datatype='real' name='cement_co2_per_capita' ordinal='12' />
            <column datatype='real' name='coal_co2_per_capita' ordinal='13' />
            <column datatype='real' name='flaring_co2_per_capita' ordinal='14' />
            <column datatype='real' name='gas_co2_per_capita' ordinal='15' />
            <column datatype='real' name='oil_co2_per_capita' ordinal='16' />
            <column datatype='real' name='other_co2_per_capita' ordinal='17' />
            <column datatype='real' name='trade_co2_share' ordinal='18' />
            <column datatype='integer' name='population' ordinal='19' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;₹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>co2</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_growth_prct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_growth_prct]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>co2_growth_prct</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>co2_per_capita</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>cumulative_co2</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>coal_co2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>cement_co2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>flaring_co2</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>gas_co2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>oil_co2</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_industry_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[other_industry_co2]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>other_industry_co2</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>cement_co2_per_capita</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>coal_co2_per_capita</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>flaring_co2_per_capita</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>gas_co2_per_capita</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>oil_co2_per_capita</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[other_co2_per_capita]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>other_co2_per_capita</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trade_co2_share</remote-name>
            <remote-type>5</remote-type>
            <local-name>[trade_co2_share]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>trade_co2_share</remote-alias>
            <ordinal>18</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Co2 New.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Co2 New.csv' datatype='table' name='[__tableau_internal_object_id__].[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]' role='measure' type='quantitative' />
      <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
      <column caption='Cement Co2 Per Capita' datatype='real' name='[cement_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
      <column caption='Co2 Growth Prct' datatype='real' name='[co2_growth_prct]' role='measure' type='quantitative' />
      <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
      <column caption='Coal Co2 Per Capita' datatype='real' name='[coal_co2_per_capita]' role='measure' type='quantitative' />
      <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cumulative Co2' datatype='real' name='[cumulative_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2 Per Capita' datatype='real' name='[flaring_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
      <column caption='Gas Co2 Per Capita' datatype='real' name='[gas_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
      <column caption='Oil Co2 Per Capita' datatype='real' name='[oil_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Co2 Per Capita' datatype='real' name='[other_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Industry Co2' datatype='real' name='[other_industry_co2]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Trade Co2 Share' datatype='real' name='[trade_co2_share]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/HP/Downloads/Co2 New.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='06/25/2023 11:30:24 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Co2 New' increment-value='%null%' refresh-type='create' rows-inserted='10918' timestamp-start='2023-06-25 11:30:23.060' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>0</ordinal>
              <family>Co2 New.csv</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>275</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RGB' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>1</ordinal>
              <family>Co2 New.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>46</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>co2</remote-alias>
              <ordinal>2</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3622</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>co2_growth_prct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[co2_growth_prct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>co2_growth_prct</remote-alias>
              <ordinal>3</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2525</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>co2_per_capita</remote-alias>
              <ordinal>4</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3545</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cumulative_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cumulative_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cumulative_co2</remote-alias>
              <ordinal>5</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6566</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>coal_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[coal_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>coal_co2</remote-alias>
              <ordinal>6</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2272</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cement_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cement_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cement_co2</remote-alias>
              <ordinal>7</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2198</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flaring_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flaring_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flaring_co2</remote-alias>
              <ordinal>8</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1470</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gas_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gas_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gas_co2</remote-alias>
              <ordinal>9</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2611</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>oil_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[oil_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>oil_co2</remote-alias>
              <ordinal>10</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3344</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>other_industry_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[other_industry_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>other_industry_co2</remote-alias>
              <ordinal>11</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1265</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cement_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cement_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cement_co2_per_capita</remote-alias>
              <ordinal>12</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>609</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>coal_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[coal_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>coal_co2_per_capita</remote-alias>
              <ordinal>13</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1783</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flaring_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flaring_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flaring_co2_per_capita</remote-alias>
              <ordinal>14</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>547</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gas_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gas_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gas_co2_per_capita</remote-alias>
              <ordinal>15</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1739</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>oil_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[oil_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>oil_co2_per_capita</remote-alias>
              <ordinal>16</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3043</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>other_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[other_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>other_co2_per_capita</remote-alias>
              <ordinal>17</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>266</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trade_co2_share</remote-name>
              <remote-type>5</remote-type>
              <local-name>[trade_co2_share]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trade_co2_share</remote-alias>
              <ordinal>18</ordinal>
              <family>Co2 New.csv</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3141</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>19</ordinal>
              <family>Co2 New.csv</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>10104</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe (excl. EU-28)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Panama Canal Zone&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;EU-27&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Leeward Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;International transport&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;EU-28&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Christmas Island&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French West Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ryukyu Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St. Kitts-Nevis-Anguilla&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;French Equatorial Africa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Europe (excl. EU-27)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwaiti Oil Fires&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North America (excl. USA)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Asia (excl. China &amp; India)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Co2 New.csv' id='Co2 New.csv_FAD9ED0387154294A1D4E238C51D48ED'>
            <properties context=''>
              <relation connection='textscan.1wie4s40iahhsx15fzy4c1ftxfof' name='Co2 New.csv' table='[Co2 New#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='country' ordinal='0' />
                  <column datatype='integer' name='year' ordinal='1' />
                  <column datatype='real' name='co2' ordinal='2' />
                  <column datatype='real' name='co2_growth_prct' ordinal='3' />
                  <column datatype='real' name='co2_per_capita' ordinal='4' />
                  <column datatype='real' name='cumulative_co2' ordinal='5' />
                  <column datatype='real' name='coal_co2' ordinal='6' />
                  <column datatype='real' name='cement_co2' ordinal='7' />
                  <column datatype='real' name='flaring_co2' ordinal='8' />
                  <column datatype='real' name='gas_co2' ordinal='9' />
                  <column datatype='real' name='oil_co2' ordinal='10' />
                  <column datatype='real' name='other_industry_co2' ordinal='11' />
                  <column datatype='real' name='cement_co2_per_capita' ordinal='12' />
                  <column datatype='real' name='coal_co2_per_capita' ordinal='13' />
                  <column datatype='real' name='flaring_co2_per_capita' ordinal='14' />
                  <column datatype='real' name='gas_co2_per_capita' ordinal='15' />
                  <column datatype='real' name='oil_co2_per_capita' ordinal='16' />
                  <column datatype='real' name='other_co2_per_capita' ordinal='17' />
                  <column datatype='real' name='trade_co2_share' ordinal='18' />
                  <column datatype='integer' name='population' ordinal='19' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='co2_emission (co2_emission_analysis)' inline='true' name='federated.1dkg6me1xmfshc1g3kuh21i1f30d' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0yh14751r1bmme1cv8vr11ce4grp'>
            <connection class='mysql' dbname='co2_emission_analysis' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.0yh14751r1bmme1cv8vr11ce4grp' name='co2_emission' table='[co2_emission]' type='table'>
          <columns>
            <column datatype='integer' date-parse-format='yyyy' name='year' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mysql.0yh14751r1bmme1cv8vr11ce4grp' name='co2_emission' table='[co2_emission]' type='table'>
          <columns>
            <column datatype='integer' date-parse-format='yyyy' name='year' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>co2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_growth_prct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_growth_prct]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>co2_growth_prct</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_per_capita]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>co2_per_capita</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_co2]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>cumulative_co2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>coal_co2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>cement_co2</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>flaring_co2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>gas_co2</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>oil_co2</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_industry_co2</remote-name>
            <remote-type>3</remote-type>
            <local-name>[other_industry_co2]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>other_industry_co2</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2_per_capita]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>cement_co2_per_capita</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2_per_capita]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>coal_co2_per_capita</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2_per_capita]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>flaring_co2_per_capita</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2_per_capita]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>gas_co2_per_capita</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2_per_capita]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>oil_co2_per_capita</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_co2_per_capita</remote-name>
            <remote-type>3</remote-type>
            <local-name>[other_co2_per_capita]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>other_co2_per_capita</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trade_co2_share</remote-name>
            <remote-type>3</remote-type>
            <local-name>[trade_co2_share]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>trade_co2_share</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>3</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[co2_emission]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Country Field' datatype='boolean' name='[Calculation_661184761098993666]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Country Parameter]= [country]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='co2_emission' datatype='table' name='[__tableau_internal_object_id__].[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]' role='measure' type='quantitative' />
      <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
      <column caption='Cement Co2 Per Capita' datatype='real' name='[cement_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
      <column caption='Co2 Growth Prct' datatype='real' name='[co2_growth_prct]' role='measure' type='quantitative' />
      <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
      <column caption='Coal Co2 Per Capita' datatype='real' name='[coal_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cumulative Co2' datatype='real' name='[cumulative_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2 Per Capita' datatype='real' name='[flaring_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
      <column caption='Gas Co2 Per Capita' datatype='real' name='[gas_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
      <column caption='Oil Co2 Per Capita' datatype='real' name='[oil_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Co2 Per Capita' datatype='integer' name='[other_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Industry Co2' datatype='integer' name='[other_industry_co2]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Trade Co2 Share' datatype='integer' name='[trade_co2_share]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:co2_emission_C90EF207545A4B48A34CD04C30AC1A15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[country]' derivation='Attribute' name='[attr:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cement_co2_per_capita]' derivation='Sum' name='[sum:cement_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co2_growth_prct]' derivation='Sum' name='[sum:co2_growth_prct:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co2_per_capita]' derivation='Sum' name='[sum:co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[coal_co2_per_capita]' derivation='Sum' name='[sum:coal_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cumulative_co2]' derivation='Sum' name='[sum:cumulative_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[flaring_co2_per_capita]' derivation='Sum' name='[sum:flaring_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gas_co2_per_capita]' derivation='Sum' name='[sum:gas_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[oil_co2_per_capita]' derivation='Sum' name='[sum:oil_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[other_co2_per_capita]' derivation='Sum' name='[sum:other_co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[trade_co2_share]' derivation='Sum' name='[sum:trade_co2_share:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/HP/Downloads/co2_emission (co2_emission_analysis).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='06/25/2023 10:59:59 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='co2_emission (co2_emission_analysis)' increment-value='%null%' refresh-type='create' rows-inserted='10826' timestamp-start='2023-06-25 10:59:58.281' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>0</ordinal>
              <family>co2_emission</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>280</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>1</ordinal>
              <family>co2_emission</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>46</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>co2</remote-alias>
              <ordinal>2</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3558</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>co2_growth_prct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[co2_growth_prct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>co2_growth_prct</remote-alias>
              <ordinal>3</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2647</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>co2_per_capita</remote-alias>
              <ordinal>4</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3585</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cumulative_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cumulative_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cumulative_co2</remote-alias>
              <ordinal>5</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8315</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>coal_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[coal_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>coal_co2</remote-alias>
              <ordinal>6</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2111</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cement_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cement_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cement_co2</remote-alias>
              <ordinal>7</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2150</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flaring_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flaring_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flaring_co2</remote-alias>
              <ordinal>8</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1556</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gas_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gas_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gas_co2</remote-alias>
              <ordinal>9</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2413</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>oil_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[oil_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>oil_co2</remote-alias>
              <ordinal>10</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3203</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>other_industry_co2</remote-name>
              <remote-type>20</remote-type>
              <local-name>[other_industry_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>other_industry_co2</remote-alias>
              <ordinal>11</ordinal>
              <family>co2_emission</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>97</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cement_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cement_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cement_co2_per_capita</remote-alias>
              <ordinal>12</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>580</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>coal_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[coal_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>coal_co2_per_capita</remote-alias>
              <ordinal>13</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1610</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flaring_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flaring_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flaring_co2_per_capita</remote-alias>
              <ordinal>14</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>539</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gas_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gas_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gas_co2_per_capita</remote-alias>
              <ordinal>15</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1669</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>oil_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[oil_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>oil_co2_per_capita</remote-alias>
              <ordinal>16</ordinal>
              <family>co2_emission</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2888</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>other_co2_per_capita</remote-name>
              <remote-type>20</remote-type>
              <local-name>[other_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>other_co2_per_capita</remote-alias>
              <ordinal>17</ordinal>
              <family>co2_emission</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trade_co2_share</remote-name>
              <remote-type>20</remote-type>
              <local-name>[trade_co2_share]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trade_co2_share</remote-alias>
              <ordinal>18</ordinal>
              <family>co2_emission</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>228</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>19</ordinal>
              <family>co2_emission</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9972</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2_emission_C90EF207545A4B48A34CD04C30AC1A15]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe (excl. EU-27)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North America (excl. USA)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Christmas Island&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Europe (excl. EU-28)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Asia (excl. China &amp; India)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Leeward Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ryukyu Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;French Equatorial Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;International transport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EU-28&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Panama Canal Zone&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St. Kitts-Nevis-Anguilla&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French West Africa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;EU-27&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwaiti Oil Fires&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Europe (excl. EU-27)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North America (excl. USA)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Christmas Island&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Europe (excl. EU-28)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Asia (excl. China &amp; India)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Leeward Islands&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ryukyu Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;French Equatorial Africa&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;International transport&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;EU-28&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Panama Canal Zone&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St. Kitts-Nevis-Anguilla&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;French West Africa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;EU-27&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwaiti Oil Fires&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[__tableau_internal_object_id__].[cnt:co2_emission_C90EF207545A4B48A34CD04C30AC1A15:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:cement_co2:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:oil_co2:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:gas_co2:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:gas_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:cumulative_co2:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:co2_growth_prct:qk]&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:trade_co2_share:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:cement_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:other_industry_co2:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:oil_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:population:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:flaring_co2:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:coal_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:coal_co2:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:other_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:flaring_co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:co2:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Country Parameter' datatype='string' name='[Country Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;South Africa&quot;'>
          <calculation class='tableau' formula='&quot;South Africa&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='co2_emission' id='co2_emission_C90EF207545A4B48A34CD04C30AC1A15'>
            <properties context=''>
              <relation connection='mysql.0yh14751r1bmme1cv8vr11ce4grp' name='co2_emission' table='[co2_emission]' type='table'>
                <columns>
                  <column datatype='integer' date-parse-format='yyyy' name='year' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='co2 new (co2_project)' inline='true' name='federated.0iadx9u0zjyzps1fohv8z0p5h01b' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.06lqjcr1589twi18h9uj41nilsnd'>
            <connection class='mysql' dbname='co2_emission_analysis' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.06lqjcr1589twi18h9uj41nilsnd' name='co2 new' table='[co2 new]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mysql.06lqjcr1589twi18h9uj41nilsnd' name='co2 new' table='[co2 new]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>year</remote-name>
            <remote-type>3</remote-type>
            <local-name>[year]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>year</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>co2</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_growth_prct</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_growth_prct]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>co2_growth_prct</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[co2_per_capita]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>co2_per_capita</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cumulative_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cumulative_co2]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>cumulative_co2</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>coal_co2</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>cement_co2</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>flaring_co2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>gas_co2</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>oil_co2</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_industry_co2</remote-name>
            <remote-type>3</remote-type>
            <local-name>[other_industry_co2]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>other_industry_co2</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cement_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[cement_co2_per_capita]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>cement_co2_per_capita</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>coal_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[coal_co2_per_capita]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>coal_co2_per_capita</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>flaring_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[flaring_co2_per_capita]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>flaring_co2_per_capita</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gas_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[gas_co2_per_capita]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>gas_co2_per_capita</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>oil_co2_per_capita</remote-name>
            <remote-type>5</remote-type>
            <local-name>[oil_co2_per_capita]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>oil_co2_per_capita</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_DOUBLE&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>other_co2_per_capita</remote-name>
            <remote-type>3</remote-type>
            <local-name>[other_co2_per_capita]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>other_co2_per_capita</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>trade_co2_share</remote-name>
            <remote-type>3</remote-type>
            <local-name>[trade_co2_share]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>trade_co2_share</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>3</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[co2 new]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='country_calculation' datatype='boolean' name='[Calculation_458241302262734848]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 1]=[country]' />
      </column>
      <column datatype='string' name='[Country_filter]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[country]' new-bin='true'>
          <bin default-name='true' value='&quot;Afghanistan, Africa, Albania and 13 more&quot;'>
            <value>&quot;Afghanistan&quot;</value>
            <value>&quot;Africa&quot;</value>
            <value>&quot;Albania&quot;</value>
            <value>&quot;Algeria&quot;</value>
            <value>&quot;Andorra&quot;</value>
            <value>&quot;Angola&quot;</value>
            <value>&quot;Anguilla&quot;</value>
            <value>&quot;Antarctica&quot;</value>
            <value>&quot;Antigua and Barbuda&quot;</value>
            <value>&quot;Argentina&quot;</value>
            <value>&quot;Armenia&quot;</value>
            <value>&quot;Aruba&quot;</value>
            <value>&quot;Australia&quot;</value>
            <value>&quot;Belgium&quot;</value>
            <value>&quot;Belize&quot;</value>
            <value>&quot;Benin&quot;</value>
          </bin>
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='co2 new' datatype='table' name='[__tableau_internal_object_id__].[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]' role='measure' type='quantitative' />
      <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
      <column caption='Cement Co2 Per Capita' datatype='real' name='[cement_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
      <column caption='Co2 Growth Prct' datatype='real' name='[co2_growth_prct]' role='measure' type='quantitative' />
      <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
      <column caption='Coal Co2 Per Capita' datatype='real' name='[coal_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Cumulative Co2' datatype='real' name='[cumulative_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
      <column caption='Flaring Co2 Per Capita' datatype='real' name='[flaring_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
      <column caption='Gas Co2 Per Capita' datatype='real' name='[gas_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
      <column caption='Oil Co2 Per Capita' datatype='real' name='[oil_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Co2 Per Capita' datatype='integer' name='[other_co2_per_capita]' role='measure' type='quantitative' />
      <column caption='Other Industry Co2' datatype='integer' name='[other_industry_co2]' role='measure' type='quantitative' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Trade Co2 Share' datatype='integer' name='[trade_co2_share]' role='measure' type='quantitative' />
      <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      <column-instance column='[co2]' derivation='Avg' name='[avg:co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[cement_co2]' derivation='Sum' name='[cum:sum:cement_co2:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
      </column-instance>
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[cement_co2]' derivation='Sum' name='[pcto:sum:cement_co2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[co2]' derivation='Sum' name='[pcto:sum:co2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[coal_co2]' derivation='Sum' name='[pcto:sum:coal_co2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[flaring_co2]' derivation='Sum' name='[pcto:sum:flaring_co2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[gas_co2]' derivation='Sum' name='[pcto:sum:gas_co2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[oil_co2]' derivation='Sum' name='[pcto:sum:oil_co2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[other_industry_co2]' derivation='Sum' name='[pcto:sum:other_industry_co2:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[co2_per_capita]' derivation='Sum' name='[sum:co2_per_capita:qk]' pivot='key' type='quantitative' />
      <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/HP/Downloads/co2 new (co2_project).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='06/25/2023 10:49:36 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='co2 new (co2_project)' increment-value='%null%' refresh-type='create' rows-inserted='10826' timestamp-start='2023-06-25 10:49:35.819' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>country</remote-alias>
              <ordinal>0</ordinal>
              <family>co2 new</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>280</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>year</remote-alias>
              <ordinal>1</ordinal>
              <family>co2 new</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>46</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>co2</remote-alias>
              <ordinal>2</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3558</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>co2_growth_prct</remote-name>
              <remote-type>5</remote-type>
              <local-name>[co2_growth_prct]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>co2_growth_prct</remote-alias>
              <ordinal>3</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2647</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>co2_per_capita</remote-alias>
              <ordinal>4</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3585</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cumulative_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cumulative_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cumulative_co2</remote-alias>
              <ordinal>5</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>8315</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>coal_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[coal_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>coal_co2</remote-alias>
              <ordinal>6</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2111</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cement_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cement_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cement_co2</remote-alias>
              <ordinal>7</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2150</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flaring_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flaring_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flaring_co2</remote-alias>
              <ordinal>8</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1556</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gas_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gas_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gas_co2</remote-alias>
              <ordinal>9</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2413</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>oil_co2</remote-name>
              <remote-type>5</remote-type>
              <local-name>[oil_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>oil_co2</remote-alias>
              <ordinal>10</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3203</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>other_industry_co2</remote-name>
              <remote-type>20</remote-type>
              <local-name>[other_industry_co2]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>other_industry_co2</remote-alias>
              <ordinal>11</ordinal>
              <family>co2 new</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>97</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>cement_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[cement_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>cement_co2_per_capita</remote-alias>
              <ordinal>12</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>580</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>coal_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[coal_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>coal_co2_per_capita</remote-alias>
              <ordinal>13</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1610</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>flaring_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[flaring_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>flaring_co2_per_capita</remote-alias>
              <ordinal>14</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>539</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gas_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[gas_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gas_co2_per_capita</remote-alias>
              <ordinal>15</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1669</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>oil_co2_per_capita</remote-name>
              <remote-type>5</remote-type>
              <local-name>[oil_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>oil_co2_per_capita</remote-alias>
              <ordinal>16</ordinal>
              <family>co2 new</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>2888</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>other_co2_per_capita</remote-name>
              <remote-type>20</remote-type>
              <local-name>[other_co2_per_capita]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>other_co2_per_capita</remote-alias>
              <ordinal>17</ordinal>
              <family>co2 new</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>trade_co2_share</remote-name>
              <remote-type>20</remote-type>
              <local-name>[trade_co2_share]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>trade_co2_share</remote-alias>
              <ordinal>18</ordinal>
              <family>co2 new</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>228</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>19</ordinal>
              <family>co2 new</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>9972</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[co2 new_8AFFCB4D0E044C51915ECB790B0116F7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Christmas Island&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ryukyu Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Asia (excl. China &amp; India)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Europe (excl. EU-27)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;EU-27&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St. Kitts-Nevis-Anguilla&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Turkmenistan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;French Equatorial Africa&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sint Maarten (Dutch part)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;French West Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Leeward Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North America (excl. USA)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kuwaiti Oil Fires&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Europe (excl. EU-28)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;EU-28&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tuvalu&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;International transport&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Korea&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Panama Canal Zone&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[cum:sum:cement_co2:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[pcto:sum:cement_co2:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[pcto:sum:co2:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:cement_co2:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:co2:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[pcto:sum:oil_co2:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:oil_co2:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[pcto:sum:gas_co2:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:gas_co2:qk]&quot;</bucket>
            </map>
            <map to='#9c755f'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:co2_per_capita:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[pcto:sum:coal_co2:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:coal_co2:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[pcto:sum:other_industry_co2:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:other_industry_co2:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[avg:co2:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[pcto:sum:flaring_co2:qk]&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:flaring_co2:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='country_parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Romania&quot;'>
          <calculation class='tableau' formula='&quot;Romania&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='co2 new' id='co2 new_8AFFCB4D0E044C51915ECB790B0116F7'>
            <properties context=''>
              <relation connection='mysql.06lqjcr1589twi18h9uj41nilsnd' name='co2 new' table='[co2 new]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Avg CO2 Emission Per Capita of top 10 Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column-instance column='[co2_per_capita]' derivation='Avg' name='[avg:co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Avg' name='[avg:population:qk]' pivot='key' type='quantitative' />
            <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([co2_per_capita])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:country:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' filter-group='4' included-values='in-range-or-null'>
            <min>1975</min>
            <max>2020</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2_per_capita:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#9d7660' />
            <format attr='border-width' value='3' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:population:qk]' palette='brown_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#9d7660' />
            <format attr='border-width' value='4' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='border-color' value='#9d7660' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:population:qk]' />
              <text column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2_per_capita:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2_per_capita:qk]</rows>
        <cols>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{18A2391F-B9A9-4B87-B498-76DBE3F388C0}' />
    </worksheet>
    <worksheet name='Avg CO2 Emission Year Wise'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column-instance column='[co2]' derivation='Avg' name='[avg:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#4e79a7' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#4e79a7' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]' />
              <text column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]</rows>
        <cols>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{09CFB17A-0B35-4049-AAF1-855D2B3FBBBD}' />
    </worksheet>
    <worksheet name='Avg CO2 Emission of top 10 Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column-instance column='[co2]' derivation='Avg' name='[avg:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([co2])' function='order' user:ui-marker='order'>
                <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                  <groupfilter function='level-members' level='[none:country:nk]' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                    <groupfilter function='member' level='[none:country:nk]' member='%null%' />
                  </groupfilter>
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' filter-group='4' included-values='in-range-or-null'>
            <min>1975</min>
            <max>2020</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]' value='88' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-width' value='2' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-width' value='4' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='border-color' value='#4e79a7' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:population:qk]' />
              <text column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]</rows>
        <cols>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{F104FA61-41F5-45E2-A50F-B2A06EEA2744}' />
    </worksheet>
    <worksheet name='Co2 Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' filter-group='4' included-values='in-range-or-null'>
            <min>1975</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</column>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[Latitude (generated)]</column>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[Longitude (generated)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[Longitude (generated)]' field-type='quantitative' max='25066834.248659536' min='-17942805.020599436' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[Latitude (generated)]' field-type='quantitative' max='12804225.913125619' min='-9603594.8132893909' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='5' />
            <format attr='border-color' value='#e15759' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='size-bar' field='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' value='false' />
            <format attr='break-on-special' field='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#e15759' />
            <format attr='border-width' value='2' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' />
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' />
              <geometry column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[Latitude (generated)]</rows>
        <cols>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{C7B73BBD-CECD-45AA-8B1F-FCF965FD9F15}' />
    </worksheet>
    <worksheet name='Continent Wise Pie Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[co2]' derivation='Sum' name='[pcto:sum:co2:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='except'>
                <groupfilter function='level-members' level='[none:country:nk]' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                  <groupfilter function='member' level='[none:country:nk]' member='%null%' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' value='1004' />
            <format attr='height' value='578' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='4' />
            <format attr='border-color' value='#9d7660' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-color' value='#9d7660' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' />
              <wedge-size column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' />
              <size column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' />
              <text column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' />
              <text column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[pcto:sum:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.5932043790817261' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{E10CC526-FFAA-433F-B57A-833230671A27}' />
    </worksheet>
    <worksheet name='Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#606b76' fontsize='18'>OTHER COUNTRIES</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2_emission (co2_emission_analysis)' name='federated.1dkg6me1xmfshc1g3kuh21i1f30d' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Country Parameter' datatype='string' name='[Country Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;South Africa&quot;'>
              <calculation class='tableau' formula='&quot;South Africa&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1dkg6me1xmfshc1g3kuh21i1f30d'>
            <column caption='Country Field' datatype='boolean' name='[Calculation_661184761098993666]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Country Parameter]= [country]' />
            </column>
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_661184761098993666]' derivation='None' name='[none:Calculation_661184761098993666:nk]' pivot='key' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:cement_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:coal_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:flaring_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:gas_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:oil_co2:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:Calculation_661184761098993666:nk]'>
            <groupfilter function='member' level='[none:Calculation_661184761098993666:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:country:nk]'>
            <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names]</column>
            <column>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:Calculation_661184761098993666:nk]</column>
            <column>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-color' value='#86bcb6' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' value='#a7acad' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' value='#79706e' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='border-color' data-class='subtotal' value='#69aaa5' />
            <format attr='border-width' data-class='subtotal' value='0' />
            <format attr='border-style' data-class='subtotal' value='none' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='cols' value='#a7acad' />
            <format attr='div-level' scope='rows' value='0' />
            <format attr='stroke-size' scope='cols' value='1' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='3' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='3' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#e8edda' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='border-color' value='#818b91' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[Multiple Values]</rows>
        <cols>([federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:country:nk] / [federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{91AF813B-3DFB-457E-91F4-C94E79F2DC72}' />
    </worksheet>
    <worksheet name='Extraction Rate over year'>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#b07aa1' />
            <format attr='border-width' value='2' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='border-color' value='#b07aa1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
          </pane>
        </panes>
        <rows>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]</rows>
        <cols>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{2A0D70AD-6021-4929-999A-7E9240F28D7F}' />
    </worksheet>
    <worksheet name='India'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#606b76' fontsize='18'>INDIA</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2_emission (co2_emission_analysis)' name='federated.1dkg6me1xmfshc1g3kuh21i1f30d' />
          </datasources>
          <datasource-dependencies datasource='federated.1dkg6me1xmfshc1g3kuh21i1f30d'>
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:cement_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:coal_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:flaring_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:gas_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:oil_co2:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:country:nk]'>
            <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names]</column>
            <column>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-color' scope='cols' value='#f1ce63' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-style' scope='cols' value='none' />
            <format attr='color' data-class='subtotal' scope='cols' value='#333333' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='border-color' value='#606b76' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' scope='cols' value='#79706e' />
            <format attr='border-width' scope='cols' value='0' />
            <format attr='border-style' scope='cols' value='none' />
            <format attr='border-color' data-class='subtotal' scope='cols' value='#59a14f' />
            <format attr='border-width' data-class='subtotal' scope='cols' value='0' />
            <format attr='border-style' data-class='subtotal' scope='cols' value='none' />
            <format attr='border-width' data-class='total' value='0' />
            <format attr='border-style' data-class='total' value='none' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='cols' value='4' />
            <format attr='stroke-size' scope='rows' value='3' />
          </style-rule>
          <style-rule element='header-div'>
            <format attr='stroke-size' scope='rows' value='3' />
            <format attr='stroke-color' scope='rows' value='#a7acad' />
            <format attr='stroke-color' scope='cols' value='#a7acad' />
            <format attr='stroke-size' scope='cols' value='3' />
          </style-rule>
          <style-rule element='title'>
            <format attr='background-color' value='#e8edda' />
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#000000' />
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[Multiple Values]</rows>
        <cols>([federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:country:nk] / [federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{A3B7F87B-B6B6-495B-9564-217FA5BAC96F}' />
    </worksheet>
    <worksheet name='Sheet 11'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'>CO2 due to international factors</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2 new (co2_project)' name='federated.0iadx9u0zjyzps1fohv8z0p5h01b' />
          </datasources>
          <datasource-dependencies datasource='federated.0iadx9u0zjyzps1fohv8z0p5h01b'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Kuwaiti Oil Fires&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#499894' />
            <format attr='border-width' value='3' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='border-color' value='#499894' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:co2:qk]</rows>
        <cols>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{FE732D8B-E03D-445D-B497-8AB3FF3F7187}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'>Factor distribution of CO2 in different countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2 new (co2_project)' name='federated.0iadx9u0zjyzps1fohv8z0p5h01b' />
          </datasources>
          <datasource-dependencies datasource='federated.0iadx9u0zjyzps1fohv8z0p5h01b'>
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column caption='Other Industry Co2' datatype='integer' name='[other_industry_co2]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:cement_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:coal_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:gas_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:oil_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:other_industry_co2:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Australia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]' direction='DESC' using='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:co2:qk]' />
          <slices>
            <column>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]</column>
            <column>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[Multiple Values]</rows>
        <cols>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{9E898495-B916-4256-8C29-FF52DC521E3C}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>CO2 Emission Over Years</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2_emission (co2_emission_analysis)' name='federated.1dkg6me1xmfshc1g3kuh21i1f30d' />
          </datasources>
          <datasource-dependencies datasource='federated.1dkg6me1xmfshc1g3kuh21i1f30d'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:year:qk]' included-values='in-range'>
            <min>1975</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#59a14f' />
            <format attr='border-width' value='4' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='border-color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='0.93353593349456787' />
                <format attr='mark-color' value='#f1ce63' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:co2:qk]</rows>
        <cols>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{B0FA87FA-1E77-4C7D-BA3F-F5F9D37B63BD}' />
    </worksheet>
    <worksheet name='Sheet 7 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'>Comparision of CO2 and CO2 per capita over the years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2 new (co2_project)' name='federated.0iadx9u0zjyzps1fohv8z0p5h01b' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='country_parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Romania&quot;'>
              <calculation class='tableau' formula='&quot;Romania&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0iadx9u0zjyzps1fohv8z0p5h01b'>
            <column caption='country_calculation' datatype='boolean' name='[Calculation_458241302262734848]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]=[country]' />
            </column>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Co2 Per Capita' datatype='real' name='[co2_per_capita]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[Calculation_458241302262734848]' derivation='None' name='[none:Calculation_458241302262734848:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2_per_capita]' derivation='Sum' name='[sum:co2_per_capita:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:Calculation_458241302262734848:nk]'>
            <groupfilter function='member' level='[none:Calculation_458241302262734848:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:Calculation_458241302262734848:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:co2_per_capita:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#79706e' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='border-color' value='#79706e' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:co2_per_capita:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:co2:qk] + [federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:co2_per_capita:qk])</rows>
        <cols>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{3237A43D-B130-42ED-B61B-A15ECDC7D721}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>CO2 Emission in Year 2020</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2_emission (co2_emission_analysis)' name='federated.1dkg6me1xmfshc1g3kuh21i1f30d' />
          </datasources>
          <datasource-dependencies datasource='federated.1dkg6me1xmfshc1g3kuh21i1f30d'>
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:year:qk]' included-values='in-range'>
            <min>2020</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-color' value='#499894' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-width' value='4' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Square' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:co2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.0434806346893311' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#606b76' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[sum:co2:qk]</rows>
        <cols>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{3C660AA1-9FFA-4D4F-A889-8320AA296782}' />
    </worksheet>
    <worksheet name='Sheet 8 (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'>CO2 measures in each country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2 new (co2_project)' name='federated.0iadx9u0zjyzps1fohv8z0p5h01b' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='country_parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Romania&quot;'>
              <calculation class='tableau' formula='&quot;Romania&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0iadx9u0zjyzps1fohv8z0p5h01b'>
            <column caption='country_calculation' datatype='boolean' name='[Calculation_458241302262734848]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 1]=[country]' />
            </column>
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_458241302262734848]' derivation='None' name='[none:Calculation_458241302262734848:nk]' pivot='key' type='nominal' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column caption='Other Industry Co2' datatype='integer' name='[other_industry_co2]' role='measure' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[pcto:sum:co2:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:cement_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:coal_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:flaring_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:gas_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:oil_co2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:other_industry_co2:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:cement_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[pcto:sum:co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:coal_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:flaring_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:gas_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:oil_co2:qk]&quot;</bucket>
              <bucket>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:other_industry_co2:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:Calculation_458241302262734848:nk]'>
            <groupfilter function='member' level='[none:Calculation_458241302262734848:nk]' member='true' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]</column>
            <column>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:Calculation_458241302262734848:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#59a14f' />
            <format attr='border-width' value='4' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='border-color' value='#59a14f' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' />
              <size column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[Multiple Values]' />
              <lod column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows />
        <cols />
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]</field>
                  <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:cement_co2:qk]&quot;</value>
                <value>1135.5829999999999</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]</field>
                  <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:coal_co2:qk]&quot;</value>
                <value>13413.495999999997</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]</field>
                  <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:flaring_co2:qk]&quot;</value>
                <value>13.927000000000003</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]</field>
                  <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:gas_co2:qk]&quot;</value>
                <value>6258.4479999999985</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]</field>
                  <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:oil_co2:qk]&quot;</value>
                <value>20677.480000000003</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields />
                  <y-fields />
                </pane-descriptor>
                <columns>
                  <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]</field>
                  <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:other_industry_co2:qk]&quot;</value>
                <value>290.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{1C42122B-8407-40CD-BE45-05A301B1A019}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontname='Tableau Bold'>CO2 and Ag CO2 trend over the years</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='co2 new (co2_project)' name='federated.0iadx9u0zjyzps1fohv8z0p5h01b' />
          </datasources>
          <datasource-dependencies datasource='federated.0iadx9u0zjyzps1fohv8z0p5h01b'>
            <column-instance column='[co2]' derivation='Avg' name='[avg:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Co2' datatype='real' name='[co2]' role='measure' type='quantitative' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column-instance column='[co2]' derivation='Sum' name='[sum:co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:year:qk]' included-values='in-range'>
            <min>1975</min>
            <max>2020</max>
          </filter>
          <slices>
            <column>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:year:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:co2:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#d3b348' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='border-color' value='#d3b348' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[avg:co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0iadx9u0zjyzps1fohv8z0p5h01b].[avg:co2:qk] + [federated.0iadx9u0zjyzps1fohv8z0p5h01b].[sum:co2:qk])</rows>
        <cols>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{DFBA33B5-ACD0-40C2-BF3D-8C1DE6F5B352}' />
    </worksheet>
    <worksheet name='Trend of Each Co2 Emission Category'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
          </datasources>
          <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
            <column caption='Cement Co2' datatype='real' name='[cement_co2]' role='measure' type='quantitative' />
            <column caption='Coal Co2' datatype='real' name='[coal_co2]' role='measure' type='quantitative' />
            <column datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Flaring Co2' datatype='real' name='[flaring_co2]' role='measure' type='quantitative' />
            <column caption='Gas Co2' datatype='real' name='[gas_co2]' role='measure' type='quantitative' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
            <column caption='Oil Co2' datatype='real' name='[oil_co2]' role='measure' type='quantitative' />
            <column caption='Other Industry Co2' datatype='real' name='[other_industry_co2]' role='measure' type='quantitative' />
            <column-instance column='[cement_co2]' derivation='Sum' name='[sum:cement_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[coal_co2]' derivation='Sum' name='[sum:coal_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[flaring_co2]' derivation='Sum' name='[sum:flaring_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[gas_co2]' derivation='Sum' name='[sum:gas_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[oil_co2]' derivation='Sum' name='[sum:oil_co2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[other_industry_co2]' derivation='Sum' name='[sum:other_industry_co2:qk]' pivot='key' type='quantitative' />
            <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:country:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Africa&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Antarctica&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Asia (excl. China &amp; India)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-27&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;EU-28&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-27)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;Europe (excl. EU-28)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;International transport&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;North America (excl. USA)&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;South America&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='&quot;World&quot;' />
                <groupfilter function='member' level='[none:country:nk]' member='%null%' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='3' />
            <format attr='border-color' value='#e15759' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' value='#e15759' />
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='2' />
            <format attr='border-color' value='#d37295' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:oil_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#9d7660' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:gas_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#d37295' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:flaring_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:coal_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#79706e' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:cement_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
          <pane id='6' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:other_industry_co2:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f9a655' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:oil_co2:qk] + ([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:gas_co2:qk] + ([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:flaring_co2:qk] + ([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:coal_co2:qk] + ([federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:cement_co2:qk] + [federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:other_industry_co2:qk])))))</rows>
        <cols>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</cols>
      </table>
      <simple-id uuid='{6D7069EA-A9E5-414A-804B-37081D61549B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Co2 New' name='federated.1a5g6gk1o2vp3b1brnx4o000mnrp' />
      </datasources>
      <datasource-dependencies datasource='federated.1a5g6gk1o2vp3b1brnx4o000mnrp'>
        <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
        <column caption='Year' datatype='integer' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97672' id='8' param='vert' type-v2='layout-flow' w='98792' x='604' y='1164'>
            <zone h='97672' id='6' type-v2='layout-basic' w='98792' x='604' y='1164'>
              <zone h='97672' id='9' type-v2='layout-basic' w='98792' x='604' y='1164' />
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='45706' id='16' name='Co2 Map' w='41283' x='2038' y='2766' />
        <zone h='8879' id='17' name='Co2 Map' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='12075' x='86943' y='14993' />
        <zone h='11063' id='18' name='Co2 Map' pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' type-v2='color' w='11170' x='86943' y='3930' />
        <zone h='45415' id='19' name='Avg CO2 Emission of top 10 Countries' w='41660' x='44377' y='2911' />
        <zone h='11063' id='20' name='Avg CO2 Emission of top 10 Countries' pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:population:qk]' type-v2='color' w='12226' x='87245' y='26783' />
        <zone h='48617' id='21' name='Avg CO2 Emission Per Capita of top 10 Countries' w='41057' x='2113' y='49927' />
        <zone h='11063' id='22' name='Avg CO2 Emission Per Capita of top 10 Countries' pane-specification-id='2' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:population:qk]' type-v2='color' w='11472' x='87472' y='37263' />
        <zone h='49199' id='25' name='Continent Wise Pie Chart' w='41434' x='44528' y='49636' />
        <zone h='22999' id='27' name='Continent Wise Pie Chart' pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' type-v2='color' w='10566' x='88075' y='56623' />
        <zone h='7278' id='28' name='Continent Wise Pie Chart' pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' type-v2='size' w='12302' x='87472' y='47598' />
        <zone h='7569' id='29' type-v2='dashboard-object' w='12377' x='86717' y='87773'>
          <button action='tabdoc:goto-sheet window-id=&quot;{806F9628-817C-4156-82E0-75636D30E980}&quot;' button-type='text'>
            <button-visual-state>
              <caption>NEXT</caption>
              <button-caption-font-style fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#e6e6e6' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='2' />
              <format attr='border-color' value='#000000' />
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1650' minheight='1650' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='47' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97672' id='46' param='vert' type-v2='layout-flow' w='98792' x='604' y='1164'>
                <zone h='8879' id='17' name='Co2 Map' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='12075' x='86943' y='14993'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45706' id='16' is-fixed='true' name='Co2 Map' w='41283' x='2038' y='2766'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11063' id='18' name='Co2 Map' pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' type-v2='color' w='11170' x='86943' y='3930'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45415' id='19' is-fixed='true' name='Avg CO2 Emission of top 10 Countries' w='41660' x='44377' y='2911'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11063' id='20' name='Avg CO2 Emission of top 10 Countries' pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:population:qk]' type-v2='color' w='12226' x='87245' y='26783'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49199' id='25' is-fixed='true' name='Continent Wise Pie Chart' w='41434' x='44528' y='49636'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='22999' id='27' name='Continent Wise Pie Chart' pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' type-v2='color' w='10566' x='88075' y='56623'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7278' id='28' name='Continent Wise Pie Chart' pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' type-v2='size' w='12302' x='87472' y='47598'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48617' id='21' is-fixed='true' name='Avg CO2 Emission Per Capita of top 10 Countries' w='41057' x='2113' y='49927'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='11063' id='22' name='Avg CO2 Emission Per Capita of top 10 Countries' pane-specification-id='2' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:population:qk]' type-v2='color' w='11472' x='87472' y='37263'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7569' id='29' type-v2='dashboard-object' w='12377' x='86717' y='87773'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{806F9628-817C-4156-82E0-75636D30E980}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>NEXT</caption>
                      <button-caption-font-style fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#e6e6e6' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='2' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0A500342-4E8C-4F2C-A4B4-9A1004C065B9}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 2'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='country_parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Romania&quot;'>
          <calculation class='tableau' formula='&quot;Romania&quot;' />
          <members>
            <member value='&quot;Afghanistan&quot;' />
            <member value='&quot;Albania&quot;' />
            <member value='&quot;Algeria&quot;' />
            <member value='&quot;Andorra&quot;' />
            <member value='&quot;Angola&quot;' />
            <member value='&quot;Anguilla&quot;' />
            <member value='&quot;Antigua and Barbuda&quot;' />
            <member value='&quot;Argentina&quot;' />
            <member value='&quot;Armenia&quot;' />
            <member value='&quot;Aruba&quot;' />
            <member value='&quot;Austria&quot;' />
            <member value='&quot;Azerbaijan&quot;' />
            <member value='&quot;Bahamas&quot;' />
            <member value='&quot;Bahrain&quot;' />
            <member value='&quot;Bangladesh&quot;' />
            <member value='&quot;Barbados&quot;' />
            <member value='&quot;Belarus&quot;' />
            <member value='&quot;Belgium&quot;' />
            <member value='&quot;Belize&quot;' />
            <member value='&quot;Benin&quot;' />
            <member value='&quot;Bermuda&quot;' />
            <member value='&quot;Bhutan&quot;' />
            <member value='&quot;Bolivia&quot;' />
            <member value='&quot;Bonaire Sint Eustatius and Saba&quot;' />
            <member value='&quot;Bosnia and Herzegovina&quot;' />
            <member value='&quot;Botswana&quot;' />
            <member value='&quot;Brazil&quot;' />
            <member value='&quot;British Virgin Islands&quot;' />
            <member value='&quot;Brunei&quot;' />
            <member value='&quot;Bulgaria&quot;' />
            <member value='&quot;Burkina Faso&quot;' />
            <member value='&quot;Burundi&quot;' />
            <member value='&quot;Cambodia&quot;' />
            <member value='&quot;Cameroon&quot;' />
            <member value='&quot;Canada&quot;' />
            <member value='&quot;Cape Verde&quot;' />
            <member value='&quot;Central African Republic&quot;' />
            <member value='&quot;Chad&quot;' />
            <member value='&quot;Chile&quot;' />
            <member value='&quot;China&quot;' />
            <member value='&quot;Christmas Island&quot;' />
            <member value='&quot;Colombia&quot;' />
            <member value='&quot;Comoros&quot;' />
            <member value='&quot;Congo&quot;' />
            <member value='&quot;Cook Islands&quot;' />
            <member value='&quot;Costa Rica&quot;' />
            <member value='&quot;Cote d&apos;Ivoire&quot;' />
            <member value='&quot;Croatia&quot;' />
            <member value='&quot;Cuba&quot;' />
            <member value='&quot;Curacao&quot;' />
            <member value='&quot;Cyprus&quot;' />
            <member value='&quot;Czechia&quot;' />
            <member value='&quot;Democratic Republic of Congo&quot;' />
            <member value='&quot;Denmark&quot;' />
            <member value='&quot;Djibouti&quot;' />
            <member value='&quot;Dominica&quot;' />
            <member value='&quot;Dominican Republic&quot;' />
            <member value='&quot;Ecuador&quot;' />
            <member value='&quot;Egypt&quot;' />
            <member value='&quot;El Salvador&quot;' />
            <member value='&quot;Equatorial Guinea&quot;' />
            <member value='&quot;Eritrea&quot;' />
            <member value='&quot;Estonia&quot;' />
            <member value='&quot;Eswatini&quot;' />
            <member value='&quot;Ethiopia&quot;' />
            <member value='&quot;Faeroe Islands&quot;' />
            <member value='&quot;Fiji&quot;' />
            <member value='&quot;Finland&quot;' />
            <member value='&quot;France&quot;' />
            <member value='&quot;French Equatorial Africa&quot;' />
            <member value='&quot;French Guiana&quot;' />
            <member value='&quot;French Polynesia&quot;' />
            <member value='&quot;French West Africa&quot;' />
            <member value='&quot;Gabon&quot;' />
            <member value='&quot;Gambia&quot;' />
            <member value='&quot;Georgia&quot;' />
            <member value='&quot;Germany&quot;' />
            <member value='&quot;Ghana&quot;' />
            <member value='&quot;Greece&quot;' />
            <member value='&quot;Greenland&quot;' />
            <member value='&quot;Grenada&quot;' />
            <member value='&quot;Guadeloupe&quot;' />
            <member value='&quot;Guatemala&quot;' />
            <member value='&quot;Guinea&quot;' />
            <member value='&quot;Guinea-Bissau&quot;' />
            <member value='&quot;Guyana&quot;' />
            <member value='&quot;Haiti&quot;' />
            <member value='&quot;Honduras&quot;' />
            <member value='&quot;Hong Kong&quot;' />
            <member value='&quot;Hungary&quot;' />
            <member value='&quot;Iceland&quot;' />
            <member value='&quot;India&quot;' />
            <member value='&quot;Indonesia&quot;' />
            <member value='&quot;International transport&quot;' />
            <member value='&quot;Iran&quot;' />
            <member value='&quot;Iraq&quot;' />
            <member value='&quot;Ireland&quot;' />
            <member value='&quot;Israel&quot;' />
            <member value='&quot;Italy&quot;' />
            <member value='&quot;Jamaica&quot;' />
            <member value='&quot;Japan&quot;' />
            <member value='&quot;Jordan&quot;' />
            <member value='&quot;Kazakhstan&quot;' />
            <member value='&quot;Kenya&quot;' />
            <member value='&quot;Kiribati&quot;' />
            <member value='&quot;Kosovo&quot;' />
            <member value='&quot;Kuwait&quot;' />
            <member value='&quot;Kuwaiti Oil Fires&quot;' />
            <member value='&quot;Kyrgyzstan&quot;' />
            <member value='&quot;Laos&quot;' />
            <member value='&quot;Latvia&quot;' />
            <member value='&quot;Lebanon&quot;' />
            <member value='&quot;Leeward Islands&quot;' />
            <member value='&quot;Lesotho&quot;' />
            <member value='&quot;Liberia&quot;' />
            <member value='&quot;Libya&quot;' />
            <member value='&quot;Liechtenstein&quot;' />
            <member value='&quot;Lithuania&quot;' />
            <member value='&quot;Luxembourg&quot;' />
            <member value='&quot;Macao&quot;' />
            <member value='&quot;Madagascar&quot;' />
            <member value='&quot;Malawi&quot;' />
            <member value='&quot;Malaysia&quot;' />
            <member value='&quot;Maldives&quot;' />
            <member value='&quot;Mali&quot;' />
            <member value='&quot;Malta&quot;' />
            <member value='&quot;Marshall Islands&quot;' />
            <member value='&quot;Martinique&quot;' />
            <member value='&quot;Mauritania&quot;' />
            <member value='&quot;Mauritius&quot;' />
            <member value='&quot;Mayotte&quot;' />
            <member value='&quot;Mexico&quot;' />
            <member value='&quot;Micronesia&quot;' />
            <member value='&quot;Micronesia (country)&quot;' />
            <member value='&quot;Moldova&quot;' />
            <member value='&quot;Mongolia&quot;' />
            <member value='&quot;Montenegro&quot;' />
            <member value='&quot;Montserrat&quot;' />
            <member value='&quot;Morocco&quot;' />
            <member value='&quot;Mozambique&quot;' />
            <member value='&quot;Myanmar&quot;' />
            <member value='&quot;Namibia&quot;' />
            <member value='&quot;Nauru&quot;' />
            <member value='&quot;Nepal&quot;' />
            <member value='&quot;Netherlands&quot;' />
            <member value='&quot;New Caledonia&quot;' />
            <member value='&quot;New Zealand&quot;' />
            <member value='&quot;Nicaragua&quot;' />
            <member value='&quot;Niger&quot;' />
            <member value='&quot;Nigeria&quot;' />
            <member value='&quot;Niue&quot;' />
            <member value='&quot;North America&quot;' />
            <member value='&quot;North America (excl. USA)&quot;' />
            <member value='&quot;North Korea&quot;' />
            <member value='&quot;North Macedonia&quot;' />
            <member value='&quot;Norway&quot;' />
            <member value='&quot;Oceania&quot;' />
            <member value='&quot;Oman&quot;' />
            <member value='&quot;Pakistan&quot;' />
            <member value='&quot;Palau&quot;' />
            <member value='&quot;Palestine&quot;' />
            <member value='&quot;Panama&quot;' />
            <member value='&quot;Panama Canal Zone&quot;' />
            <member value='&quot;Papua New Guinea&quot;' />
            <member value='&quot;Paraguay&quot;' />
            <member value='&quot;Peru&quot;' />
            <member value='&quot;Philippines&quot;' />
            <member value='&quot;Poland&quot;' />
            <member value='&quot;Portugal&quot;' />
            <member value='&quot;Puerto Rico&quot;' />
            <member value='&quot;Qatar&quot;' />
            <member value='&quot;Reunion&quot;' />
            <member value='&quot;Romania&quot;' />
            <member value='&quot;Russia&quot;' />
            <member value='&quot;Rwanda&quot;' />
            <member value='&quot;Ryukyu Islands&quot;' />
            <member value='&quot;Saint Helena&quot;' />
            <member value='&quot;Saint Kitts and Nevis&quot;' />
            <member value='&quot;Saint Lucia&quot;' />
            <member value='&quot;Saint Pierre and Miquelon&quot;' />
            <member value='&quot;Saint Vincent and the Grenadines&quot;' />
            <member value='&quot;Samoa&quot;' />
            <member value='&quot;Sao Tome and Principe&quot;' />
            <member value='&quot;Saudi Arabia&quot;' />
            <member value='&quot;Senegal&quot;' />
            <member value='&quot;Serbia&quot;' />
            <member value='&quot;Seychelles&quot;' />
            <member value='&quot;Sierra Leone&quot;' />
            <member value='&quot;Singapore&quot;' />
            <member value='&quot;Sint Maarten (Dutch part)&quot;' />
            <member value='&quot;Slovakia&quot;' />
            <member value='&quot;Slovenia&quot;' />
            <member value='&quot;Solomon Islands&quot;' />
            <member value='&quot;Somalia&quot;' />
            <member value='&quot;South Africa&quot;' />
            <member value='&quot;South America&quot;' />
            <member value='&quot;South Korea&quot;' />
            <member value='&quot;South Sudan&quot;' />
            <member value='&quot;Spain&quot;' />
            <member value='&quot;Sri Lanka&quot;' />
            <member value='&quot;St. Kitts-Nevis-Anguilla&quot;' />
            <member value='&quot;Sudan&quot;' />
            <member value='&quot;Suriname&quot;' />
            <member value='&quot;Sweden&quot;' />
            <member value='&quot;Switzerland&quot;' />
            <member value='&quot;Syria&quot;' />
            <member value='&quot;Taiwan&quot;' />
            <member value='&quot;Tajikistan&quot;' />
            <member value='&quot;Tanzania&quot;' />
            <member value='&quot;Thailand&quot;' />
            <member value='&quot;Timor&quot;' />
            <member value='&quot;Togo&quot;' />
            <member value='&quot;Tonga&quot;' />
            <member value='&quot;Trinidad and Tobago&quot;' />
            <member value='&quot;Tunisia&quot;' />
            <member value='&quot;Turkey&quot;' />
            <member value='&quot;Turkmenistan&quot;' />
            <member value='&quot;Turks and Caicos Islands&quot;' />
            <member value='&quot;Tuvalu&quot;' />
            <member value='&quot;Uganda&quot;' />
            <member value='&quot;Ukraine&quot;' />
            <member value='&quot;United Arab Emirates&quot;' />
            <member value='&quot;United Kingdom&quot;' />
            <member value='&quot;United States&quot;' />
            <member value='&quot;Uruguay&quot;' />
            <member value='&quot;Uzbekistan&quot;' />
            <member value='&quot;Vanuatu&quot;' />
            <member value='&quot;Venezuela&quot;' />
            <member value='&quot;Vietnam&quot;' />
            <member value='&quot;Wallis and Futuna&quot;' />
            <member value='&quot;Yemen&quot;' />
            <member value='&quot;Zambia&quot;' />
            <member value='&quot;Zimbabwe&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='45560' id='5' name='Sheet 7 (2)' w='42868' x='1132' y='1892' />
        <zone h='9607' id='6' name='Sheet 7 (2)' pane-specification-id='1' param='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' type-v2='color' w='10717' x='87019' y='3348' />
        <zone h='6405' id='7' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='12075' x='86642' y='16594' />
        <zone h='44250' id='8' name='Sheet 8 (2)' w='40151' x='45358' y='3057' />
        <zone h='47598' id='9' name='Sheet 11' w='42792' x='1208' y='49199' />
        <zone h='8443' id='10' name='Sheet 11' pane-specification-id='2' param='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]' type-v2='color' w='12000' x='86717' y='42649' />
        <zone h='48180' id='11' name='Trend of Each Co2 Emission Category' w='40226' x='45283' y='49054' />
        <zone h='7569' id='14' type-v2='dashboard-object' w='12377' x='86717' y='81368'>
          <button action='tabdoc:goto-sheet window-id=&quot;{49D9A8F0-0331-40F1-99B3-FB3F92FF5F09}&quot;' button-type='text'>
            <button-visual-state>
              <caption>NEXT</caption>
              <button-caption-font-style fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#e6e6e6' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='2' />
              <format attr='border-color' value='#000000' />
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1450' minheight='1450' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='30' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97672' id='29' param='vert' type-v2='layout-flow' w='98792' x='604' y='1164'>
                <zone fixed-size='280' h='45560' id='5' is-fixed='true' name='Sheet 7 (2)' w='42868' x='1132' y='1892'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9607' id='6' name='Sheet 7 (2)' pane-specification-id='1' param='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' type-v2='color' w='10717' x='87019' y='3348'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44250' id='8' is-fixed='true' name='Sheet 8 (2)' w='40151' x='45358' y='3057'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='6405' id='7' mode='compact' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='12075' x='86642' y='16594'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48180' id='11' is-fixed='true' name='Trend of Each Co2 Emission Category' w='40226' x='45283' y='49054'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47598' id='9' is-fixed='true' name='Sheet 11' w='42792' x='1208' y='49199'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8443' id='10' name='Sheet 11' pane-specification-id='2' param='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]' type-v2='color' w='12000' x='86717' y='42649'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7569' id='14' type-v2='dashboard-object' w='12377' x='86717' y='81368'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{49D9A8F0-0331-40F1-99B3-FB3F92FF5F09}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>NEXT</caption>
                      <button-caption-font-style fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#e6e6e6' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='2' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{0E39610F-0B54-4DA4-B421-3410E2C2BECD}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Change in CO2 Emission And CO2 Emission in 2020</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-title'>
          <format attr='border-style' value='solid' />
          <format attr='border-width' value='2' />
          <format attr='border-color' value='#000000' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='co2_emission (co2_emission_analysis)' name='federated.1dkg6me1xmfshc1g3kuh21i1f30d' />
      </datasources>
      <datasource-dependencies datasource='federated.1dkg6me1xmfshc1g3kuh21i1f30d'>
        <column-instance column='[year]' derivation='None' name='[none:year:qk]' pivot='key' type='quantitative' />
        <column caption='Year' datatype='integer' datatype-customized='true' name='[year]' role='dimension' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='24' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97672' id='27' param='vert' type-v2='layout-flow' w='98792' x='604' y='1164'>
            <zone h='5967' id='28' type-v2='title' w='98792' x='604' y='1164'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='91705' id='25' type-v2='layout-basic' w='98792' x='604' y='7131' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='72052' id='3' name='Sheet 8' w='42491' x='679' y='8443' />
        <zone h='72198' id='4' name='Sheet 7' w='52604' x='43774' y='8297' />
        <zone h='10771' id='5' name='Sheet 7' param='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:year:qk]' type-v2='filter' values='database' w='17962' x='47623' y='84134' />
        <zone h='7569' id='51' type-v2='dashboard-object' w='12377' x='85887' y='83697'>
          <button action='tabdoc:goto-sheet window-id=&quot;{02BCB017-CA92-4BC6-9D08-DF7CEEBD64ED}&quot;' button-type='text'>
            <button-visual-state>
              <caption>NEXT</caption>
              <button-caption-font-style fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#e6e6e6' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='2' />
              <format attr='border-color' value='#000000' />
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1'>Change in CO2 Emission And CO2 Emission in 2020</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='800' minheight='800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='69' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97672' id='68' param='vert' type-v2='layout-flow' w='98792' x='604' y='1164'>
                <zone h='5967' id='28' type-v2='title' w='98792' x='604' y='1164'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10771' id='5' name='Sheet 7' param='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:year:qk]' type-v2='filter' values='database' w='17962' x='47623' y='84134'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='72198' id='4' is-fixed='true' name='Sheet 7' w='52604' x='43774' y='8297'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='72052' id='3' is-fixed='true' name='Sheet 8' w='42491' x='679' y='8443'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7569' id='51' type-v2='dashboard-object' w='12377' x='85887' y='83697'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{02BCB017-CA92-4BC6-9D08-DF7CEEBD64ED}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>NEXT</caption>
                      <button-caption-font-style fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#e6e6e6' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='2' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{9A115B42-909E-4869-97CF-BDE4BB4E5EC2}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Comparison of India to other countries on the basis of Various Fossils of CO2 Emissions</run>
          </formatted-text>
        </title>
      </layout-options>
      <style>
        <style-rule element='dash-title'>
          <format attr='border-color' value='#000000' />
          <format attr='border-style' value='solid' />
        </style-rule>
        <style-rule element='parameter-ctrl'>
          <format attr='border-color' value='#000000' />
          <format attr='border-style' value='solid' />
          <format attr='border-width' value='2' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Country Parameter' datatype='string' name='[Country Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;South Africa&quot;'>
          <calculation class='tableau' formula='&quot;South Africa&quot;' />
          <members>
            <member value='&quot;Afghanistan&quot;' />
            <member value='&quot;Albania&quot;' />
            <member value='&quot;Algeria&quot;' />
            <member value='&quot;Andorra&quot;' />
            <member value='&quot;Angola&quot;' />
            <member value='&quot;Anguilla&quot;' />
            <member value='&quot;Antigua and Barbuda&quot;' />
            <member value='&quot;Argentina&quot;' />
            <member value='&quot;Armenia&quot;' />
            <member value='&quot;Aruba&quot;' />
            <member value='&quot;Austria&quot;' />
            <member value='&quot;Azerbaijan&quot;' />
            <member value='&quot;Bahamas&quot;' />
            <member value='&quot;Bahrain&quot;' />
            <member value='&quot;Bangladesh&quot;' />
            <member value='&quot;Barbados&quot;' />
            <member value='&quot;Belarus&quot;' />
            <member value='&quot;Belgium&quot;' />
            <member value='&quot;Belize&quot;' />
            <member value='&quot;Benin&quot;' />
            <member value='&quot;Bermuda&quot;' />
            <member value='&quot;Bhutan&quot;' />
            <member value='&quot;Bolivia&quot;' />
            <member value='&quot;Bonaire Sint Eustatius and Saba&quot;' />
            <member value='&quot;Bosnia and Herzegovina&quot;' />
            <member value='&quot;Botswana&quot;' />
            <member value='&quot;Brazil&quot;' />
            <member value='&quot;British Virgin Islands&quot;' />
            <member value='&quot;Brunei&quot;' />
            <member value='&quot;Bulgaria&quot;' />
            <member value='&quot;Burkina Faso&quot;' />
            <member value='&quot;Burundi&quot;' />
            <member value='&quot;Cambodia&quot;' />
            <member value='&quot;Cameroon&quot;' />
            <member value='&quot;Canada&quot;' />
            <member value='&quot;Cape Verde&quot;' />
            <member value='&quot;Central African Republic&quot;' />
            <member value='&quot;Chad&quot;' />
            <member value='&quot;Chile&quot;' />
            <member value='&quot;China&quot;' />
            <member value='&quot;Christmas Island&quot;' />
            <member value='&quot;Colombia&quot;' />
            <member value='&quot;Comoros&quot;' />
            <member value='&quot;Congo&quot;' />
            <member value='&quot;Cook Islands&quot;' />
            <member value='&quot;Costa Rica&quot;' />
            <member value='&quot;Cote d&apos;Ivoire&quot;' />
            <member value='&quot;Croatia&quot;' />
            <member value='&quot;Cuba&quot;' />
            <member value='&quot;Curacao&quot;' />
            <member value='&quot;Cyprus&quot;' />
            <member value='&quot;Czechia&quot;' />
            <member value='&quot;Democratic Republic of Congo&quot;' />
            <member value='&quot;Denmark&quot;' />
            <member value='&quot;Djibouti&quot;' />
            <member value='&quot;Dominica&quot;' />
            <member value='&quot;Dominican Republic&quot;' />
            <member value='&quot;Ecuador&quot;' />
            <member value='&quot;Egypt&quot;' />
            <member value='&quot;El Salvador&quot;' />
            <member value='&quot;Equatorial Guinea&quot;' />
            <member value='&quot;Eritrea&quot;' />
            <member value='&quot;Estonia&quot;' />
            <member value='&quot;Eswatini&quot;' />
            <member value='&quot;Ethiopia&quot;' />
            <member value='&quot;EU-27&quot;' />
            <member value='&quot;EU-28&quot;' />
            <member value='&quot;Faeroe Islands&quot;' />
            <member value='&quot;Fiji&quot;' />
            <member value='&quot;Finland&quot;' />
            <member value='&quot;France&quot;' />
            <member value='&quot;French Equatorial Africa&quot;' />
            <member value='&quot;French Guiana&quot;' />
            <member value='&quot;French Polynesia&quot;' />
            <member value='&quot;French West Africa&quot;' />
            <member value='&quot;Gabon&quot;' />
            <member value='&quot;Gambia&quot;' />
            <member value='&quot;Georgia&quot;' />
            <member value='&quot;Germany&quot;' />
            <member value='&quot;Ghana&quot;' />
            <member value='&quot;Greece&quot;' />
            <member value='&quot;Greenland&quot;' />
            <member value='&quot;Grenada&quot;' />
            <member value='&quot;Guadeloupe&quot;' />
            <member value='&quot;Guatemala&quot;' />
            <member value='&quot;Guinea&quot;' />
            <member value='&quot;Guinea-Bissau&quot;' />
            <member value='&quot;Guyana&quot;' />
            <member value='&quot;Haiti&quot;' />
            <member value='&quot;Honduras&quot;' />
            <member value='&quot;Hong Kong&quot;' />
            <member value='&quot;Hungary&quot;' />
            <member value='&quot;Iceland&quot;' />
            <member value='&quot;Indonesia&quot;' />
            <member value='&quot;International transport&quot;' />
            <member value='&quot;Iran&quot;' />
            <member value='&quot;Iraq&quot;' />
            <member value='&quot;Ireland&quot;' />
            <member value='&quot;Israel&quot;' />
            <member value='&quot;Italy&quot;' />
            <member value='&quot;Jamaica&quot;' />
            <member value='&quot;Japan&quot;' />
            <member value='&quot;Jordan&quot;' />
            <member value='&quot;Kazakhstan&quot;' />
            <member value='&quot;Kenya&quot;' />
            <member value='&quot;Kiribati&quot;' />
            <member value='&quot;Kosovo&quot;' />
            <member value='&quot;Kuwait&quot;' />
            <member value='&quot;Kuwaiti Oil Fires&quot;' />
            <member value='&quot;Kyrgyzstan&quot;' />
            <member value='&quot;Laos&quot;' />
            <member value='&quot;Latvia&quot;' />
            <member value='&quot;Lebanon&quot;' />
            <member value='&quot;Leeward Islands&quot;' />
            <member value='&quot;Lesotho&quot;' />
            <member value='&quot;Liberia&quot;' />
            <member value='&quot;Libya&quot;' />
            <member value='&quot;Liechtenstein&quot;' />
            <member value='&quot;Lithuania&quot;' />
            <member value='&quot;Luxembourg&quot;' />
            <member value='&quot;Macao&quot;' />
            <member value='&quot;Madagascar&quot;' />
            <member value='&quot;Malawi&quot;' />
            <member value='&quot;Malaysia&quot;' />
            <member value='&quot;Maldives&quot;' />
            <member value='&quot;Mali&quot;' />
            <member value='&quot;Malta&quot;' />
            <member value='&quot;Marshall Islands&quot;' />
            <member value='&quot;Martinique&quot;' />
            <member value='&quot;Mauritania&quot;' />
            <member value='&quot;Mauritius&quot;' />
            <member value='&quot;Mayotte&quot;' />
            <member value='&quot;Mexico&quot;' />
            <member value='&quot;Micronesia&quot;' />
            <member value='&quot;Micronesia (country)&quot;' />
            <member value='&quot;Moldova&quot;' />
            <member value='&quot;Mongolia&quot;' />
            <member value='&quot;Montenegro&quot;' />
            <member value='&quot;Montserrat&quot;' />
            <member value='&quot;Morocco&quot;' />
            <member value='&quot;Mozambique&quot;' />
            <member value='&quot;Myanmar&quot;' />
            <member value='&quot;Namibia&quot;' />
            <member value='&quot;Nauru&quot;' />
            <member value='&quot;Nepal&quot;' />
            <member value='&quot;Netherlands&quot;' />
            <member value='&quot;New Caledonia&quot;' />
            <member value='&quot;New Zealand&quot;' />
            <member value='&quot;Nicaragua&quot;' />
            <member value='&quot;Niger&quot;' />
            <member value='&quot;Nigeria&quot;' />
            <member value='&quot;Niue&quot;' />
            <member value='&quot;North Macedonia&quot;' />
            <member value='&quot;Norway&quot;' />
            <member value='&quot;Oceania&quot;' />
            <member value='&quot;Oman&quot;' />
            <member value='&quot;Pakistan&quot;' />
            <member value='&quot;Palau&quot;' />
            <member value='&quot;Palestine&quot;' />
            <member value='&quot;Panama&quot;' />
            <member value='&quot;Panama Canal Zone&quot;' />
            <member value='&quot;Papua New Guinea&quot;' />
            <member value='&quot;Paraguay&quot;' />
            <member value='&quot;Peru&quot;' />
            <member value='&quot;Philippines&quot;' />
            <member value='&quot;Poland&quot;' />
            <member value='&quot;Portugal&quot;' />
            <member value='&quot;Puerto Rico&quot;' />
            <member value='&quot;Qatar&quot;' />
            <member value='&quot;Reunion&quot;' />
            <member value='&quot;Romania&quot;' />
            <member value='&quot;Russia&quot;' />
            <member value='&quot;Rwanda&quot;' />
            <member value='&quot;Ryukyu Islands&quot;' />
            <member value='&quot;Saint Helena&quot;' />
            <member value='&quot;Saint Kitts and Nevis&quot;' />
            <member value='&quot;Saint Lucia&quot;' />
            <member value='&quot;Saint Pierre and Miquelon&quot;' />
            <member value='&quot;Saint Vincent and the Grenadines&quot;' />
            <member value='&quot;Samoa&quot;' />
            <member value='&quot;Sao Tome and Principe&quot;' />
            <member value='&quot;Saudi Arabia&quot;' />
            <member value='&quot;Senegal&quot;' />
            <member value='&quot;Serbia&quot;' />
            <member value='&quot;Seychelles&quot;' />
            <member value='&quot;Sierra Leone&quot;' />
            <member value='&quot;Singapore&quot;' />
            <member value='&quot;Sint Maarten (Dutch part)&quot;' />
            <member value='&quot;Slovakia&quot;' />
            <member value='&quot;Slovenia&quot;' />
            <member value='&quot;Solomon Islands&quot;' />
            <member value='&quot;Somalia&quot;' />
            <member value='&quot;South Africa&quot;' />
            <member value='&quot;South Korea&quot;' />
            <member value='&quot;South Sudan&quot;' />
            <member value='&quot;Spain&quot;' />
            <member value='&quot;Sri Lanka&quot;' />
            <member value='&quot;St. Kitts-Nevis-Anguilla&quot;' />
            <member value='&quot;Sudan&quot;' />
            <member value='&quot;Suriname&quot;' />
            <member value='&quot;Sweden&quot;' />
            <member value='&quot;Switzerland&quot;' />
            <member value='&quot;Syria&quot;' />
            <member value='&quot;Taiwan&quot;' />
            <member value='&quot;Tajikistan&quot;' />
            <member value='&quot;Tanzania&quot;' />
            <member value='&quot;Thailand&quot;' />
            <member value='&quot;Timor&quot;' />
            <member value='&quot;Togo&quot;' />
            <member value='&quot;Tonga&quot;' />
            <member value='&quot;Trinidad and Tobago&quot;' />
            <member value='&quot;Tunisia&quot;' />
            <member value='&quot;Turkey&quot;' />
            <member value='&quot;Turkmenistan&quot;' />
            <member value='&quot;Turks and Caicos Islands&quot;' />
            <member value='&quot;Tuvalu&quot;' />
            <member value='&quot;Uganda&quot;' />
            <member value='&quot;Ukraine&quot;' />
            <member value='&quot;United Arab Emirates&quot;' />
            <member value='&quot;United Kingdom&quot;' />
            <member value='&quot;United States&quot;' />
            <member value='&quot;Uruguay&quot;' />
            <member value='&quot;Uzbekistan&quot;' />
            <member value='&quot;Vanuatu&quot;' />
            <member value='&quot;Venezuela&quot;' />
            <member value='&quot;Vietnam&quot;' />
            <member value='&quot;Wallis and Futuna&quot;' />
            <member value='&quot;Yemen&quot;' />
            <member value='&quot;Zambia&quot;' />
            <member value='&quot;Zimbabwe&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='9' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97672' id='12' param='vert' type-v2='layout-flow' w='98792' x='604' y='1164'>
            <zone h='5967' id='13' type-v2='title' w='98792' x='604' y='1164'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='91705' id='10' type-v2='layout-basic' w='98792' x='604' y='7131' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='86317' id='3' name='India' w='39774' x='1585' y='10771' />
        <zone h='18341' id='4' name='India' pane-specification-id='0' param='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names]' type-v2='color' w='10189' x='87774' y='14410' />
        <zone h='86317' id='5' name='Countries' w='42792' x='43396' y='10771' />
        <zone custom-title='true' h='9170' id='34' mode='compact' param='[Parameters].[Country Parameter]' type-v2='paramctrl' w='10642' x='87623' y='40466'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000'>Choose any Country</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </zone>
        <zone h='7569' id='47' type-v2='dashboard-object' w='11396' x='87623' y='85007'>
          <button action='tabdoc:goto-sheet window-id=&quot;{884E1C0E-4774-426A-AA5B-E35A393E00D6}&quot;' button-type='text'>
            <button-visual-state>
              <caption>HOME</caption>
              <button-caption-font-style fontname='Tableau Bold' fontsize='12' />
              <format attr='background-color' value='#e6e6e6' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='2' />
              <format attr='border-color' value='#000000' />
            </button-visual-state>
          </button>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1'>Comparison of India to other countries on the basis of Various Fossils of CO2 Emissions</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='850' minheight='850' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='91' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97672' id='90' param='vert' type-v2='layout-flow' w='98792' x='604' y='1164'>
                <zone h='5967' id='13' type-v2='title' w='98792' x='604' y='1164'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='86317' id='3' is-fixed='true' name='India' w='39774' x='1585' y='10771'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='18341' id='4' name='India' pane-specification-id='0' param='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names]' type-v2='color' w='10189' x='87774' y='14410'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='86317' id='5' is-fixed='true' name='Countries' w='42792' x='43396' y='10771'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone custom-title='true' h='9170' id='34' mode='compact' param='[Parameters].[Country Parameter]' type-v2='paramctrl' w='10642' x='87623' y='40466'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#000000'>Choose any Country</run>
                    <run fontalignment='1'>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7569' id='47' type-v2='dashboard-object' w='11396' x='87623' y='85007'>
                  <button action='tabdoc:goto-sheet window-id=&quot;{884E1C0E-4774-426A-AA5B-E35A393E00D6}&quot;' button-type='text'>
                    <button-visual-state>
                      <caption>HOME</caption>
                      <button-caption-font-style fontname='Tableau Bold' fontsize='12' />
                      <format attr='background-color' value='#e6e6e6' />
                      <format attr='border-style' value='solid' />
                      <format attr='border-width' value='2' />
                      <format attr='border-color' value='#000000' />
                    </button-visual-state>
                  </button>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{99300257-13F5-4910-90DC-0BB4B669C724}' />
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='India'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names]</field>
            <field>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2CD9551F-9213-4EC1-B6E3-2B2FD36D0F55}' />
    </window>
    <window class='worksheet' name='Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names]' type='color' />
            <card mode='compact' param='[Parameters].[Country Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names]</field>
            <field>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:Calculation_661184761098993666:nk]</field>
            <field>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9FF3FFBF-E20F-4B55-BE74-4F120BA50504}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0434B4BA-378D-4279-933B-6C97B26322B7}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BBB9EAD3-F534-4298-963A-5140BF37F31C}' />
    </window>
    <window class='worksheet' name='Co2 Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{F353547C-5894-429F-ACA6-F9CB482C919A}' />
    </window>
    <window class='worksheet' name='Avg CO2 Emission of top 10 Countries'>
      <cards>
        <edge name='left'>
          <strip size='220'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:population:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:population:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{59009162-F880-41D9-A7A0-1328E431188F}' />
    </window>
    <window class='worksheet' name='Avg CO2 Emission Per Capita of top 10 Countries'>
      <cards>
        <edge name='left'>
          <strip size='220'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:population:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:population:qk]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B846D26E-DEF3-4934-9E5C-83FE81558A5B}' />
    </window>
    <window class='worksheet' name='Avg CO2 Emission Year Wise'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[avg:co2:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9DE9552A-0F36-4728-9D94-A6401315CC53}' />
    </window>
    <window class='worksheet' name='Trend of Each Co2 Emission Category'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A58F4548-0674-4F75-A529-B102DE4F6F94}' />
    </window>
    <window class='worksheet' name='Continent Wise Pie Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[sum:co2:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[:Measure Names]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:country:nk]</field>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F2E868AD-39E0-4B2D-86A5-1087E0C7DD03}' />
    </window>
    <window class='worksheet' name='Extraction Rate over year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1a5g6gk1o2vp3b1brnx4o000mnrp].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F318E5BA-0679-40F0-8DF7-BBDE487647AA}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]</field>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{37A9C39D-2F43-4BA2-96A3-766E11B73D16}' />
    </window>
    <window class='worksheet' name='Sheet 7 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]</field>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[Country_filter]</field>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:Calculation_458241302262734848:nk]</field>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]</field>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{40F68CE1-4F8C-44C0-ABF8-3F28552D8821}' />
    </window>
    <window class='worksheet' name='Sheet 8 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]</field>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:Calculation_458241302262734848:nk]</field>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]</field>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:year:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{CD3FB383-3235-4CA6-A327-FB5AD7FB3905}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:year:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='1' param='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]</field>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:Calculation_458241302262734848:nk]</field>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]</field>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5008F645-7E1D-429B-A5B8-20AF6F74036B}' />
    </window>
    <window class='worksheet' name='Sheet 11'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]</field>
            <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:year:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F61EF5C1-D3AC-4FF8-AAD3-28108DFAF0BE}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Avg CO2 Emission Per Capita of top 10 Countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Avg CO2 Emission of top 10 Countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Co2 Map'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Continent Wise Pie Chart'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='17' />
      <simple-id uuid='{884E1C0E-4774-426A-AA5B-E35A393E00D6}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Sheet 11'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[none:country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 7 (2)'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0iadx9u0zjyzps1fohv8z0p5h01b].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 8 (2)'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Trend of Each Co2 Emission Category'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='14' />
      <simple-id uuid='{806F9628-817C-4156-82E0-75636D30E980}' />
    </window>
    <window class='dashboard' name='Dashboard 3'>
      <viewpoints>
        <viewpoint name='Sheet 7'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 8'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='51' />
      <simple-id uuid='{49D9A8F0-0331-40F1-99B3-FB3F92FF5F09}' />
    </window>
    <window class='dashboard' name='Dashboard 4'>
      <viewpoints>
        <viewpoint name='Countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='India'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1dkg6me1xmfshc1g3kuh21i1f30d].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='47' />
      <simple-id uuid='{02BCB017-CA92-4BC6-9D08-DF7CEEBD64ED}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='240' name='Avg CO2 Emission Per Capita of top 10 Countries' width='240'>
      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
      PzqMM7vJ4DgVAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='240' name='Avg CO2 Emission Year Wise' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Avg CO2 Emission of top 10 Countries' width='240'>
      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
      +EYAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='240' name='Co2 Map' width='240'>
      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
      8QLAvwMN9mO8afHfgQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='240' name='Continent Wise Pie Chart' width='240'>
      iVBORw0KGgoAAAANSUhEUgAAAPAAAADwCAYAAAA+VemSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deXCU953n8ffzPH2rLx2ti0scAowhxsbYxrGNzzh2EjuZTCbZ7NRW7c4f
      M7t/7M7u7NTU7FGV2qnZralszVlzZSbJZjKxJ06c4IBtjPGBD8A2hzEGcSMh0IGOltT3c/32
      D4ENRoCObrXU/X1VuQyt7qe/LenD83t+z+/QlFIKIcS8pJe7ACHE9EmAhZjHJMBCzGMSYCHm
      MQmwEPOYBFiIeUwCLMQ8JgEWYh6TAAsxj0mAhZjHJMBCzGMSYCHmMQmwEPOYBFjMScrOs3Pb
      L9lz6ATXmy/nui4KSPb2UfjM1/rPHOHsxfSk32/0YhfJrD3teqdEmex77wCOAtfO8+bOV7g4
      lgfATA/T0z826UMZ3/nOd75TojKFmLa3t25h2YNfJuF3ULbJjtfeomVxG/39vcRqfJw718P3
      /+RP6MoZaMP9nOg7S84J0VgbBqV4a+8eBi700b5yCccP7OPAsXOM9p5kyAxQF1K8umMn4cRC
      MmNDdB0/gT9Sgz8Up+f4fj48M0iDr8C27W/QuGQZIZ9R1M820nWEV947REvbag7teIa3O5Ks
      amtmeKCHrPLg94dwxi6w/a39tC1qZMe2rbihBA2xmmuOJWdgMSdtvP8edv3yWd473Ek2dZ6H
      Nm9kx6s72XPgANgpDnT0cOft9/LkVx5Cs9IsaN9Ad8dBABxrBM2bwMDEdvN8fLyfmlwPtKzl
      3OmPeH3Lc/QMDfOjn/yMt197EaN+AcOn9nDmwnkOdVvceetS0pk0usrziy0vFv2zdZy5wFOP
      beLYibOsXLWeL37hSXKd+zg+rBF1LnLkZA+vvHuQxzdv5Lnv/T0jSueXz/0C+3JLxExzfjAF
      SIDFHJW2dL7x7d/EHOkib9pomo4GaI5DajRJOm+CZmKaDh5fjKbGOMGgF4CzH+zhTO85+s50
      sL87RSLRhD8UIxEP4/P7wBvhkSef5t/+xpeItyxj1ZKmS++qMHQD3dDZd+AIDz68GY9mFfmT
      WRw70sHbew5w8shHuJce9QZi3LF+NdqlOnTdAGuEk509GP5m6u2zPPuLrTz3wssc2/ca3/3r
      f6CjqwdNVuQQc1Em2cvO13fTtu4uliWCvP72+9z/yKNke47xcdcQy9vX0BwyeefAWe5Y1068
      tYXh3h5aWlrpOtfF4sVLwM3RfX4Er8eDV7MI1jUyOjxAfcTPa6+/xdLP3UPMr2htaWGk/wxa
      bCkDJ97nXDbAmiYPB04nWbliISva2or2uZSZomvQoq21jv7zXfiCNThaEK89ireuFaMwxHDO
      T8Ds5+/+/M+I3HIX77z5Pv/5W3dir/p1/AP7Wb6wiR1nFd+4a5EEWIi5SCmHF7a8wOYHH2L/
      W2/SvrKe/pqNGH0fsGzZUp594W0euWeNBFiIuUgpRcE0Cfj9OGYBV9NA94JrYXi8ZMZGMAI1
      EmAxj7kWe996g+7BDJsefJSFDRFcM832l7YTXrCG1QmNN977iLFRkye+8iAf7DnI5se/SPL8
      aRa1r8ana2UoWnHg3Z2c6hnlzvsfZVlzHDuT5Bdbt+EJJHj8ic3s3bkdN76EB9a1su2V3Wz+
      0lMku0+xtH0Vns/ULAEW85dyyeZN0n0n+LDX5Qv3rufE29uxV93P+Xd28vlfe5oaFNtf3Ea0
      NsLSplp2d6Xx57Lc/fl7ScSvvS0zC0WTy+UojJzjrY8yPPX4BgY7P2LH+93cv3kTnqGP6PSs
      xXfmLfrMGBseXcYHL3bhBnJsuv8BGj9Ts/RCi/lL0xnqPMpLb+6jsXG8J3k0pdOSqKHZHyQF
      jJz7iFDrOpa3JNj59kFU6iLpnMU7775Dec5cGqN9Z3lh+7s0L2wAINa8nI23reDgm1s5fn6U
      xqZ6Wpr8RFqbeeXnb5L25bByWfa+tYutP/8JP/qnn9A7Oj7ww1OWzyBEEbhmjqSps/G21Rzv
      6qKtIUDb8ihvv/4eqdEU30Tx2qEuNj/xZQIenYfMAilvlGOHTqJp5Wg+AxQYSFrctfE2Os50
      sqo1hp1PMpq30NBoWNzGh+/sgtEUX/jmrbRHCwz6WjjzwW60VCdO22N8e5XLzhMXaNm4XAIs
      5i/N66chHmYoHeRLm9sZSw7RsPJu1nuOE7jjVjzA3Q88QMAz3tCMNS+jJRqjIeCFUAPlibCP
      RCLKxdECTzx+O9mRJLHGhdSOnaBp85dZ1FRLXeA01NxOxAC3aTlro1GafXeizCTv9epomuLy
      +FK5BhZivlA2v/rpsyTz8OhXv05m8LwEWIjrUUph2zaO4+A6DpZlkc1myGdzWLaF4zg4toPr
      OqT0OC4Guq7h8xoEvB4Cfg/hoI+g34vX0PEYOh6Pjq5pRWvCSxNaVLXLITXNAkMDA1zs72dk
      eJhkcpjRZJJUKkUum6WQz2NZEw+r1A2DzuB6Uo5v4q9rGqGAl3DQRzTkoyFeQ3NdmJb68Cf/
      j4T8+LwG+hSDLWdgUTWUUuA4OKkU5unTpDq7eHV0mP5LoXUcZ1rHvVmAJ6M2EmBRY4ylLXGW
      t9bSviBOS20QDN8Nz9ZyBhYVS6nxzh5neJj8x0fIf3wE8/Qp7L5+UArb6+VCoo5R5d78YCWW
      TOVJpvJ8dLofgPsSA/z70PMYLbdhLNyAsXAjen076MZVgZYAi4qjHIfCsWNkP9hH/vBh7As9
      Ez7PY1nU6jqjTvkDfCVd17i9fhQ1NIh9+jXs068BoNU0Yiy5F8/SB/As2YTmj0iARWVQlkXu
      o4/I7X2f3MGDuOnJrcbRkMvT6ZtbMfD5PCx2z17zuMpcxD66BfvoFjC8GIs3SYDF/KVcF/Pk
      STLv7ib73vu4o6NTPkZCm3uDEZtqQ8Qzp2/8JMfCOfuWBFjMP87YGNk9e0m/9jrW+fPgTr8J
      HE+l0RviuDM4RrEtqMkRGB2c1HMlwGJeUEphnTtH+tWdZPfuxU1ninLckOsS1nTGmDsBXm50
      T3qUmARYzHlmdzejP/0Z+UOHUNe5FztdHssi5rpMfh3I0vJ6PSzVuyf9fAmwmLPs/ouMbXuR
      zDvvoHK5kryHBiRsm25jblwLx8I+GnOnJv18CbCYU9Sl+7apF18i/eYuVDZb8vdscFyYIwFu
      iuhEcucm/XwJsJgz3EyG1I5XSb30Em5q8ouyz1R9NofmjzIXBiUuDw5i5MxJP18CLMpOWRbZ
      Dz5g9OfPY/f0zvr7B22HsMdDqsjX11NlGDptdE3pNRJgUTZKKazubkb++Rnyhw9z3T1USsxr
      WUQtm1RZ3v1Tfp+XRRMM4LgRCbAoCzeXI/XSy4xte7FkHVSTpQEJBRfKtUjHJU1xL/Fs55Re
      IwEWs0ophXnqFMM/+CHW2c5yl/OJhoIJAW9Za1gQyhEYm9wAjsskwGLWuAWT1IsvMrblBZQ5
      +Y6a2dBgWWUP8HLPhSkv8yMBFiWnlMLu7WP4779H4fjxcpczoVC+QE19nEyZ/mHx+7200Tnl
      10mARUkppci+9z7J7/8AN1XubqLr8zoO0YJJpkzXwdGQl0ThzJRfJwEWJaMsi5FnniW1/ZWy
      9TBPlqYUCcOg153eqhwz1RJRhHMXpvw6CbAoCWdkhME//wsKx+Zmk3ki9ZksBP1lee/loSE8
      ucKUXycBFsWlFGZnJwN/+mc4A1PrUS23RJkmJBmGzhLVOa3XSoBF0SilyH2wj6G//VtULl/u
      cqYsnMkQiIfJz/KIrGDAxyJ7agM4LpMAi6JQriK9cyfJf/ox2Ha5y5kWj+sSt236Zvl9m2MG
      0fzkJzBcSQIsZkw5DqPP/4KxLS/MaHWMctOUogGdPma3I6s1mCEwNjyt10qAxYwoyyL5zz8h
      vePVOd/TfDMa4zOTCE5/fefpaPf2oE1zr0QJsJg2ZZokf/Rj0q+9Vu5SiiYxy1ueBQK+KU9g
      uNLcmMVcxZTr0NfXDyhSY2M3OYk5ZNJXD/xXrkNP71Su2lxGRkamUelnjlIoMPyDH1ZUeAGi
      qRRez+yd16IhL43TGMBxmQS4zOxClp/84G/ozzjsev0NwOVC1xmGx7KY+TypkSF6uj7mxz99
      iYGRAXbv2kdn5zksdzzp2eEu/t8//ISkpchnMvSc72RoOMmZs+ewXcXoUD/n+wZx7QLp9BhD
      wyky6QyuY3Gu8wzpXIGLPd109w5MumZlWSR/9E9k3txVou9K+Xhcl9pZvBJYELEJ5fun/Xpp
      QpedxsZ772bfnr0AnDzwLmczHobfO8iaBbUc6c1y99oEA4PDmJZNX3cnPs8YyYKH21e1cuzw
      Cb75b77IoYNnqRk8QjrRwoE9W7lrWS0jzn0c2rULu5Dl8w/cyRvvneCJLz7MkX2HaK0zSHnj
      6IEoZ48eouPjU3z5t3+X1uCNq1W2zcgz/0LmjTdL/60pA00p6h2Hi7P0fssCQ3iy07/lJmfg
      OcAI1NLsGaMnZXF+MMWGDRuoj/kxVYDNDz/M8rYltLWtoLUhysIVa1i/dg04Jso1+fDoUT7Y
      8yEdHQfAF2XjxjtZuLSNO25dRm5kgEHbx623rSce8rJ+02aWLagHYCBts/HODcT9OfqHbGL+
      EQZvMlRZuS6jz/+C1Pbt877D6no0Lk0tnAXjK3B0zugYcgYuM93w0tLcTNuCdZzZuov7Pr+R
      F19+gdpFq1nUEiUY8IC/nrjay8dnmlm4qBFfTYiEAY6ZZ9NjX2PNyjYOHz5MxBfEC7S3teGN
      hlkYa2bTcC/9Q2OsWrmI1powoLN02RIWt4TZ8asXuPXOuwh6bGhZTf0Nzr5KKdKv7mTshV9V
      bHgvS8zSx6sJBWi1pn/9C7K9qJgMpcju28/QX/5V0ddlnotMj4cfNdXjTPKe9nS3F21fUMMf
      qO8SsKZ3DxikCS0moXD6DMN/9/dVEV4Aj+NQOws90QsDKfxWckbHkADPdUrR2XGArdtfJ2e5
      KKU4tO9d0pcu01w7zxvbf8WHx8+hXIf33tzOW/uOYmWGefWNd7FcRd/5C9jTbGc5ySRDf/lX
      uJnibGUyH2hKUZ8v/XVwu2/6AzgukwDPdU6WnFbHve1R3v3oNBfPHmL37rcYvLTe+dE3X6Z+
      /cOc2bebweEemm7ZhNN1nJd272Vp1GbPoaOc7BvBM43xCcqyGPzrv8G+OFt9snODBjQ4pR1O
      GQz6WWjP7PoXJMBzn6eGhfU6rx88z/pldRw8OcKm9cs++fKC9mW8ueWn9NsaDfULcS4eZyzS
      wPJ4DbsPnuRi93E6DnzAL195e2rvqxQjzzxD4eMjRf5A80OixAGO1HhJ5G+yhegkSC/0XGeN
      sfPdDp7+2lM46Ytkkn28umcPy/kcbQ/cwscfnuSpf/VtTr38PCdPf8zpTJinHtsIQCwWYSzv
      0FUXgszUVnvI7N1LavuOUnyieaEum0ML+ku2W8PimgLB/NCMjyNn4DnOsRxca4Rf/vxnXMj4
      +fq3vsVv/c5/4rF7VnHq1Ek2Pf44J9/ZQfTWTdR5DEY6D/Pcc9vIuAo90MDqdRtoNQa45ba7
      Jv2e9sWLJL//w4q/XXQj3oJJrb90q3MsDQxhuDOfMy23kcRVlG1z8Y/+eM6uHjlbFPBaUwOn
      9Jt3Hkz1NpKu6/xe+yFuG35hhlXKGVhcQSnF2JYXqj68MN6R1ViiU1skEqLVPFmUY0mAxSes
      s53jI60EAPWFqS8yNxlNYUU0P/UVKCciARbApemB//j9qhmsMRkNll2S2cGLAiP47OKskS0B
      FiilSG17EfPMzO9LVhJfNkfUHyj6cVf6+9AoztJDEmCBfeECY1u3lbuMOUcD6ou8umYw6GeB
      NfP7v5dJgKucsm2SzzyLys+/ZWBnQ0IrbiM6GvaTyJ0q2vEkwFUu98E+8gc/LHcZc1Z9JlvU
      4y0J52Y8geFKEuAq5mazjDz3s6oesHEzDaq4IVnqu4jhFq93WwJcpZRSpF97Hbu3t9ylzGnB
      dJqQtzjLzOq6xjL9XFF7tiXAVcodGWFs24vlLmPO07i0+XcRRKNhmvIninKsyyTAVUgpxdi2
      F3FHR8tdyrxQrCV2EmGI5c4X52CXSICrkDM4SLpCV5UshfpscTqylvqH8DjF7RSTAFeh1Mvb
      UUX6pawG9WjoRbidtNLfO+MVOD5LAlxl7IEBMrveKncZ80o4lSagzywqgYCP1iIO4LhMAlxl
      Uq/urKr1rYpBU2rGeybFYyES2eLP8pIAVxFnbIzs21NcWkcA0GDOrCe6rSaDzyp+p6EEuIpk
      d+/BSc58Y7Nq1GDObJXKpd5edFX8jc8lwFXCLRRI76ysnQRnU53jYkyzI0vTNJYb50syNVEC
      XCUKR49iXSjOJPJqFMnm8E0zgvF4mMYSXP+CBLgqKKVIv7FLxjzPgO44NExzt4ZEWCOa6ypy
      ReMkwFXAGRgkf/hwucuY9+pzuZs/aQLL/Rcx3NKsdCIBrgLZvXtR0/zlE59KONNrwbT7ij+A
      4zIJcIVTrktm955yl1ERagsmhja1yPj9PhbaxR/AcZkEuMJZ585hnS/uAPpqFTVNfFPsR6ir
      DVOXPlaiiiTAFS/7wT6wi3//sRp5LIs6n3dKr2mrSeMvwQCOyyTAFUy5Lrm975W7jIpSn5la
      X8Iy4zyU6PoXJMAVzbpwAau/v9xlVJSpLnK3wluaARyXSYArWP7wYWk+F1ltJjvpqYW1tRES
      mdJuUyMBrmC5/QfLXULFiTku/km2iBMRg2jmbEnrkQBXKCeVwjxVvPWHxThPoUDMO7mOrHZ/
      H3qRdmC4HglwhSocO44q0eZc1UwDGifxfdU0jVWezpLXIwGuULn9+8tdQsVqtZybPicaCbKk
      cKTktUiAK5BSisLRjnKXUbHi+Tyemyyx0xDzEc+UbgTWZRLgCuQMDmIPDZW7jIoVtmwC7o17
      slYEBjHcmS0CMBkS4ApkdnWBc/Nmnpgew7KovUFHlqaN78AwGyTAFcg821nuEiqaBtRnrz8i
      y+sxWEJp5v9+lgS4AslG3aXXeIPxVYm6EHWZk7NShwS40iiF1dlZ7ioqXjyTQb9OR1ZrjUmw
      cHFW6pAAVxg3k8EZkT2PSi3sugSv049VqgXsJiIBrjBWb6+sfTULvAWT+ARnYI/HYLkxOx1Y
      IAGuOFZPT7lLqAoa0FC49jZROOSjqTB7fRAS4Apj9/aVu4SqkZjgsaaoh2i2c9ZqkABXEKUU
      9uBgucuoGrXpDNpnphYuDw3hcfOzVoMEuMI4w8PlLqFqhF1FSDc++buua7TN0v3fT95zVt9N
      lJwzJAGeLb5CgYj76XRBn9cjARYzoBROMlnuKqqGBiSuCHBjrZ94dnYH0UiAK4gyTdQMd9ET
      U9NgfzrmvCVYmLUBHJdJgCuIm06Xu4SqU5/Lo2kamgbt3guzNoDjMglwBXEzmXKXUHXCtk3I
      48Hr9dKmze71L0iAK4oEePb5TYuw5RAOemZ1AMdl09svUcxJsgbW7NOUIqHppGMa4ezsb2Ej
      Aa4gStaALouGQh4tMIw3Pfs7QEqAK4iyZRWOcqi3HIJ2eeZgS4AriSNn4HIIZbKE0xfK8t4S
      4Epyk4XWRHEor47jc7HjGtngGIX4GK1aeQbQSIAriUd+nEWla7iGixv1kQ2lsGIumcAIVo1D
      wUihrth1wac3Ei/hNqLXIz/xCqJ5jJs/SUxIGRrKB1ZMJxsaw4za5IIpzKCJRfamrx/WdSwt
      gFfN3kwkkABXFE3OwDengdJBXTqrmjGXbGAUK+KSM0auOqtORcEeYdDTSIs1e6txgAS4snim
      tnt8pVMa4PNgxRS5UJpCxCRfkyMfzGGRoZjjHjUKnFcRWop3yEmRAFcQPRQsdwllpWIBssEx
      rLgav1aNQdYYmvZZdYrvzhAOBS2EX928yV0sEuAKoteEy13C7PB5sCKKfE2WfKRAPlIgF0qP
      n1XLyO8fo3O0iVWe0u4JfCUJcAXRwzXlLqH4Aj4KEYt8rTl+Vo0rMpfPqtrcum1mMEy3djur
      kACLadCDIdC0+bmsrK7hRrzkA2nMGGSDo5gxh5yexNXmXlgnomMyaDvkPGGCanamdkqAK4mu
      oUejuKNzfGH3gBczaGJGXHKhFGbcJetLYhsWrja/R5MF/ElOm82s9Z6alfeTAFcSTcNTX4c5
      VwKsa7g1HgqBHGbM/aQnOOcZw9UdFE5Re4LngnjNCB09K1kbkwCLaTDq6uHM7F2DfcLvwfSb
      2FGNbOhST7BvGNvr4GjVM83RYJQkftJajLAq/T+kEuAKomkaRn1dad9E13CDOmbAxIq65Goy
      5CMmee8YjsfGZX43gWdKwyboH+NkoZnbfRJgMUWexsbiHcznwfKZODGDbGAUM67I+JM4PgdL
      zwNzv2OpHOKhYY4OL2S99zhaiS8RJMAVxtvaOvUXaRpuQMP2O+PXqjVp8uECBX8Gy2viKqvi
      rlVLKRZKcqx7GWO1dcRUadfplgBXGG9r6w1vJSmvgeOxceKeT86qWX8SO+Bi6te59SHhnRJN
      pYjU2BzPN3OXXwIspsBINKD5fCjTxPWCG4RCxCYfzpEP58Z7hH15HGT96FLRcImFRjmabmKj
      /2hJ//2TAFcYTddJP1jLQHIfdsiloI+Vu6SqFAsNc6ivjmR9gjo1ULL3kWVlK5CzIk4mPCLh
      LaNocBhdh45sc0m7+iTAFSiWWFvuEoSbpTZq0ZFtRJWwES0BrkDR+tWgyY+2vBTxmlEGMjBA
      U8neRX7KFShStwLDU91zg+eCWHAIgKPZppLNL5EAVyDd8BFvXFfuMqpe2D+EYWgcyyRwS9Qi
      kgBXqPrWu8pdQtVTboH6aI6RnKJXlWaxHQlwhaptvkOug+eA2vD4eOijmdL0RstPuELFGm7B
      64uUu4yqF710HXwiW4tN8RcdlABXKMMbpK51Y7nLqHpBzzB+H6Tyim53GuPUb0ICXMEaFz9Q
      7hKqnlIWtZHxxfY6Mo1Fb0ZLgCtY/YK75XbSHFAbHgHgdCZOgUBRjy0BrmCBmmYi9avLXUbV
      iwWTaBpkTJcuu7i90RLgCqZpGi3Lv1DuMqqeVx8mGBhvPHdkm4rajJYAV7jGxQ9ieEPlLqO6
      KYfamvGJJWczEbIUb/1uCXCFC0ZaiTfeVu4yql5tZPx+cN5yOWsVrxktAa5wmqbRuuLJcpdR
      9SKBJLp+qRmdKd4MJQlwFWhcshlfsL7cZVQ1D0nCofEAn8vWkKI4g2wkwFXAF4jTvPTRcpdR
      5RTx0PjtJNN2OW0WpxktAa4SC1Y+jabL/sHlFA8nP/lzRyaBW4T4SYCrRKzhFpliWGbR4Bge
      Y7wZfSEbZFTFZnxMCXCV0HSDtrX/utxlVDXNHSESdgCwHZcThZmPjZYAV5HEovsI1y4vdxlV
      LR78dJ3oY5l6XIwZHU8CXEUMb5DFa36j3GVUtXjNyCd/7s/5GFK1MzqeBLjKtCx/kmC4+NPa
      xOTUBEbxelwAHFdxPD+z3mgJcJXxBWIskWvhstHcNPHopzs4Hs/UYWvTvzsgAa5CC1Y+RTCy
      oNxlVK3YFdfBgzkvF53pD7KRAFchXyBG29rfLHcZVSsWHP5k21FXKY7lm6d9LAlwlVqw6mnp
      kS6TkD+F3+t88veT6TiW5pvWsSTAVcrrC7Pijt9B9g4tAzdLPPrp7pDJgkGPnZjWoSTAVayp
      7SHqWjaUu4yqdOV1sFJMuxktAa5iuuFj5cb/iC5jpGfd5d0LLzuVjmJqU1+/TAJc5eJNn2Ph
      6q+Xu4yqE/CmCPg+vZ00VtDpnkYzWgJc5TRNp33D7xCoKd0OemICboG6aP6qhzqyzVPeBE0C
      LPAF61h11++Wu4yqEwsNX/X3M+kwBX1q62VJgAUALcu/SFPbI+Uuo6rU+IYwrpjLkLE0Oq2p
      tYQkwAIYn254633/DV+grtylVA2/J0PQb1312NGsBFhMkz+U4Nb7/nu5y6geyqI+mrnqoc5U
      kKw2+fWyJMDiKk1LH2XByq+Wu4yqceX0QoCCo3HanPw9YQmwuIqmaay59w9kmOUsCXoG8Xqu
      fuxoZvLNaAmwuIbHV8NtD/1v2dFhFniNLKFA4arHutN+xrT4pF4vARYTijbcwi33/D5o8itS
      UsqhLpK+6iHLhZP5yZ2F5acjrmvh6q+xZM03y11Gxbu8/eiVOrLNk9oETQIsrkvTdFbd/bvU
      L7in3KVUNL8xhP8zswl70h5GtJtP9JcAixsyPEE+t/mPqIkvLXcpFcuj5QgHc1c95ig4nrt5
      b7QEWNxUINzE+ke+iz80vTmr4mZc4pe2H71SR7bxps1oCbCYlGj9Sm576P/g8RVnUy5xtbrI
      tdfB/WmdIRpv+DoJsJi0+gUbWXv//0T3BMpdSsXxacMEP/NtVUBH7sadWRJgMQUazcse59bP
      /yG6Mb01nMTEdK1AJJi55vGOTCM3WvZIAiymRNM0Fqz8Kqvv+X003XPzF4hJUtcMqwQYyir6
      uX5nlgRYTJmmaSxe8w1W3/17aJqEuFhqw6MTPn4003TdZrQEWEyLpuksWftt1tz3h3ImLhKv
      liQcujaqx7LX30tYAiymTdM0Fq3+ddZt/l+yeXgRaJhEgulrHh/NufSoifezkgCLGdE0jdYV
      X+L2R/+vTH4ognhNcsLHj1ynGS0BFjOmaRqNSx7krie/hz/UUO5y5rXrBfhkph6ba1s5EmBR
      FJqmEWtcx91f+SE18WXlLmfeMhgjGnaveTxdcDjnXLshnQRYFI2maYSii7nnqR+SWPxAucuZ
      lzRsYqFrh1UCHJ1gaKUEWBSVpmn4ArXc8difsmz9v0PTjJu/SFwlFpq4GX06E6PA1cO1JMCi
      JC5v2/K5h/4Yb2Byq0uIcbHQp9uPXilnunTaV/dGS4BFyWiaTuuKJ7n7Kz8k3nRbucuZNzSV
      IR6xJ/za0Uwj6oqhlRJgUXKR2uVsfOLvaFv3m7KR2iRoOBNOLwTozEbI8untOgmwmBUeXw2r
      7/mv3PGFP6cmtqTc5cx50eDwhI8XLJfT1qfNaAmwmDWappNYfD93P/UjFq3+dSOL1aUAAAXI
      SURBVBm9dQORwDDGddLZkWnEvdSMlgCLWecP1nHr/f+DDY//BeHa9nKXMydpKks8ak74te5s
      iDRRQAIsykTTdBKL7mPT0z+ifcN/wOOd2q58lU9RWzPx7CTLdjlZaAEkwGIaHMskmUwyOpri
      2jFDU+PxhVl+x2+z6as/oXnpY3Lf+Aqf3X70Sscy4zOUNKWmuqWwqHZnDu5k18k8bU1N3Hvf
      7Xh1D65jo2saruuidANlFVC6B59HxzQtlGbg93uw8nmU7sXvu3YKolKK4d59nHj/Lxi5eBgm
      tTJyBdP87DnxeWz72u+Dx9D5rdb9EmAxdaf372DbgYu0LV7CipoevGu+ydF3t3B7wsvLZ00e
      Wb+Yt/edQbdMvnDfUn61bxC/NcrDmzexb/8hsjmTp77xLWL+iZeKUa5D39mdnDr4PdLDJ2f5
      080tx/ruYSAZnPBrDzX2SRNaTJ0RCPPkV7/B04/fz5UNXk338uiXv4pvuIc7n/ga97U30p+x
      uH3Tg9y9eiknDn9Ez0CaaF09nhucXTXdoGX549z3a8+x/pHvEq5dUfoPNUfVRSa+HwxwLFMv
      ARZT5/f52PXy82zZ+ga1bet4/+XnGM5CqLaZsFdjyV0PcuKVn3JwBJbHA7y7cysnhizuf/hB
      muNeNN1A12/+q3c5yJue/jGr7v4vBCMTT2qvZLHg0HW/1p/zSRNalFbh4nE61SJWNc1ssr9S
      Ctcx6e98ja4j/8JI/yGq4hpZM3j/1GYK5sSfVQIs5h3lOqSGT9B9/Jf0nd6Bmb9+b20lOHVx
      I71D4Qm/JgEWUzZysZsjp3u5fcMGvG6W/fs/ov1zG6iPjE91yyb7SBu1NEZ9nDy8n7w/wdoV
      LXx06Cgr167DzozgC9fh91x/vePJUEphmykGzr1N75lXGOp5H8fKFuMjzilD2XaOdi2c8GsS
      YDFFJh/uO0JdVHGw18Y/coE1G+4mHIlSFwvjZofYvuVZUu2/xuPxs7zRGyE6dBKtrp4an8aY
      iuMxU9z/wOfx6DML8JWUcilkhxg4t4v+ztdJ9h/CNlNFO3452STY27H2kwsGwzBYsGgRt6xd
      JwEWU2flxnh95+usWHsbW7ZuY3FjHXVtn+ORe9aNP6F3Hz8938rXVzn84zOvgOHhvrtupbPr
      HMNZDTeTJJhYwjeeerQkvahKuZj5EZJ9Bxk49xbJvoNkx7pRyinBu80CTefk0FPUN7WxcvUt
      LGtvJ15bi2EYyIK+YmqUxRs73+SOB75AIqyxINHKV55+lB1vHLjmqd2Hj3PbY09R2/c+2dhS
      1q3ycW4sT3awCR8ZbKAUG7Romo4/WEfz0kdoXvoIjp0nl+4l2XeQ4Z4PGB3sIJ/uxbFzNz9Y
      GWi6h0CokXDdCupaNlDXsoGHoyvw+YNon5npL2dgMTVWmuef34qt6azacB8t3hTv7D/Ops2P
      kE72sDDuZ+srb5KyPXzxiS9ybP+7mN46Hn7wXkZ6zhJqXEL3x7tJeZu557aVZfkIjmNi5oZI
      j5xldOAIqaHjZEY6KeSGsPKjKDXxZPri0/D4IvgCcWpiS4jUtRNpWEW0fjWBUCOGN3RNYD/9
      EFm2v7JbAiwEjDe7rcIYZm6YXKqHXKaXfLqffKaPfKYfMz+KY2VwnAKuY6JcB6VcUO74/1GA
      hqbp4//pXnTDg6Z78XhD+AK1+IJ1BGqaCNQ0E4y0EIosxBesw+uPYXj8U6r34skDvLr/lARY
      iMlyXRvXzuPYBVzXuhReZzzM8Gl4NQPd8KIbPnTDj274rn8mnabXtjxLtGWBXAMLMVm67kH3
      hfH4Jr4nO1uUm6N/xCTc4pczsBDzjbLzDGUcGmI1EmAh5jOZzCDEPCYBFmIekwALMY9JgIWY
      xyTAQsxjEmAh5jEJsBDzmARYiHlMAizEPCYBFmIekwALMY9JgIWYxyTAQsxjEmAh5jEJsBDz
      mARYiHlMAizEPCYBFmIekwALMY/9fztIPfkt3X31AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='240' name='Countries' width='240'>
      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
      EQ/7/7uS3QsWNeLPAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='240' name='Dashboard 1' width='240'>
      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
      zN8gV+B6Hjj/Iv/3X/4dkxNjdPdcY3rgHP/9U59hYnyYP/iv/ycT0SxnX/oW33juVXrPneZ/
      /u2XFx+Sf/z8X9E/NkkoFCKbL9z2HBaHmxqn9Y7jMJis1Ne5yx73Wy/8C9955RIDl8/w+3/6
      GeQyLvm7//x5/vGbP2BkoJuR6ZUNhrX1fsx6ibe+/0989YWLZY8N4P/77Od4+Efej8s0t4v6
      wp//KVfLOOciSp6/+Z9/xM/8/H8kki0CKp/7H3/E+d5r/Nn/9d+Zis8VoVOKWf7sD3+P8z1D
      XDjzFtWUpvuHz/wpl8durkzp9TdgkO7tWtF3rSJHIT5O3r6TA84pBkJZdOOvcSnh5n0PdvLn
      f/m3fPRnfpLP/tVfI1kciJY6fvWjHwIUvvTlb/Krv/2HeK1zzcn+9//z3/jJj/wyh9tqabIW
      +MZzr/LR97+Do2/TMXb1dS58c8ksKRp54G2P4rfPFUT79j99hr6IxOzkCDt2dTB+rY+H3/+z
      NKqj9GTrkUM9fOlbpzHoTXzklz7O1//us0TSMq37T/COAx7OXBplT7OLT3/6L8kVVQ4/8h7u
      bzPxx3/xZQIeCzlzgN/4+Q8unn7vkZO8+8RO3vjkbxGPzfC/P/d58iWBH/nQh5FHX6UnLPDm
      m5f4g9//HYyk+N6ZIf7wT34f/XyUzfe//g9c6J8gj53f/E8f5y//9L9idwcYnYryK7/xG/Re
      PotUV883v/4ck+J59EqKNlue754+Szpb4Od/5dfxuywopTxf/Nu/YjqWo6nrPo63mHjjch/y
      F7/ARz7+CxgTo/zgzJv0xIq878c+hDR7le++egmdycnHf+Hn+OrnPkXe4GZiYoaP/fonaKq1
      ggoPP/XviMTmVzbZGQbiVv70R99LiyHKD8/28eOPHmCi5wyq7wg/8fR7EABVKfCFz32G6XiG
      wO4TfODdB/nc3zzLL/7iT/HXn/0L/sNHPsKn/+iPcfv9DI0F+bkPf5AXf/gml6aLPP3jH6T7
      +W/hbrIzkamhNjVJ7Z4D9L/8Hb59+hJWt59f/NhP89XP/wUT8QIN7Qf40PuevBuP94Zx12bg
      i2dOU+tvoKm5gRdfOkPLnv2c/+GLhEa7Ua0BXvn21+h89Mf5tZ/7SYZHx+ePkokXJGrM198z
      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
      YII=
    </thumbnail>
    <thumbnail height='240' name='Dashboard 2' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Dashboard 3' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Dashboard 4' width='240'>
      iVBORw0KGgoAAAANSUhEUgAAAPAAAADwCAYAAAA+VemSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dd5wkdZ3/8VdVde6Z6clhZ2ZnNmd2lyVnVBQUvWDg9A6VQzgBRczxhwoG
      xDsxoJyKCieKCnjqqUQBSQosaZeduJNzns6pqr6/P2aY3WHDzO72hGY+z8eDB9td1fX9dnhP
      pW99SlNKKYQQWUlf6A4IIY6eBFiILCYBFiKLOV79xG233UZ5eflC9EUIcYQOCHB5eTnnn3/+
      QvRFCHGEZBNaiCy2JAOslE3dC3/nF3fcwWPP7GK+zqQ17nyY7//P7+dm4Urx5P33cPWHPsTO
      pt6Jp2yL++/7M0nTnvHld916C+0jEZ5/5Pfc9ru/HHbexFgvj/ztxaPrZyrMvQ8/MfXwdz+/
      hca+yNEtK4Oee/IhBkLpg077w89/wF+ebZjT9l/8+yP0jsUB6G/eyc9n+A5esQQDrLj/V//N
      TT/9LV6/n4aGuolnlU0sGiGRTE08ti3i8QSpZIJYLDE1PZU2AUjEY5imSSQSxbLV1Gui0QjR
      WByl1MRr4nFs2yIWT1Cz4QTe8eazALDMNJFIhGQqzeSrScZjk68FlCIej2NZJpFIBNOaHkLb
      tohG9vUnHhnjZ7/8LZdccTXrq4un+nP33b8maSrMdIpUOk0iHiOeSPLKn6x0KkkkEqV9byPR
      pMn6E87iwrNPBMBMT/QxkUxNza+UzUh3I7+7/zHCkQiWrVBKEY9FicUTvPpvoT3Z/1TanHhP
      4/388p4/Eg6HSZsWXW3NhOKpaZ+tUopEPDaxvMk24/EEtmUSjyenLT+ZiBONxrDVRD/2fYYK
      UMRjMWy1bxkKRTw2/XNNp5L85U/30NI7SmyynUQyhZlOkUilOeuCt3Pixtpp39sr34dSilg0
      ul+b+6SSCSLRKPbk88l4HNOa+I2kTGtqPjOd4rEHfkdj5yCxeIJ4aJTW7n5SyfjUZ/DKfPv/
      3uAg+8CvdXZinF/+8Wm+9aNbKfY7J580uf3mG3jgmSZA4wMf/Rw7qnQ+cMVnqKgsp62jh+O2
      HcdAVxupwGpuu+lavvqpDxDxVDPY1crqk9/CF695H7/92Xf50xO7SMRivO39H+GdZ67lI5/9
      GmesKaAuUsBl563hzmfG+PxlF/Dpaz7GcMwCfwnf/c+v0fjUH/n2T+9GU4pT3/xurnjPm/jk
      hz6Av7Cc3q4OVpz6D1z3kYsBsFJR/vO6L7CncxRbc/G567/G3+75Pns7uvn2N7/OFZ+6nlM2
      Vk1730/f9wv++3dPk+dS9A6F+c4Pb8UTbuFTn/8qmieX0d5B3gzUP30/Tw0G+PB7Xs91n7iK
      rlCaeFLxxW/cxIbqQuxEmG/d/CN2twa5ums3n/3qTbQ8+gvu+L/HQSne9t6ruOj80wAwE0G+
      8oXP0ToURXf6+MJ11/GHW75He10dV199NZd85IugbG6/+QYSY31YgVX8+L++yN/u+yU/vPM+
      bNvm4qs+w9kb8/nUl25hfTmMetdx7TXvA+Clx//EN2/5BU63m8s+fj3OgWf59k/uRtMUp5z/
      bq76t/P57BWX85kf3kF+aoBPfv57fOd71/LRS/+d/JpKutvbWXfm2zl/nZuHn6lnZ/sn2Xrq
      ebzn9ApufaAeBupYe+5FeLofJ7DjPZy7MY9rP/8F+oNx/CWr+K8bruUvv/oBv7rvaZwOnbdf
      9nEuPH0LAG27n+LLN/4AG0Xt1rP5fx+7jO99+RN0mV4iQ30YxZv4wX99Dgfw8t8e4L4ndvNY
      /ef564nn8t6zq3n5bw/y8YYn6ezu58vf+iG13hCfv/YrRJJplm04na985goMDVCvcu+99776
      qdeU6MBe9b6rPjXtuZGOl9Tl11yrUqalBlpfUpd/5AtqvK9JXfXRL6m0aam7f/Q19euHnlNW
      KqQu/verlG3b6tqPvFc1D6VUOhlRV773YtUfM9XYYK966P4/q1/+7GZ12ce/plLhIfWuf3yL
      +vPjLyrLtlXzM/ep626+U6XHO9Q73vke9au7f6ca27qVmYqpKy+9RPWMxSaWd8klqmcspK76
      j8tV/1hEWeFOdfEHPzfV38an/qg+840fK9OyVcNT/6c++fUfKSsZVVdc+UEVT+97X1Y6qT5w
      6XtVMG6qJ/7wU/W9X/xZmZalvn/9NeqphkH131/9uPrDk3XKtm1146c/ol7uGVM7H7xTffcX
      f1ZK2aqt8WX1x//7g/ra565WP/ntY/s+r+an1Me+cotSSikz0q/e9+9XqmA8raKjXeri916p
      kpPz7XzgTnX99+9Ulm2rZ+6/U1138y+VCnap9139+allfffL16jH9vQqKxVVl172HyoSHlOX
      vv8StberV7XueVpd/uEvqPBop/rnN79FPfpcg7JsWymllJ2OqSv+/X2qfSikLMtU6VREXfn+
      S1T3WEyl4kF1xfsuVgOxhPrIe/9V9cWVigd71VUf+qwyVVx98OLL1HAsoaJjreqDV16rLKXU
      TddepZ7vjCillGp97kH1j+96v2roHFS2batfff86de/f96pHf/tj9Y0f/Ub19/erb3/pGvXQ
      853qW1+4Ut3w3VvVE08/ryLxyXdu2+r6j1+hnm3uU5aZUl/5xAfVs80D6pufvlo9u7dPWVZU
      Xflvl6vwfr/BW776MfW3pqGJ9nferz73nz9RpmWp3956g7rr4RfUnTdfr372u0dUf3+v+vyH
      L1Ev9070dcltQnsDRaixPgYiqannkokYOfklOA2dQHEZdjKCAgyHE4ehYxgO3C43uqah69rk
      qzRcTicOp5scl046HecbN3wDT0EFW7ZuxpjcNM6tXMcFZ2xF17Sp9hyB5Xzz+k+THO/ny5/9
      JK0DIVK6i4IcN4bTR1GOi3jKBMOBz+NGN4xp+zrRSITikjIMXWNZRQWhcGhW793j9WLoOg6H
      AUAwGKampgpN09D26x/AeFcdN/34N9SsWsv6NTWk0qmDLRI7FUfzBcjxOPDmFeK1U7wyZzQa
      oaS0FF3TKKuoIBoKH2QJGl6vF103cBoGykwRiUV48pGHeOK5Rt543lkoBRWrt3Pm9nVTn6Oy
      LFK6i5KAH103cGgWceWhOM+L0+2nyK8RSR3i2IbuwOd1ozsMtIPPwdbTX8+66pJpn0s4HKav
      o5kHHniAwpXHU1Xo5vJPXMfm6jz+dOePuO1/H5mcUxFJWJQV5qEbTsqKA4SjcUDD5/Og6waG
      cYiGJ7ncbgxdx+lyARAJh2lr2MUDDzzEuhNfR2By43HJbUJr7gDve/vZfPrjn+S8s0+mazjC
      Jy6/CLPnFn5w620M732ejaeeh36ob3aSbaW451e3Y4Q6GAuspsKjGB4apLH+ZQY79pDEO9He
      QZYT6q7j9rvvY82KKnK8LnB6OXVtEV+98TvU5Jn062VUFfgP2fba40/hO//z//iZEWTXU3/h
      jRddfVSfxfE7tnPzjV/nrOPXsLO+kwv2m5ZKRBkcHOCFZ5/i2SdfYON5W6emefMKaX3xcX5+
      ZwFvfPOFrPGOceN3fogr2k3+xhN4pedbTzqTWz/9dTyJPp599D4uvOzz4PZj9Tfx0//5BWee
      +6YD+mR48zlxdSl7e0ZZX13AwNDoxHehaeyfNt3l59zjqvjiV77J1lWlrN9xLmdsKeC6r3+L
      5bkmva4V1OQ58XkVv/6f2zFH2zjEMSoAiguL+PVtP2TorDNYkwscJNrbTzqNO+67BbW+lshI
      L3FT487bfoijoIaS4gJMa3K/VtN43ZnbuPGGGzlhXTmPNgR5+4cree4w30VRURF33/FTxs45
      k3V5B04/6fTTefRn97O2+gyGejuw9IkEG1/60pe+tP+Me/fuZfXq1YdpKttp1K7fxnGrljEy
      HmLLthOorqzkrLPOIDg8xJrjz+LtF5yFw3CQX1DI8upluD0+ypZVUZDrIy8QYEXtch69/w+s
      3XYmJeXVfOD978br9XHC1o2MBGO86S1vZUXlMmpqKgkECqitqQbAcLopLCmjZsVKSvLcjIfj
      nP/P72bD8jK2nnQ6XhXHyFvG5Zf+G363g9zcPGpqajAMg7z8AlbUTOzXunwBzjxtB0ODw5x6
      3j/xulO2oGkaeXn51NTUTPvjk5eXz4oVK/B4fZSWVVBSkIfXl8Oy6ho2b91BkR+8hVWcc/pJ
      1NTWkpeTQ3FpBStXr2NlWR7KU8jb3vJGKpZVUlo48cty+ovYuraSYDTNmrXrOOucc7Bi45TU
      bOK9//I2XMbE9oInt5jTTtzC0PAI5771Ik7ftgbN4eWk7RsZGQuyYtVaykqLqKyuwe9xkJsX
      oLa2lpPOOAdHOoypeznn7DMpyMslkF9AzfLKfbHSNDbvOIV8l0Va93H89i2cdNpZeFUcZ/4y
      Lr/kX/G6nGzZupVgMMxZr38T62qrqampIi8vQO2KGnTNIJBfSE1NJeuPOx4VD5JbWE7t8ioK
      S0qpLCuaeB9eP+WV1VTVrOTkbWsZGR1nxYbtbN2wgpUrahkbHaF89VbefsE5OAwd0Fi5YTsV
      +U7iysMHLvsAxXlefDm5VC6vweuaeK81K2p5ZUW8ZtNWjFQEX34JK2uXU1RcyrKyoonfXkUV
      6zdtZfOqCkaDYTbvOJ21NeUYuoam1PRDZ/fdd58M5JiFL17zfi798m0sDyx0T8RSdkCA77rr
      LnJzcxeqP1kjGgnh9efNuKktxFw6IMBCiOyx5I5CC/FaIgEWIotJgIXIYhJgIbKYBFiILCYB
      FiKLSYCFyGISYCGy2IwXM5imOW8VK4SYTw6H44CrsF5NKTV1Qf5iNGOAv37jl1m/4bV8cYNY
      iro6u7noHe+nsrLysPONB0Psbnwev98zTz07MjMGeN261Zx19mnz0Rch5k19XdOs5y0rLSA/
      cOjLOxeS7AMLkcUkwEJkMQnwHFOpCHfc9RQW0LqnnptvvY9gYqJyw+N/eZKu0SShgV5uuvke
      vv393/Lzux6jfywGQF9bGw/8fe/Usl7e+SLf+/GfGYuZC/FWxCIkAZ5rymJkbKLucSIex6Gl
      eWJnC0pBOBQhZdpY6TSBymo+/MF/4LQt5dz560eIp23SySTBSHJqObvq+9i2tog9LYML+IbE
      YiIBnmerN69naG8zoaQ17XkNDcMwWLluDasKoHM4Nm16bHyUlCfAtg3L2dvUyeI9sSHmkwR4
      nhkON2ccv5zHntl70OmaBi6XA/NVd1NoaeogLz+HkKkTG+wjlJz5bgvitU8CvABWbVrPWOte
      RqPTyyQqpQiPjdHcl6CqxLf/FOqaeoiMDvP4U3Vo2DS1D89vp8WitOTKyi4GmuHk9BNq+ek9
      z3Dq5HPtjU3c/MMe0HTOOf80Ah4HwclpZjTIcNrHf/zb63BoMNTZxr3Pd3LC2tKDlq0VS8eM
      NbF+c8/tnH2uDOQ4WkopTNPG4TRQloVCwzB0lFKk0yYOpwNNKdKT98oxDANjsiyrbdvYCgwN
      TFvhnCzIPrVMhyEBPkr1dU2sWbFtxpFYY+NBBsfaFu1ADlkDzzFN03A6J4Kn7VeOX9M0XC7n
      Kw9wuQ7cm9F1fWofx7nf5P2XKZY22QcWIovNuAb2e4p47u+N89EXIeZNOm2Svz1/xvl8Pi9q
      yE9wbHHuq0hdaCHmWTweJxaPZ2RZ874PPB4Msre1Hbd7cV6eJV77kskEq1fWkh9YmPvitLZ3
      4Ha7qa46/AG02Zj3ACeSSTQNtmxcN99NCwHAcy++RCKRgAUKMIDT4cA9eevQYyEHsRap7rZG
      nt9Vh32YHRzbMonGE/PXKbHoyGmkRSgdGeKZuh7e+sYz6G6po6mjn82b1jEe04iHBjFjERLJ
      BIWF+Tz01C7ecMaJDAwP4PQVcdyKIkbMXFYuK1jotyHmgayBFyE7ncDh8eF0uti5q55zjqvk
      wceeprN/hJaWVjp7B6gOaIybPlatW09ssI2SlVvxJwZ58MkXKSg8yB2ixWuSBHgRcudXUuFL
      8fRzL7Jp7UoeebGD1511Gla4n5z8Yqqqq/AXlFJeVorbDOMqqKSiKI/jTtzOWChNgUcGeSwV
      sgm9GGk6J5561tTDdZsn/l9ZXj5tthJgVdWbph73tI7wlgvfOB89FMeoq6eHUCR8zMtZkAA3
      tbTR1NK5EE0vAQe/TFHsz6Kyonzm2eZQRXk5y7PxNBLA2lUr2LFt60I0LQTPvfjSQncBh2Hg
      dDqPeTmyD7zImak4wfD06hzYJuPhCKFQaGE6JRYN2Qde5MxklJExi572BixHLquWFdDS3oXm
      L6bI7yAaHGE0kmb9ujUY+uIcryvmjqyBs4Tbn4fXrdM/MMqGjRvwuHTGxkeJRqKMDPUSS8mQ
      9qVI1sCLnOFwk+O3UZM18NyaTUNjM3lFFXjzAsRC4+TkBnDImaMlSQK8yDm9uZR6AfaN280v
      qdg3Q2XVvPdpKbFtm2g0mtllWhbpdIpweB5OIz3z3POYVuYKiSvLprSkmGAwOPPMQswBj8uJ
      a5YXEqRSKdra2jCMzG3i2LZFUWEhpnnsuZoxwGlTsW3L5mNu6BXRSBSXy0lgAa8EEUtbMBjE
      MctAmpbFssoqiosKM9Z+X/8ABQWZGas+Y4ANw8Dv880026xZpoltS01jITJBjkILkcUkwEJk
      MQmwEFlMAixEFpPzwLOglI3V/SzpXb/BGqwHwCjdgPO4d2FUnYimyd9BsTAkwDNQyib11M2k
      nv0JU8OhAHO8E7P5IVwnXorrtA9JiMWCkF/dDMy635N65sfTwjtFWaSe+TFm3e/nv2NCIAE+
      LGVbJJ/+ERz2dtqK5NM/QtkHCbgQc0wCfBgq1IMKds08X7ALFeqZhx4JMZ0E+DBUYvYXzKvk
      sQ9MF+JISYAPQ8urgNkcnNJ0tNyFrbEkliYJ8GFo3kKM6pNnnM+oPhnNm7nB7kLMVsYCrGyT
      xj272dPYQnh0kJde2kUonmJoeIj+ni7Sh7tHyCKlaRruMz8KrpxDz+TKwX3mR9E0KWez1Cml
      GBsZJG0BStHb24udihNLWQSDQebiRqAZOw+s6Q5KSotp7x2lZ8hk88ZV7O3oJzjYSl7ZSsp1
      Ddu2sW0b0zRJJpOZanpuBVZhXPAtrEeug1D39Gl5VRjnXosZWIWZLe9HYFlzc8bASsVoaW5k
      zfZSVKiX3U0dFHstukM6ylLk5eVNZEDZGetDxgKslI3bm4Oe7sN06VimBZqG1+cjnUqhmFij
      aZqGkaGSmvPFWXsKXHwPVvuT2JMjsfTSDRi1p4PDu8C9E0dK1+dmz9Hh9lNRUgjKZveeesx4
      mpFgIa0tgxy/4wRgosIHioxtsWVuJJadpquzE19BMdWluTS1drNyzVqSsRw0K00ibeN16lMh
      nqsPcc64/Ohr3whr5c4H2W6udneS0SBdfUPkqgBnnvMG2trbKS7ycXxhLeMD3ZQEVuFwONB1
      PWO//8xtQhtu1m/cNPV486aJigM+l9wlTywNbn+AU844Z+rxitpaAEqB0rzVc9Jmlq0GhRD7
      kwALkcUkwEJkMQmwEFlMAixEFpMAC5HFJMBCZDEJsBBZTAIsRBaTAAuRxSTAQmQxCbAQWUwC
      LEQWkwALkcUkwEJkiFKKseFB0pYiEhyhaW8bZiqWHSV1hFjqrFSclr2NrNlegm1rFHpMOju7
      MB05KFuRFwgAoFAZK6kja2AhMsTh9k2U1AFUKs5wwklloY/WlhYKCgtBTQRXTdaGy8R/mVsD
      K8XoUD9p3UvAq9PVO0DpsmpcukKzLRxePw5dKjeK1659JXW6SY114/IFiFsBjj/xZMYHuigJ
      rMIwDHQ9czXhMljUzsLESX93B+NunZz8MnxuJx1tTcQSii2bN+w3r5oo7iXEApiLfVF4dUmd
      6mnT5qqkTubWwJpBMjJKfmkFpXkeRoYHaelMM9DezLJ1p6BpGpZlYdsTJTVN08xY00IcidfS
      yiNza2AzSmvnAKXLHIRIMBoMU1BexMoN20nHR4mni/E6DXRdx+Fw4HK5MtW0EEfEMIyF7kLG
      ZCzAujOHs885c+px2bLlk/+SqpRCzBU5Ci1EFpMAC5HFJMBCZDEJsBBZTAIsRBaTAAuRxSTA
      QmQxCbAQWUwCLEQWkwALkcUkwEJkManIIUQG2baFphkoZWPbCsPQUGigFJqmoWmZvSZe1sBC
      ZIiZjPLUYw8TSika9+zi5ZeeZ6ivg87BIHvqm+ekTVkDC5EhDrefFdXLQCl0dw7rV+TR3TFI
      fVcrZ5x5FsDkNfGZux5eAixEhqRiYTq7ewjohWjJCA1NYywrL2ZL8Ql0tDaTv3nDVEkdhyMz
      0ZMAC5EhTo+fHaeeg6bpGEYplq1wGDoKjeUluXPSpgRYiAzRdH1apRl98giTBpDhg1dTbczJ
      UoUQ8yJjAVZK0d/dTlffEGYqRnNzC2nLJhKNEAmOk7bnphKgEEtZBjehLTw5hQx1tBMdM6is
      LKO1sx89PUYi7WDzpvxpBakzVZleiCM1V2VlF0IGA2wwNtRDUUU1kbEh/Dl+GIzR19VO+arj
      0QDLtlFKoes6ui5b72JhZHowxULKaFnZ3v5xCpWbkoCXXbsaqVq1ltyc7ViJKPG0jdfpwDAM
      bNt+TX2IQiyUjJaVPf3MU6ceF5dPVqbP82WqCSHEq8h2rBBZTAIsRBaTAAuRxSTAQmQxCbAQ
      WUwCLEQWkwALkcXkaiQh5oBtW1iWwuHQ57SkjgRYiExTipdffB5QFBYVYXqKCA8PsHnj2ow3
      JQEWYg7oOsTiJi6nwQsvPDdVUieVSmFa5sKW1AkHg7h8XlwO11xdpyzEoqWUIhQK4/V6pl3A
      v7+0qfD53cQicbZs31dSx+Vy4TAcC1dSJzzQzp2/epiTXreDypXrKfG7M9IRIbJF265neaJh
      iE21JRx38kk4Xz2DprF1+46JkjqOuS2pc8RHoT05+eQHdHY3tJPjki1wsfTklxRjRgfpHo1i
      HGIe3TBwOh1omo6uaei6PidX4B1xgE0zhdPvR0skSEmVDbEEpZIp8vJyGRsZwV7gvhxxgB1u
      H+s2bKCsIIe0udDdF2L+KSb2g53Og+//zqcj2gZWyqRxTx2NrR0Y3gA5btmEFktLMhZiNGqy
      YcMGnG7/go+EOsIEKjBc1NTWYtk6CtmEFkuMUiQTUdrbO3H4i1m1ZsWChviI2tY0Jyuqinnu
      qWfY09REUjahxRLj9gfw2SahlIaLzJzLPRZHvA2s0Ni2YzP1bYPsfwxLKZu6Z/+Kt+YEtFAn
      4YSiunYlY8N9JCJR1mzaglOXk8YiuymlKKup4Xi3l77ReHZtQiuV4NG/Pk31huN4z8mn43Ts
      O4iuaTorVq5i0FL4c3IJx0YIReJ0Nu2mevMZOHVtYhTK5AiUTI1EEeJI2fbRbzlGx/p45Iln
      cHn9bN1xAgu9SjqiAGuah7f80z/wwt//yo1fv4crPvlRirwTR+KUMunvH2BYpagp8ZHr95JI
      JKles4n4cA+pssKJUSgOB7ZtZ2wkihBH6lhKGvvzyzjlxG00NDZy7x8f4JJL333gQI55dMRr
      4D/e80fyllVzxdVXUujZv+s6xdVrKdZ0fD4PPn8e/hw/tmWho1Cy+SyOUcpKUdf/Mi3DTVi2
      RXVBDVuXHY/PNX+VT6PjQ3T0jbPj1LM59w3e7FsDv/Wd7zjENJ28QGDqcW7uRLh1WdOKDOgc
      a+cHT3ybzrH2ac8X+Uu49OQPsq1qx7z0I6ewnFNPLp+XtmZjoffBhZjRQLifGx768gHhBRiJ
      DvGtR2+gYaBu/ju2CEiAxaJ3z0t3Mh4fO+R0005zx86fYtpL78CoBFgsavF0nOe7ds44X9tI
      C/2h3nno0eIiARaLWjA+TtJKzjifQjEUGZqHHs2OUjapdBqlbGylsCdv7JdpcoRJLGoepwdD
      05nNzWj983g0+vAULY312IabZQVuhq1cKakjlqaAJ5+q/OW0juyd1XyLglIMDg3j8/sZN3LZ
      3dQ0VVLHsiwsyyKRSGSkKQmwWNQ0TeOfjnsXNz16A7Y69AiqCza+FZ/LP489OwxNIz+Qi63p
      2LbNluP3ldQxDAPDMPB4PBlpSgIsFr3jq07kou0X85sX78Cyp29Ma2icvfr1XLjxnxaodwej
      sWHzNkzL3ldSp3huSupIgMWip2kaF276R9aWrufBxnvZO9SErSyq82s4d815bK864ZiGR84F
      TddxTvZJA+aq+qMEWGQFTdNYV7qBdaUbFrori8ri+rMlhDgiEmAhspgEWIgsJgEWIotJgIXI
      YhJgIbKYBFiILJax88BKKdobd+ErX4vXDNLaM8iK1etIxoKYiQQlldVSlVKIDMvoQI78PB/B
      ZJrgeJAtG1ext2OA0b4mCivXs0zXSKfTUpVSLLhjqUq52GQswJqm4Xa5wQJsm3Q6DZpOIL+A
      VCKOAhwOB4ZhoJSSqpRiwSy2YZfHInOb0Haajt5RUnqMVTXLaG3vY8Xq1STjOehWmkTaxuuc
      uMXiXFzYLMRSlLk1sO5kw3Hbph5v3DhRodLrys9UE0KIV3ntbEsIsciYpjnnJXUkwELMgWR0
      nD89+Cjp8R46B4PsqW+ek3bkSJIQGaaUomlvG2UlBaTSJrtfeG5aSR3btjJ2FkYCLMQcKC4q
      YriljWQq74CSOrpuZOwsjARYiAzTNI2KquWULatC0zQKQUrqCJFt9j/frM1RSR05iCVEFpMA
      C5HFJMBCZDEJsBBZTAIsRBaTAAuRxSTAQmQxCbAQWUwCLEQWkwALkcUkwEJkMQmwEFlsTi5m
      aGt6mXASqmtXMjrUSyISY+3mLVJWVogMm5MA5+YGCMeGCYZjdDW/TPWmM3Dq2uTFzDa2bUtZ
      WbFgpKzsTDQdv89NKpWmes0m4qM9JMsLcTuMqUuspKysWChzX1ZW0dPRyvBYkMryMixvEaGh
      XlavWpHxywrnJEWFJWV4cwvw+rwo20ZDoeboekghFqOKqhrisXpsK8kLO59hxwknAllSUkc3
      HPj9k4s2jLloQohFrXVvE6U1a/EkB1mxahXDQ0MUB5ZnvKSOHIUWItMUOB0OuhXsdtQAAAvK
      SURBVNpaSDoCVC8rZ1lxHsxBWVnZERUi0zSNmlVrpz83Rzc4yJoAJ1Mme3tGGQrGyPW6WF1V
      SMDvWehuLSlpy6I3HGQ0FsPjcFCZl0+eR76DhbToA6yU4u913dx+30v0jUSmns/xurjw1DW8
      89xNOAzZE5hLSin2jgzzfw17GIiEp553Gw5Oql7OG9esxyXHOhbEog/wX1/q4Dt3PY39qv2H
      SDzFrx7ew0gozhX/eALGa+iOc4tN4/AgP39hJ+arzp8mLZPH21sZjcX412075DtYAIv6Ex8P
      J/jJn144ILz7e2hnKy80989jr5aWlGXxv3t2HxDe/e0Z7OeFvp557JV4xaIO8DMNPYSiycPO
      o4CHn2ubnw4tQXtHhhhPxGec77meLrlt7AJY1AHuGgzNar7OweAc92Tp2n+f93CGopHDbimJ
      ubGoA+yc5cEpp0MOoMwVxyz3aw1NRwbbzb9FHeD1NcWzm2/57OYTR64mv3BW8y3Pz0dDEjzf
      FnWAt64uY0XF4U+Au50GF5y8ep56tPRUBfJZWVB02HkMTeO0mswP1BcHUkoRiado6BxmT9vQ
      4j6N5HY6uOadp/Clnz3KWDhxwHSHofMfbzuB6tK8Bejd0qBrGu/YspWf7Pw7I7HYAdM1TeNN
      azdQO8s1tTh68WSaOx7czcPPtxFLpIEsOA9cW57PN684j18/vIedDb3EkmmcDoM1VYW869xN
      bKgpXhJ/+ZVlkWxqIrH7ZexIFEdJMd4dx+OoqJjz91/k83PlyWfwcGszu/v7iKfTGLpGRW4e
      r1u1hjVFJUviO1hI8WSa629/jD3tQ9OeX/QBBijJ9/Ohfz6JRMokGk/hdjnwe5xL5kdjhcOM
      /OAWEi++NG1AfPCuu8m94HwCF70LbY4HUeS43bxtw2YuWLuBWDqFQzfwOZfOd7DQfv9E4wHh
      hSwJ8Cs8LgceV1Z1+ZjZqRTD//lfJBubDpimUilCv/8DAIF/uWhewuQ0DAKGd87bEfukTZsH
      nm056LRFfRBLQOzJJw8a3v2F770Ps19Go71WjYXjhxzQJAFe5GJ/e3rGeVQqRfz5F+ahN2K2
      RgZ6qGtsIR0PEYqbDPQPHPVINU2DQ52hm5Pt0d72vQyMBildvpp0dJREJMqqDZukKuVRMIeH
      ZzWfNTS7+cQ8UIrB0TBVxV66uvoYT0Fh4cSpONM0SafTRKNRYKI23P7ldQ722G0oAj4Xw6GD
      nImZi/5HUjbbtm2iqWWAvrZdVG88fVpVylgshtPpnFXn939sGAa2baOUwrbtqbIkpmmiaRrG
      5CVt+1cdPJI2lFJTy3jluVfasCxrah/zSPv9ShE1y7JQSk3rt67raJqGrutYlnXAMpR3ltfb
      +rzE4/FF0+9DPd7/O3z19Ln6/F9p85V256MiqqbrGA4HyraJRmKUlJQCE5+pw+HA7/dPzet2
      u6e99mCP33LaOm6/76UD2pmTADuUSWdHN05vHtWrNhAb6SVdUYTTmKhK6fP5pt7AbDp/rOai
      jfnqt7l9O8GW1sPPqGn4th6H2zvzwaXF8HnPNH8m2jjcMsfGxo64vSOiQb7fRUtPiHUryiio
      ziU62g/kT/3hO1IXnraWho5hnq6fftXXnAR4xZq1jI6FKSjMxzTz0VHIMPejk/OG1xP5y8NY
      h/nRebdvw7VaRqMtHhrlVbWUV008cgOF/upjWqLLYfCJfzmN3z3RwJ/+1kwwkkAxRwHWdAdF
      RQUTDTtdc9HEkmHk51P8sY8y/K2bDhpi97p1FF7xQTSpiPGa53IavOvcTbz97A0MjEaxbDu7
      zgMvVe41qyn/+lcJP/gQiV27sSMRHCXF+E49Bd9pp6O75Y/kUmLoOsuKc4EsG8ixlBn5+eS/
      8x3wzncsdFfEIiLngYXIYhJgIbKYBFiILCYBFiKLSYCFyGIzHoUeGh7gzw88mLEGnQ4HyyuX
      zf1oGCEOIRqNkp8/u3sVOQyDvt4ehgYHMtZ+Op0mET+wusnR0NQMl0iMjY9n9I7m48Eg4+NB
      1q9dk7FlHgnLsqbG2y4EpRRKqXm4yfShLfXPoKGpmeqqSkpLSmac17Zt4vGZ62Ifidb2drxe
      LxVlZce8rBnXwAWz/Es1W2nTZDwYmjaYez7Zto2maQtWSWKhf7wgAUbTZr1S0nU9479VXTdw
      OpwZWe6i2AdOxsI07W3Dso9uxPTU6/fbmBgd7KWrb+iAMdgzDSZXyqajdWKs6auZ6STx5EQx
      seDIAO3d/fuWrxTdHS0Mj0cOeN3+XrmC59UGejupa2hkPBjmwJ+WTSh06OXGI+M0t3ZMe91A
      Twf9w+MHnX824Q2NDtHc2jHtM92flYrT1NRMytzXanBkgPauvhmXfajP4NWiwRH2tnWhlE0o
      FCYSmfgMlG3S0txEZLKwG0AiGqJpbxtH+RNaFJRSdLe3MBqKzvo1Cx5gZZvUNbZSu3wZyViY
      +voGovEYTfV1NDU309DcRioeoaG+nmgkTGNTEx09Azz+0P20dPWDsqhraKGmehmpWJi6PXsI
      x+LYho/oaB8p88i+0famenJKqnA7FG17G+nuHyY4OkhdfROR4AhDoxHSsTE6BiNUFOcTmpwW
      T8TIKSinp3OGK4cOYXg8woZ1axnu6SaZTtBYX8fweITB/m76B0cw0yY9HS00NLWQSsSor6uj
      b2gUpSwamtpZvqyMaGiUuvoG4okYhreAgd6Oo+pLKjZOe1+Q6ooSrFSChro6hsfDdLe30Nk7
      CEBdXQPLa5djJSf6MhaOk1YG1vggEWuGBmZBWQka2vopDzhobOslnTbp7Jx4P031dZRW1eDE
      pLmhjoGRILFEirKARkfvwf9oZYOe1kYcgXJ8LoOu9ha6+4cY7Ouirq6e5qYGRkMxejonvoPB
      vm7q6xsWPsDYJi5fDi6Xm7a9jaSTUXr6BnF484nH4jh0i9amJuKpJH3d7dieQlLxMKXLllNT
      XQ4qhcudi9vtprOzh9Xr1tLZ0UEiPIw3vwyXcWSbynFTUZDjwYoF0XxFREcGCYbDRIY66Q+l
      AEhGowQKi3B7PPT0DbO6KpfOgRiD3W0sq15xVB9DLDRKQ2Mzpg2pRJxEKkVrSzs9fYOUFOcy
      MDBMJJEi1wPNrZ2sWLOOsaE+UCncnlzcHg/d3f2srqmgo3eE8EgPJeVHdwVMOhElt6CQht0v
      MDIWJJ42aWlpIRyOYpoTaz3N6cLtcjPY10X1ytX0dbdjJiKovGL8Gdg6V6k4ntwC/AXF2Ilx
      Bvr3FSww0cnxuIgO9JKzbAXD/T04NIvuEZPlFYFjb3yBhBMWJfk+dDNGa1cfvT29jIdi5Lp0
      CkpKGR3porGph57eHsbCUarKcxc+wJrDjYcEL9c1kJdfCA4Phfm5+LwecnNz8Xo8FJUUoWkO
      CguLyPV58Hq85HgddHT1g+7FY8R5eU8D+QE/9XvqyM3x0d49SDQSPuL79VSXF/HSrt2EUhAc
      7CJtuEgnkri9XpwOFy6nA39RGaH+NppaOvB7DOqbe/HqUYbDSUKh2d3P6dWKyirZsH4tfp8H
      M5VA6QYej5uS0lIMXcfjcePPycXt9lIY8NPY0EDCVKB5cBBlT10TuTke6pvayPfYdPQHCYWP
      ri++QCmRwXZshwfSKTAceDxuPF43kclKEvk+Fy+/vAeXL4+9DfV4c/Jpa2snGQ2TzsAxT90b
      wIgPsevF3ZRW1eL1evBOXu9cVpjHrt0vY7p99LU0Yrj9tLa0oawU0UTq2BtfIDVVpbz04m6G
      wikCfi+FRUX4/X7cXh9ulwuPN5/CfC9FhRPPO52emY9CZ1r/4CA9vX3s2LZ1Ppt9TYmFRmnt
      7KGkooayIilqf6See/ElKivKKc/AUeCjsae+gRy/n5rlx3aNMMjVSFnJl1fI5s1yJwSxCA5i
      CSGOngRYiCwmARYii0mAhchiEmAhspgEWIgsNu/ngdOmiZlOT52UF2K+xeNxHE4nTsfCnEVN
      JBLouo7LdezVROc9wEKIzJFNaCGymARYiCwmARYii0mAhchiEmAhspgEWIgs9v8BX09F55gb
      bUEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='240' name='Extraction Rate over year' width='240'>
      iVBORw0KGgoAAAANSUhEUgAAAPAAAADwCAYAAAA+VemSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3daXAb+Xnn8W83LoIACfAASfC+xUvUQR0zGlkay+OxPeMrTrKbZCu1+zJb
      tVW7r/bNvvHrvN1Xeb+pbKVSqS0nTpwZ27E9l2ZG1IxEUQdvUiRAACRB3Eeju/cFRY7GkizN
      oCWxpedTpRIpik//u4FfN/p8FNM0TYQQtqQ+7wEIIb4+CbAQNua8/5u7ny+xvRJ7ZhNvH++h
      Zai9qhqmaWIYBg6Ho6o6uq4DWFJHVVUURamqjqZpOJ3Oquvoul71PBmGgaIoVY/FqjpWzNOL
      UudLAS5lCrRP9KCqz2bDXNvot6SOFQE2DAOoPsCGYViy/CqVCk6n8/H/8QnGY9U8VRu8/cMt
      VqwIrAjMi1DnS+8Qh8dFc18bqkM+WQthB5JUIWxMAiyEjUmAhbAxCbAQNiYBFsLGJMBC2JgE
      WAgbkwALYWMSYCFsTAIshI1JgIWwMQmwEDYmARbCxiTAQtiYBFgIG5MAC2FjEmAhbEwCLISN
      SYCFsDEJsBA2VvVjD/VSjsu/e4+h175NXSXJjdtLVHBwbGyQmZmbKB4/R4e62SlUcBa2MQNd
      tAW9VoxdiJde9QE2FXo6WtEME4+/gampk9y4fo319XX6xk5Q3lpkazfPTipORfdwssdLpVLB
      yo4u+890ft41rKxjmiaVSqXqOlaMxzCMg2c6V1vHqudCW+FFqFN1gN01tbhUhQqgmBrXPpsh
      3D9CeXcdVVVxOB1ohkFyO0GguR8AVVUxTRNFUap+hvL+isDlclU7K5bVseKB7PvPha62DlQ/
      T5VKBVVVq36tdF235DWHw/V6P886VQc4lYhwY34JY8skH6ywldfQ1lYZ6W7h2rVPwOHh2EiI
      nqGjOHIJ1uMpuloC1U5WCIEFAQ6E2vnWD35y8P3QfT87f77l4Ou6BoDWaicnhLiPHIUWwsYk
      wELYmARYCBuTAAthYxJgIWxMAiyEjUmAhbAxCbAQNiYBFsLGJMBC2JgEWAgbkwALYWMSYCFs
      TAIshI1JgIWwMQmwEDYmARbCxiTAQtiYBFgIG5MAC2FjEmAhbEwCLISNSYCFsDEJsBA2JgEW
      wsYkwELYmCUBLhXyVAwTMMmkkuRLGmCSTe+SK5QxDR2tUsHQNcqaNZ3chBAW9EYqpLf46Lfv
      M/zN71OXWWc+nqNSzDPc187i+jamVmBocIBkoUxpO0LrwCSNLocVYxfipVd1gL31zYwP9VIB
      4qkcY6MjxNbmiMS26R8eRdtZJp0tcufmVboGp2j0u9F1HdM0MQzDsv611fbSNQwDwJI6VvX1
      LRQKlvTkrXY8+y1cqx2LVXWsWsYvQp2qA3w/l2KSL1col0p4XG6KpRJaoYDLX8/AkTGSW3Eq
      RjtOh3Vb4P1G2NX2Z9U0Dai+z6umaZb09S0UCtTU1FRdR9O0F64/sBXz9KLUqXofOJWIsLC5
      w/KNG7T09LJ66xoVd5D+gX4SK7dIG35CDX4aGkKMD7UT385UO0khxD2W9Ad+7fX2g++nTp85
      +Pr41OmDr0O1AAH81U5QCHFATiMJYWMSYCFsTAIshI1JgIWwMQmwEDZm6XlgIcTTt3/tw9ra
      mgRYiMPONE3S6TSJRIJIJEIqleK1115jZ2dHAizEYaPrOtlslng8zubmJseOHeP999+nubmZ
      3t5empub8Xq9nD59WgIsxPOm6zqZTIZYLEY4HOa3v/0tqqoeBNbn8/HWW2899LJaCbAQz1il
      UiGbzeLxeJienmZ7exun00ljYyPd3d288cYbT3wdvARYiKesUqmgKAqLi4sH+7AOh4Pz588z
      ODjIyZMn8Xq9X+umHAmwEBbav2UynU4TjUbZ3Nxkd3eX8+fPUygUGBoaorGx0ZI7zUACLERV
      9k/p5HK5g8COjo5y+/Zt/H4/Q0NDNDU14fF4aG5utnz6EmAh7rP3oAmTimGg6yZFrUKd143L
      6Tj4+f5R4kgkQmtrK5988gm6rhMOhzly5AhNTU28/vrrT32sumFIgMXLxzRNKrrB3XiaRLrI
      TrpAMlNgJ11gJ1MglS2RyhXJ5EoUNZ3etnp+eLaX02Pd3Ji5TjQapaamhnA4jNvt5tKlS3g8
      nmc29rKmc+VOlHc+XZAAi5eDYZpk8iWuL8b4bG6T60sxtlN5nA4HQb+HhnovjXVe2hr8jHQ1
      EayrYTcRZXV1ldn5z/jp5fcZGTvKd189wnffepvaGs/BPuz+01yeFtM00Q2Tu/EUH95Y59+v
      LpPOl3hlrFMCLF5chmEyv77N1flNPpuPsrC+g8vpYKIvxI/PjzDe20R3WwOqorC7u8vGxgbR
      aJTt+Db93adwhrq4ODVMc3Mz2+kiP/vgDn//3hK/uLrBD88N88apfrye6h+l86ixr8VTzCzF
      ubEU5+ZqgnSuRLjJz/deGeLSyV4a6rwo5v5hM2D5kzl6pgZRHfa5x0GeifX48bwMz8Sq6Aab
      21nW4ilWYymWo0luLifIFMr0tgU4PtjGieEwYz0hnA6FnZ0d1tfXicfjdHV1USqVAGhvb6e5
      ufmRY0xli/z8o3n+9eMFFAXefnWYN6Z6aKz3oRsmxXKFklahVNYpaRWKZZ1iWaNYruB2OnA4
      VJyquve3Q8GhqjgdKg6HQipTYGkzxY2lOLPLCdL5Ei1BH2N9IY72tXC0v4WWBt+X3hMS4Hsk
      wI922AKcTOdYiWVYi6VYje2yupliPZGmpFXwelx0NNfR1RJgtKeZk0NtBP0ekskkm5ub1NXV
      EY1GSafTNDc3093dTWNjI6qqPvGyNk2TXFHj3StL/PyjOXbSBZwOlYpu3Pv5vf+HCSaoqopu
      GHhcDnTDRDcM2E+d8sVfJhAK+hjtaWbivsCqivLIsUmA75EAP9phCXAqV+RfPprn55fnKZV1
      Wht9dDTX0dMWpKc1SE9bgFCwFgWT3WQSRVFYX19nYWGBQCBAW1sb3d3d1NfXoyhK1e8b09zb
      4n42FwFFpcbtPPjjcTv2vnY5cdzLk3IvpSZ7R5B1fe9gWkU3qBgGmAahoB+n48lXJrIPLA69
      dK7Ev368wM8/msPjcvInF0f45sl+aj2uvS1fpYKmacTjcf59+kNyuRz19fUMDw8zOjrKxMSE
      JSvV36coCl6Pi9Mj7dY9Vtb51R65LAEWh1YmX+LfPl3knz+cw6mq/PHFUb411Y/bAblcjtn5
      22xublIoFBgYGKC9vZ3Tp09TX1//VAJ7GEmAxaGTLZT55ZUlfvbBHQC+e7qPqf4Gsqlt3vvN
      rwgEAnR0dOB0Ojl9+jR1dXW4XK6XIrC/TwIsDgXdMFiPp/lodp13PpljdzfJREct35rqo72l
      lrXledra2jhz5gxer5fa2trnPeRDQQIsnhvDMNncyXL5xgq/+fQ2SxsJGvw1hGvy/NHFQQZ6
      u2lvbycQCDA4OPjMLpywEwmweKYM0ySWSPLpzTV+99ki01c/w+dROTXWyx//2aucOjaK2+mw
      5KDQy8DSAGulPAtzc7gDrXS3NXF3eQHV10R7cz15TcepF6k4/ATraqycrDhkTNOkUKqQK5TQ
      yiV0w2RjK83M7B2u3lwiEtuixhfg3Cun+A/f+s+MD3bh8z6ba4lfNJYGeDuyhiPQQjq+zkoh
      SaCtH217kVhCZyu5iWH6OHmsGdM0D/7st/WshhUtSq2oYWWd/fPb1bKqfathGH/wIFF8N8+1
      hU1WItusRHdYuHOLxNY2LpeD1rYwoyMjdDQF+Ms/fZux3hZ8NV/ewn6Vj8WH7bV6nnUsDbCp
      Oijn0hg40A0DVVVQVAemaZJJ7VLXENj7f/fCqyhK1R+V9q9DseojlxV1rDiFUalULDsV8jQu
      5Nhf+Ua30vz9Lz7k397/HKNcoDvcwCuvvsY3xl9nsKeDcKiBgH/vghSrrsSCw/V6P886lgZY
      VUzSqTS6rtPf18nstSsoTg+TIy0YA+M481usx1N0tQSsnKx4RgzDOLhx/db8Cv8+PcfdvJ9a
      M8t/+4s3uXhqlPo66T/5LFka4NbuYVq7v/j+/PmWg6/rggCtVk5OPEX7W9hcLsfGxgbJZJKB
      wUH+37/8ks9WMtzdNRjo6eG//2iSV8c7v/IVRMIachT6GTNMk+XoLhXdIOjz4PW4qHE793Y3
      ABRQePYXJOzv1mSzWTY3N2lra+Pdd9/F5XLR0tKC6a7n//x6gY+WnPS09vG//mSUM6MdOG10
      3fyLSAL8jBTLFT6aXedX00vMLicwvriHBACPy4HX48LruXdBvMvBRH8rF45109USeCpXGe0H
      1uFwcPnyZRKJBF6vl/b2dnp7e3nr7e/z2UKcX3y6yOcLKwx3NvE///w1po6EcViwHyuqJ3cj
      3fM07kYyTZO5uzv8+uoS711fwzTh1YlOLkz20Bmqp6hVKJQ0CqUv/50vVYgnM9xc2WItnqa3
      LciFY92cm+imrdH3lcJ8/91I+8tq//GmW1tb+Hw+Lly4QDabJRQK4XA4iGxl+OX0Mr++uky+
      qHF6JMx3zw4y0d+KWsWK5GneD/yy1pEt8FOQzBR5f2aNX00vcTeeZririf/yveOcm+jCV/Nk
      1+wWCgXcbg+rsRS/u7bKO58u8bfvzjDc1cQ3Jrt5ZayTpsAfvpzQNE2SySRbW1tEo1F2dna4
      dOkSmqYxOjp6EFhFUXB5vHw4u8G7ny5yYzlBV0s9P7kwwsXjvfhrnHtHoV/Ca40PO9kC31Pt
      FljXDa4vxXjn00Wm70Spq3Vz/mg3l0720dlS/5U/ct5/P/D+Q9jm7m7zu+trfHprg0yhzGhP
      Mz2tQYL+Ghrqagj4PLjMEvnMLjvbcc6cOsX09BVCoRAtrW3U+OopVwxyRY1cUSObL5POl1iO
      JvnkVoRyRefsaAffPjXAke4mHKpycN/sYbgfeN+LsOW0qo4E+J6vE2DTNNlK5Xnv2hq/nF4i
      kcoz0RvizdMDHB9qo8b99c/jPuqG/v2byGdXEnw4s8bc8jqJRAKPr4G1+etoBtT4AtTWNxJs
      aKLW40IzDAqlCrpuYNx7bKr73j53rcdFwO/h3EQX5492E/B5HpimBPjw1pGP0F9DuaJzYynO
      L68scXU+Sn2thwvHerh0so/m+hpcrqdzL2qlUiGZTFJbW0s+tkCnusWRyTpCoQH6BgZwOH6I
      ZkAqW2I3WySZKZLOFfB5PdTVuqmr9VBf68HvdeNy3nsW071nMqmqfDy2IwnwEzIMk+hOhsuz
      6/z66grbqTzjfS38jz95hWODrQdPJ7TyThlN01BVlfn5ee7evUsul8Pn8zE1NcXk5CRerxe3
      2/3AyqKpvvZLNeTGgBeXBPgPqOh796hOz0X4+NYGq5spGupq+MZkD68f7yHcVGfZlmt/T2Z7
      e5todO95xJqmcebMGVwuF8ePHycQCDw0sOLlJQH+PaVyhZXNXT65FeHKnQ02d3I0B2o5MdTG
      X745yWBHoyXPAjZNk3K5TCqVYnNzk2g0ysjICPF4HI/Hw7Fjx2hpaZHAij9IAsxemFZjKd69
      ssT1xTg7mSLtzXWcHevk9Eg73a0BPK7qFtX9gY1GozQ3N7O8vEw+nyccDnPy5EmCwSA9PT3A
      /mkkCa/4wx77rixkU+TK0NQYoJjN4fb7eJGuei1pFf75w3n+4TeztDfX8Z0zg5wcDtPRXHfw
      ONCv4/7AOp1OFhYWiEQi1NbWEg6Hqa+v59y5c5bcmSNeXo8JsMY7//QzdvN5jl/6I/T5Wfrf
      /CbBZzO2p8o0TdZiKf7mZ9OsxlL8pzcmeONUPzUe99euVy6X0TSNlZUVlpaWyOfz+P1+xsbG
      GB8f58SJE3JASVjqsVvgmkArf/6T1/jHv/s7Mhkn/W8+i2E9XWVN5xcfL/B/f32Dwc5G/vq/
      vkFLwPuVauzfrbO7u8va2hqxWIx8Ps/Q0BChUIipqSmCwSBOp+yliKfnMe8uF6+cPYGOm+/9
      8Icsr8bxPZtxPRWmabKRyPA3/zTNwsYOf/GtCb73yhBOh/pEp380TWN7e5tIJEIsFqOtrQ2/
      34/H4+H06dMEg0EMw3hpnkksnr/Hbh4CTY386mf/wFZRoWTWMnFi4lmMy3IV3eCdTxb521/O
      0NMW4K//6o0/+GCB/Su8tra2iEQieL1eKpUKiUSCcDjM2bNnCQaDD+zDWvGIICGe1BN8vtPJ
      ltx8+81v8t6//QrtyX7pUNlO5fnf//gJt1a3+LNLE3z/3DAu55cfDwMcBLRSqZDJZLh58yZN
      TU2Ew+GDx5sKcZg8QRbdvH5hig8++IDxcxf4anuKh8NKLAXAX//VG/S0fXEIrlKpkM/n2d3d
      ZXp6mkKhQDgcpq+vjyNHjjA2NiYfhcWh9pgAl/jlO5f51psXeevtLn73i3fp6HrTdiGeGg4z
      NRzGMAySySQLCwtEo1GKxSIDAwMMDw9z8eLFgxYdQtjFYwLspJi8y7VbiwScBVa2c5x7NuOy
      RLlcJhaLEY1GiUaj+P1+JicnCQQCjIyM4PPt3RyvKIo87V/Y0mMC7OA7P/oxn358mYTu5kd/
      9Pah3v8tFAokEgmi0Sjlcpne3l6Wl5cJh8OMjo5SW1uLw+EgFAo976EKYYnH5tFV4+fcxTee
      xVi+EtM0DwKbTCZpbm7mypUrNDY2Eg6HCYfD+Hw+Ojs7ZT9WvLAO8wb1S0zTJJ/Pk06ncblc
      fPDBBwA0NjbS2tpKe3s7P/jBD1DVJ+9uLoTdHdoAm6ZJsVhE13VmZmaIx+MoikJLSwsnTpzg
      0qVL1NbWoqrqwRMjhHjZHJoA7184sbGxcfDERI/HwyuvvEJraysTExMH+7AAHo/n4PeEeFk9
      1wCXSiUikQiRSITd3V3OnTtHJBKhra2No0eP4vP5UFVVLqAQ4hGea4D3jxi3t7czOTmJ3+/n
      3Dk7nagS4vmyNMB6Kctn127i8gU50tvK59dvorp9TAx3s1Oo4MxvQ7CbtuDepSCdnZ10dnZa
      OQQhXiqWBvju0gK66qTW7SaxGaF/7ATa9iLbu/kv+gP37t0UYOW+q/QHfrRn1R/4SevsXzhT
      jcP2Wr0w/YHLWoXuwXHykTl2KtDR8vD+wKqqHvQHrvbosfQHfryn0R/465D+wNbXsfTcS09v
      F/MzV9lMlejpDHP72hWWN7M01HvpHhgnVFNkPZ5CVVUcDoec+hGiSpZugT31rVz4xhc9gKU/
      sBBPl2wChbAxCbAQNiYBFsLGJMBC2JgEWAgbkwALYWMSYCFsTAIshI1JgIWwMQmwEDYmARbC
      xiTAQtiYBFgIG5MAC2FjEmAhbEwCLISNSYCFsDEJsBA2JgEWwsYkwELYmARYCBuTAAthYxJg
      IWxMAiyEjUmAhbAxCbAQNmZ5gE1dI5XJASaZ3R2y+RKGrlPWKhiVMqVy9R33hBB7LG/wvTp/
      m9uxDOfHe7iznsQs5RgcGCBZLFPcihAemsTjtnqqQrycLA1wIRUj72ygua5EMp2mb/AI2s4y
      6WyROzen6Ro6RYPPja7rmKaJYRiW9a+ttpeuYRgAltSxqq9voVCwpCdvtePZb+Fa7VisqmPV
      Mn4R6lga4FgsTma3yOrqMr6xMZRikUq+gKs+wODoBMlEDM1ox+VwWDbN/UbY1fZn1TQNqL7P
      q6ZplvT1LRQK1NTUVF1H07QXrj+wFfP0otSxNMC9w0fpBdraWuhqb+XG9RuoviaGG3ykijW0
      N9SxtZMh3Fxv5WSFeGlZvg8M0NPdA8DkyVMH/xby7v3texoTFOIlJaeRhLAxCbAQNiYBFsLG
      JMBC2JgEWAgbkwALYWMSYCFsTAIshI1JgIWwMQmwEDYmARbCxiTAQtiYBFgIG5MAC2FjEmAh
      bEwCLISNSYCFsDEJsBA2JgEWwsYkwELYmARYCBuTAAthYxJgIWxMAiyEjUmAhbAxCbAQNmZp
      a5VKKc+dO3egJshIfyfzt2+i+kP0tQXJlg08RoGC6qep3mvlZIV4aVkaYF3X6R0aZ3XuOitL
      JTzN3VS2ltlKOsiVC+zGdzh28sTB/zdN86DlZDX2W5VWWwOwpI5hGFV3FdwfixUtPa2YJyvq
      WLVcrBjLi1LH0gB7vD4iczdRfC24lBx+v5+y5qdUKjN34yrdI6/icigH/YGh+l6xYM2KYP/3
      rVqhWFHjsNSxciyKohyq8di9jqUB3rq7QEapo7etCT1jsB7ZwEgn6ehp4Mjxs+Rjd0nmm2io
      dVs2TdM0UVUVR5U9h/fXfFbUcTgcVa+YFEWxpM7+eKqxv4yr7esLWNIf2Ip5elHqWBpgb6AJ
      dz5BZDPOQF8PLcZd1NA4jXUefLqBu62ZXLECWBdgIV5mlgbYF2hiJNB08H1rR8/B1957U6r3
      WzlFIV5uchpJCBuTAAthYxJgIWxMAiyEjUmAhbAxCbAQNiYBFsLGJMBC2JgEWAgbkwALYWMS
      YCFsTAIshI1JgIWwMQmwEDYmARbCxiTAQtiYBFgIG5MAC2FjEmAhbEwCLISNSYCFsDEJsBA2
      ZuljZe9nVErMztxA9TUx1BUiXdLxVLIUXQ2EAtIbSQgrPLUtcHx9lWDnELX6LlvJLMndLW6v
      xGmoq3lakxTipfPUAqwZOj6vF6+vFq2sMT97nZpACKdafS8kIcSepxbgYF0dy0sLrG8mqfPX
      MHLsDM58lES68LQmKcRL56ntA9eFOhh0bKF4+vDXOPEbJs5wiJJWfRtGIcSeLwW4lC2w8N6s
      JS0/vxAj9oifNPW1EOxstmQqh6U/8H6tw9K28jD1B7a6B3O1XoQ6Xwpw14kBytln9xE3HdvF
      7avBG/RVXavaN7rD4cAwjKrrqKqKrutVt9B0Op2WrASsmifDMCxpL6rretWtOPfHY1Xzcyta
      wT6v1+pLAfY1+PE1PLv2gbntDKZhWtK/1or+rIetjqqqVb+5KpXKoZknXdcP+h5XY38rVe0K
      ZX9FW20dq17vr/NaPbV94GfJioV32OpYsbUDcLlcltQ5LCskwLJdPKfTaUktq943X+e1eiEC
      bNULepjqWDUWq1YEVs2TLJtH+zrjsVeATRPDNFFUde/re/tlpmlgGCYoCo57C8E0zUcukP2D
      Mnu/a6IbBg5VxTSMvfqKiqoqB/tHT1Tn3u/u7Z/pmCYoqoqqgK6bOByP3voc1FEUDNPENEFV
      lYP53Zu+iWGYj9yK/f48GbqB6tgbt2HoKIoDReGJ50lRVMA4mCZwUHNvn8/ANJW9cX6FZQMm
      umEevE5741GfqM7ePiIHr/nBa3zfcnr0MjYwUVCVvfkwlb2xm8a9f1dVMAwMk715fGiVvTrc
      ++n+2BUFTMMARbn3Gt4bp8PxyDr373sbhoGi7k3z/uWxt4++9955xGjsFeCd2F0++nCGiz95
      m82bn5MsVqhQy0Crl41EirVInO9/703W52a4HcvynYvnHlpnc22Bj2+u8uPvXuLG1U8pGyaq
      v5Umd4ntdJ5oIsPpiW6WN7YJhtoZ7m1/SBWDlTs3uLOR4zvfPMP0xx9iKBAIj+LIrZPJ59ku
      1tLqLVAynOCp59TkkQeqmIbO7ZlpYgUXF8+M8tF7n6BQoXvyDOszV3B4nPhbh6lsLZDXDJq6
      xxjsaHygzvbmGr/6eJb/+OO3WJj9jFSxQsVRR7i2TDStUakojA20sXR3k3yuzNnzr+J5yPsi
      dneRyzNL/OitN5mZvkzZUHAF2nEXYmQrKobDy9kTY8xe/jUpfx+vHR14sIhpsnT7OvOxHN99
      /QxXPrqMgU5j71Eyd2+gO9y4/W00OHPE0kXaOvvoan1wngDmZqbZyOi8fnqUjz65gamXGTw6
      ydLsDZxOB8H2PnbXF1GcTnyhbsb6Ox4souW5+vH7aM1HOdaqcvX2MpVymbGxEebnF9A1jZHj
      UyzNfoZhmPRNnKUt6HmwTCHNpx/8huDIRdocO9xZTVAua4yPdHNnIYJWLjF19iQLN25TKqbp
      OnqejqD7gTrZnU1+89E0r174NsX4Aus7OUq6gyNtPpbiaUpluHD+NFtrt/lwNsGP37rw0GWT
      jK3b62aGxrZuBrvaAJNMQePY8ZPoxSQtnf1MDIbpG5pAyybIqEGa/Y/enwj3DNHZGgQMioaT
      4yenyG3H6BoYoS9Ux8ixk6wuLqOoUCgUePhxQZW+kTFC9bV7a3dXLVOnzrAVXWJw7DiN9XUc
      Pz6G2+0GRcHtfvh4FNXBkfHj1HsdoGVxBTo4fWqE9cUobrcLRVFxuzRMVwtnXzlFfivx0DrN
      4R76u1oByOQrHDsxhZLfQXG6UQG3200g1MHRkX68tV4cj9g0tHUP0h1uAKBkOjlx8hTp7eje
      fNyrsxNZxt3cg8/9iLePojAweoymOg+YZUxnkKnTx9m6u47b7UZRFNxuJ0sra6iGTqFQengd
      4MjkKQI1Knohjbe5h1MTfaxFd3C7nCiKisvt2lu2ior7UfuQrlqmjo3jUBXy2Qyt3UOMdDWz
      uh6hoa2PieFO1paWaWjr49Sp4yRjkYeX8dYzOT6CQ4VcJkPPkaN0Nrm5uxGnY3Cc4XY/sbTC
      8anj+L211Dxi+fgb2xgb6gYgky4wMnmcoJlnYyfH8NFjtDhLbGczbKShK1T3yGXT0NplrwB/
      QWF87Aiz165R0PY+at6ejzAy2M7K0jK53RiLiyukC9pjyjgYG+ri82s3MFQHYLIcT9MT8uPy
      +pk4dhJPOUVRf0wZ1clgVwvXZ2+hOmrALLOdNWnyucgWNMbHRylk04+fLXcTXQ0ms7cXcblN
      NEeAsdFB0jspdL2EqVfQlce/ZOPjw9y4dp28rrCbynFkfAI3eVI7cWbmNzh24hjOJ9htGx3o
      4frMLKbiJJUvMTExjpZLs7Byl2RsnaXFJYqVxxRRvAx013Nj9g6KW6GgeRgfGyWX3qa2vokT
      p06TS0YfOxZXfQdtNTlm51ZxUcH0NjJ2pJdkLEbZ6WNidJBUcvexdRo7+3Fkoyyux2lu78Vn
      7DK3HMFTU4NWqWBUShjK4w8mdQ6MkN6YI5LI0DEwhra1xGpkB7fT5PPpaTpHT1cKHxIAAAJ2
      SURBVNJU+/gPuINjo6zdusFWrsLw+Bib87NspkskVhfI5TMsLi2ylXr0qV3HT3/6058+dipP
      SXozSU19LR7fk93gEF1bYHF1nUxRx+uosL2bpqt3iKDfSTpvEGoMEgp30tnRgdvtor215SFV
      TFbmbrK2vknJcKGUs6QyWfqOTOA1U5TUJpoCXuq8Dq5fn0X1N9ERauCBXSujwu3ZGSKbcRS3
      j1Jmh3S2wNjkMco7UWpauqmrcVHM7LByN0p9YwuhxsADozH0ErPXPmczsU1NXROprQg5zcPk
      5AiZ+CqRWJKWjj68ZppbC+v0Dg3jq3nwDRZZmWN5bYNsyaBG0dhJpujoHyHoNVlYWkX11KOU
      dtjNlkntpmkKhR6yFTZZW7jF6t0oBcMJWpbddJbBsQncep6ltXW8wRAnjh8n3NJEjb+Bloec
      djRNk9szV4jEtlA99RTTW6RzBmMT42iZGGuROMGWTtqDTmZuzhNs6aIp+LDTl2Vmpj9jM7GF
      u66eVGKbkuJhYmyY3c27RBNJ2rp60LNbRGLbNIc7CdbVPlBFy+/y+cwtEttJAvX1bCUSqLVB
      BrtCrK9vYDj9TIwPk4wssxzZYXj0CO6HfEQppLeYuTnH9nYKf52Xrfg2tU1hOptqWF+P4Qq0
      0hM0mVvdIpdJ4guEqHE/eIR6Z3OVOwur7GaL+GtUEttJQp39BJ0VIrFtGtt7GB0ZoaczjNvt
      oauj9SHLZm93RzGtOAP9Na1/vkSgo4m60INvbCHE49n0I7QQAiTAQtiaBFgIG5MAC2FjEmAh
      bEwCLISNSYCFsDEJsBA2JgEWwsYkwELYmARYCBuTAAthY/8f8wpsixD3NwQAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='240' name='India' width='240'>
      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
      YII=
    </thumbnail>
    <thumbnail height='240' name='Sheet 11' width='240'>
      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
      D78ptqR2O/jUAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='240' name='Sheet 6' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Sheet 7' width='240'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='240' name='Sheet 7 (2)' width='240'>
      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
      fBykAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='240' name='Sheet 8' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Sheet 8 (2)' width='240'>
      iVBORw0KGgoAAAANSUhEUgAAAPAAAADwCAYAAAA+VemSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAUbUlEQVR4nO3d63cU933H8c/Mzu7sRavrrq4rcQcDsh2MBRjb2E5sx60du3Fcu3FPz2l6
      2nPyMA/7D+TkSU76IGnTJs0JaUJO2yR1gh0TDAZjsMEYY0BCICQEQkgIJK2k3dXeZmd+fcAl
      AuuyknZ29Fs+r2fArvYLR29mNPObGUUIIUBEUlKdHoCIFo4BE0lMm/qLRCIBy7KcmoWI5umu
      gC3LQnl5uVOzENE8cReaSGIMmEhiDJhIYgyYSGIMmEhiDJhIYgyYSGIMmEhiDJhIYgyYSGIM
      mEhiDJhIYgyYSGIMmEhiDJhIYgyYSGIMmEhiDJhIYgyYSGIMmEhiDJhIYgyYSGIMmEhiDJhI
      YgyYSGIMmEhiDJhIYgyYSGIMmEhiDJhIYgyYSGIMmEhiDJhIYgyYSGIMmEhiDJhIYgyYSGIM
      mEhiDJhIYgyYSGIMmEhiDJhIYgyYSGIMmEhiDJhIYgyYSGIMmEhiDJhIYgyYSGIMmEhiDJhI
      YgyYKA+WmUXnqc/Q0d0HIXI4f+YkzpzvhRDC0bk0Rz+dSBJmZhKKtxJjnYfQGXgR0MqR7P4I
      pyqasKlBn/F9Q5fO4X//5xC+9c/fRs/hvTg/MIzKhg1o1sfR3jeEQM1KvPzstgXPxS0wUR7c
      /grEB86jfcjCstpqGKO9OHElg5Uhz6zvq6xfjgeXN0FAYGAsgdf++m8wPtSFvhtj+MZrb2By
      pHdRczFgojwY6TRan3gez7ZW4dMLQ1jT9gz+amsDjnaPzvo+r88HVQEABW0PbcTu3bsxmjCw
      bfOX8PYffo8bE5lFzcVdaKI8mNkE3j9wBPBW4OlWDw7ufRs5VwDPPV896/s6Pv0Qxzo+x3B1
      NTY16TAyabS1PY7UZAI5I4vNmx9b1FyKmPJTeCwWQ3l5+aK+IBEVD7fARPMghIWcZcK0TKgw
      oSkWcpaKTE6DqihQVAWaqkLTVKiKYvs8DJjoHpawkDbSiGcmMDgxgMGJqxiZHEY0OYrx1BjS
      RhqZXAZP1yh4KjiGM8Or8bMTm+FSVbhcCrweDT7djaDfg1CFH3VVZaivDqApXI5QhR8+jwaX
      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
      1Y0Pw6vxBqrTYcC05K0NhfGPbY+hkqu1voABkxSaKyrx7a2Po6WyyulRlhQGTNKo8vnxT49u
      w5ZIC59xeIsixJ9vlR+LxVBezvNvtLQJIfD5tQHs7uxAKmc4PY6jGDBJa3RyEr87ewYXoyNO
      j+IYBkxSMy0Ln/T3YV9PF5LG/bc1ZsAkPSEEJtJp/OnCOZweGrxvHqC2vKqaAVPpsIRA31gU
      e7vP49JY1OlxbBMOlOErq9bgwfpGBkylJ2dZuDByAwcv9uDKxJjT4xRMjd+PJ5atxOamZui3
      FrYwYCpZOcvExdFRHL7ci4vREWl3rRvLK/B4ywq01tdD19x3nUJjwFTyTMvC9UQcn/T34ez1
      IcSzGadHmpNX07A2VIu2SAtWVFXD7XJN+zoGTPcNIQRShoELo8M4NTiAvvHokjpy7Xa50Fxe
      idb6BmyorUel1zvn0ysYMN2XhBCIZzO4FB1F1/ANXB6LYiydKuputgKgXPciUlGJNaEw1obC
      qPL5oc7jkTMMmAhA1swhmkyif2IcV8bHMBibwHg6hZRhwCxA1KqiwKtpCOo6GoMViFRUormy
      CrWBMvgW8XQKBkw0DSEEkoaBRDaDsVQS0WQSsUwasUwaScNA2jCQMU2YlgVLCLgUBZqqwqWq
      0DUNZR4dZR4dQV1Hjd+Pal8AZboHAbcHagFvn8uAiSTGq6SppF2/dBaHPj0L4avGG197FgBw
      dP9u9A5O4MkXX0Xv8fcwMBzH1udfQbL3ONp7r+ORHS9gfUvI4cnzw8sJqaTVNK/DN77+MoSR
      vPU7GYxlvHjzzZfQ8ckBJDL1+OYbL+DUx8dxdczEm9/8Oi51tDs683xwC0wlzcpM4I97DuLJ
      Z164/TvQVDfg0qEpQZRXRPGHPf1IZfwo9/kA1Q1NsRydeT64BaaSdvidt3AjZeDj4ycwOXIF
      gxMqzGQ/du38NerXPwwFQCqWwaM7HocXY9j1y10INq92euy88SAW3ScEuto7sLz1QegldDsP
      BkwkMe5CE0mMARNJjAETSYwBE0mMARNJjAETSYwBE0mMARNJjAETSYwBE0mMARNJjAETSYwB
      E0mMARNJjAETSYwBE0mMARNJjAETSYwBE0mMARNJjAETSYwBE0mMARNJjAETSYwBE0mMARNJ
      jAETSYwBE0mMARNJjAETSYwBE0mMARNJjAETSYwBE0mMARNJjAETSYwBE0mMARNJjAETSYwB
      E0mMARNJjAETSYwBE0mMARNJjAETSYwBE0mMARNJjAETSYwBE0mMARNJjAETSez/AWfv3qas
      hs5sAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='240' name='Sheet 9' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Trend of Each Co2 Emission Category' width='240'>
      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
      9p10oRiNAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
